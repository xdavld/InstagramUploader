{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"UrlParams.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/UrlParams.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Arr from \"effect/Array\"\nimport type * as Effect from \"effect/Effect\"\nimport * as Either from \"effect/Either\"\nimport { dual } from \"effect/Function\"\nimport * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface UrlParams extends ReadonlyArray<readonly [string, string]> {}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Input =\n  | Readonly<Record<string, Coercible | ReadonlyArray<Coercible>>>\n  | Iterable<readonly [string, Coercible]>\n  | URLSearchParams\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Coercible = string | number | bigint | boolean | null | undefined\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromInput = (input: Input): UrlParams => {\n  const entries = Symbol.iterator in input ? Arr.fromIterable(input) : Object.entries(input)\n  const out: Array<readonly [string, string]> = []\n  for (const [key, value] of entries) {\n    if (Array.isArray(value)) {\n      for (let i = 0; i < value.length; i++) {\n        if (value[i] !== undefined) {\n          out.push([key, String(value[i])])\n        }\n      }\n    } else if (value !== undefined) {\n      out.push([key, String(value)])\n    }\n  }\n  return out\n}\n\n/**\n * @since 1.0.0\n * @category schemas\n */\nexport const schema: Schema.Schema<UrlParams, ReadonlyArray<readonly [string, string]>> = Schema.Array(\n  Schema.Tuple(Schema.String, Schema.String)\n).annotations({ identifier: \"UrlParams\" })\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: UrlParams = []\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const getAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: UrlParams) => ReadonlyArray<string>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string): ReadonlyArray<string>\n} = dual(\n  2,\n  (self: UrlParams, key: string): ReadonlyArray<string> =>\n    Arr.reduce(self, [] as Array<string>, (acc, [k, value]) => {\n      if (k === key) {\n        acc.push(value)\n      }\n      return acc\n    })\n)\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const getFirst: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: UrlParams) => Option.Option<string>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string): Option.Option<string>\n} = dual(2, (self: UrlParams, key: string): Option.Option<string> =>\n  Option.map(\n    Arr.findFirst(self, ([k]) => k === key),\n    ([, value]) => value\n  ))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const getLast: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: UrlParams) => Option.Option<string>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string): Option.Option<string>\n} = dual(2, (self: UrlParams, key: string): Option.Option<string> =>\n  Option.map(\n    Arr.findLast(self, ([k]) => k === key),\n    ([, value]) => value\n  ))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const set: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: Coercible): (self: UrlParams) => UrlParams\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string, value: Coercible): UrlParams\n} = dual(3, (self: UrlParams, key: string, value: Coercible): UrlParams =>\n  Arr.append(\n    Arr.filter(self, ([k]) => k !== key),\n    [key, String(value)]\n  ))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: Input): (self: UrlParams) => UrlParams\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, input: Input): UrlParams\n} = dual(2, (self: UrlParams, input: Input): UrlParams => {\n  const toSet = fromInput(input)\n  const keys = toSet.map(([k]) => k)\n  return Arr.appendAll(\n    Arr.filter(self, ([k]) => keys.includes(k)),\n    toSet\n  )\n})\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const append: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: Coercible): (self: UrlParams) => UrlParams\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string, value: Coercible): UrlParams\n} = dual(3, (self: UrlParams, key: string, value: Coercible): UrlParams =>\n  Arr.append(\n    self,\n    [key, String(value)]\n  ))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const appendAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: Input): (self: UrlParams) => UrlParams\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, input: Input): UrlParams\n} = dual(2, (self: UrlParams, input: Input): UrlParams => Arr.appendAll(self, fromInput(input)))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const remove: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: UrlParams) => UrlParams\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string): UrlParams\n} = dual(2, (self: UrlParams, key: string): UrlParams => Arr.filter(self, ([k]) => k !== key))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toString = (self: UrlParams): string => new URLSearchParams(self as any).toString()\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeUrl = (url: string, params: UrlParams, hash: Option.Option<string>): Either.Either<URL, Error> => {\n  try {\n    const urlInstance = new URL(url, baseUrl())\n    for (let i = 0; i < params.length; i++) {\n      const [key, value] = params[i]\n      if (value !== undefined) {\n        urlInstance.searchParams.append(key, value)\n      }\n    }\n    if (hash._tag === \"Some\") {\n      urlInstance.hash = hash.value\n    }\n    return Either.right(urlInstance)\n  } catch (e) {\n    return Either.left(e as Error)\n  }\n}\n\nconst baseUrl = (): string | undefined => {\n  if (\n    \"location\" in globalThis &&\n    globalThis.location !== undefined &&\n    globalThis.location.origin !== undefined &&\n    globalThis.location.pathname !== undefined\n  ) {\n    return location.origin + location.pathname\n  }\n  return undefined\n}\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined): {\n  (\n    field: string\n  ): (self: UrlParams) => Effect.Effect<A, ParseResult.ParseError, R>\n  (\n    self: UrlParams,\n    field: string\n  ): Effect.Effect<A, ParseResult.ParseError, R>\n} => {\n  const parse = Schema.decodeUnknown(Schema.parseJson(schema), options)\n  return dual<\n    (field: string) => (self: UrlParams) => Effect.Effect<A, ParseResult.ParseError, R>,\n    (self: UrlParams, field: string) => Effect.Effect<A, ParseResult.ParseError, R>\n  >(2, (self, field) => parse(Option.getOrElse(getLast(self, field), () => \"\")))\n}\n"],"names":["Arr","Either","dual","Option","Schema","fromInput","input","entries","Symbol","iterator","fromIterable","Object","out","key","value","Array","isArray","i","length","undefined","push","String","schema","Tuple","annotations","identifier","empty","getAll","self","reduce","acc","k","getFirst","map","findFirst","getLast","findLast","set","append","filter","setAll","toSet","keys","appendAll","includes","remove","toString","URLSearchParams","makeUrl","url","params","hash","urlInstance","URL","baseUrl","searchParams","_tag","right","e","left","globalThis","location","origin","pathname","schemaJson","options","parse","decodeUnknown","parseJson","field","getOrElse"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"file":"Headers.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/Headers.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport { FiberRefs } from \"effect\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { dual, identity } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport { type Redactable, symbolRedactable } from \"effect/Inspectable\"\nimport type * as Option from \"effect/Option\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Record from \"effect/Record\"\nimport * as Redacted from \"effect/Redacted\"\nimport * as Schema from \"effect/Schema\"\nimport * as String from \"effect/String\"\nimport type { Mutable } from \"effect/Types\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const HeadersTypeId: unique symbol = Symbol.for(\"@effect/platform/Headers\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type HeadersTypeId = typeof HeadersTypeId\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isHeaders = (u: unknown): u is Headers => Predicate.hasProperty(u, HeadersTypeId)\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Headers extends Redactable {\n  readonly [HeadersTypeId]: HeadersTypeId\n  readonly [key: string]: string\n}\n\nconst Proto = Object.assign(Object.create(null), {\n  [HeadersTypeId]: HeadersTypeId,\n  [symbolRedactable](\n    this: Headers,\n    fiberRefs: FiberRefs.FiberRefs\n  ): Record<string, string | Redacted.Redacted<string>> {\n    return redact(this, FiberRefs.getOrDefault(fiberRefs, currentRedactedNames))\n  }\n})\n\nconst make = (input: Record.ReadonlyRecord<string, string>): Mutable<Headers> =>\n  Object.assign(Object.create(Proto), input) as Headers\n\n/**\n * @since 1.0.0\n * @category schemas\n */\nexport const schemaFromSelf: Schema.Schema<Headers> = Schema.declare(isHeaders, {\n  identifier: \"Headers\",\n  equivalence: () => Record.getEquivalence(String.Equivalence)\n})\n\n/**\n * @since 1.0.0\n * @category schemas\n */\nexport const schema: Schema.Schema<Headers, Record.ReadonlyRecord<string, string | ReadonlyArray<string>>> = Schema\n  .transform(\n    Schema.Record({ key: Schema.String, value: Schema.Union(Schema.String, Schema.Array(Schema.String)) }),\n    schemaFromSelf,\n    { strict: true, decode: (record) => fromInput(record), encode: identity }\n  )\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Input =\n  | Record.ReadonlyRecord<string, string | ReadonlyArray<string> | undefined>\n  | Iterable<readonly [string, string]>\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: Headers = Object.create(Proto)\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromInput: (input?: Input) => Headers = (input) => {\n  if (input === undefined) {\n    return empty\n  } else if (Symbol.iterator in input) {\n    const out: Record<string, string> = Object.create(Proto)\n    for (const [k, v] of input) {\n      out[k.toLowerCase()] = v\n    }\n    return out as Headers\n  }\n  const out: Record<string, string> = Object.create(Proto)\n  for (const [k, v] of Object.entries(input)) {\n    if (Array.isArray(v)) {\n      out[k.toLowerCase()] = v.join(\", \")\n    } else if (v !== undefined) {\n      out[k.toLowerCase()] = v as string\n    }\n  }\n  return out as Headers\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const unsafeFromRecord = (input: Record.ReadonlyRecord<string, string>): Headers =>\n  Object.setPrototypeOf(input, Proto) as Headers\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const has: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: Headers) => boolean\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string): boolean\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string) => (self: Headers) => boolean,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string) => boolean\n>(2, (self, key) => key.toLowerCase() in self)\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const get: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: Headers) => Option.Option<string>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string): Option.Option<string>\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string) => (self: Headers) => Option.Option<string>,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string) => Option.Option<string>\n>(2, (self, key) => Record.get(self as Record<string, string>, key.toLowerCase()))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const set: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string): (self: Headers) => Headers\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string, value: string): Headers\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string) => (self: Headers) => Headers,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string, value: string) => Headers\n>(3, (self, key, value) => {\n  const out = make(self)\n  out[key.toLowerCase()] = value\n  return out\n})\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (headers: Input): (self: Headers) => Headers\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, headers: Input): Headers\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (headers: Input) => (self: Headers) => Headers,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, headers: Input) => Headers\n>(2, (self, headers) =>\n  make({\n    ...self,\n    ...fromInput(headers)\n  }))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const merge: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (headers: Headers): (self: Headers) => Headers\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, headers: Headers): Headers\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (headers: Headers) => (self: Headers) => Headers,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, headers: Headers) => Headers\n>(2, (self, headers) => {\n  const out = make(self)\n  Object.assign(out, headers)\n  return out\n})\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const remove: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: Headers) => Headers\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string): Headers\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string) => (self: Headers) => Headers,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string) => Headers\n>(2, (self, key) => {\n  const out = make(self)\n  delete out[key.toLowerCase()]\n  return out\n})\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const redact: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string | RegExp | ReadonlyArray<string | RegExp>): (self: Headers) => Record<string, string | Redacted.Redacted>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string | RegExp | ReadonlyArray<string | RegExp>): Record<string, string | Redacted.Redacted>\n} = dual(\n  2,\n  (\n    self: Headers,\n    key: string | RegExp | ReadonlyArray<string | RegExp>\n  ): Record<string, string | Redacted.Redacted> => {\n    const out: Record<string, string | Redacted.Redacted> = { ...self }\n    const modify = (key: string | RegExp) => {\n      if (typeof key === \"string\") {\n        const k = key.toLowerCase()\n        if (k in self) {\n          out[k] = Redacted.make(self[k])\n        }\n      } else {\n        for (const name in self) {\n          if (key.test(name)) {\n            out[name] = Redacted.make(self[name])\n          }\n        }\n      }\n    }\n    if (Array.isArray(key)) {\n      for (let i = 0; i < key.length; i++) {\n        modify(key[i])\n      }\n    } else {\n      modify(key as string | RegExp)\n    }\n    return out\n  }\n)\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const currentRedactedNames: FiberRef.FiberRef<ReadonlyArray<string | RegExp>> = globalValue(\n  \"@effect/platform/Headers/currentRedactedNames\",\n  () =>\n    FiberRef.unsafeMake<ReadonlyArray<string | RegExp>>([\n      \"authorization\",\n      \"cookie\",\n      \"set-cookie\",\n      \"x-api-key\"\n    ])\n)\n"],"names":["FiberRefs","FiberRef","dual","identity","globalValue","symbolRedactable","Predicate","Record","Redacted","Schema","String","HeadersTypeId","Symbol","for","isHeaders","u","hasProperty","Proto","Object","assign","create","fiberRefs","redact","getOrDefault","currentRedactedNames","make","input","schemaFromSelf","declare","identifier","equivalence","getEquivalence","Equivalence","schema","transform","key","value","Union","Array","strict","decode","record","fromInput","encode","empty","undefined","iterator","out","k","v","toLowerCase","entries","isArray","join","unsafeFromRecord","setPrototypeOf","has","self","get","set","setAll","headers","merge","remove","modify","name","test","i","length","unsafeMake"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"file":"error.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/error.ts"],"sourcesContent":["import * as Data from \"effect/Data\"\nimport type * as Error from \"../Error.js\"\n\n/** @internal */\nexport const PlatformErrorTypeId: Error.PlatformErrorTypeId = Symbol.for(\n  \"@effect/platform/Error/PlatformErrorTypeId\"\n) as Error.PlatformErrorTypeId\n\nconst make =\n  <A extends Error.PlatformError>(tag: A[\"_tag\"]) => (props: Omit<A, Error.PlatformError.ProvidedFields>): A =>\n    Data.struct({\n      [PlatformErrorTypeId]: PlatformErrorTypeId,\n      _tag: tag,\n      ...props\n    } as A)\n\n/** @internal */\nexport const badArgument = make<Error.BadArgument>(\"BadArgument\")\n\n/** @internal */\nexport const systemError = make<Error.SystemError>(\"SystemError\")\n"],"names":["Data","PlatformErrorTypeId","Symbol","for","make","tag","props","struct","_tag","badArgument","systemError"],"mappings":";;;;;AAAA,OAAO,KAAKA,IAAI,MAAM,aAAa;;AAI5B,MAAMC,mBAAmB,GAAA,WAAA,GAA8BC,MAAM,CAACC,GAAG,CACtE,4CAA4C,CAChB;AAE9B,MAAMC,IAAI,IACwBC,GAAc,IAAMC,KAAkD,GACpGN,IAAI,gMAACO,MAAM,CAAC;YACV,CAACN,mBAAmB,CAAA,EAAGA,mBAAmB;YAC1CO,IAAI,EAAEH,GAAG;YACT,GAAGC,KAAAA;SACC,CAAC;AAGJ,MAAMG,WAAW,GAAA,WAAA,GAAGL,IAAI,CAAoB,aAAa,CAAC;AAG1D,MAAMM,WAAW,GAAA,WAAA,GAAGN,IAAI,CAAoB,aAAa,CAAC","ignoreList":[0]}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"file":"Error.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/Error.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Cause from \"effect/Cause\"\nimport * as Data from \"effect/Data\"\nimport * as Predicate from \"effect/Predicate\"\nimport type { Simplify } from \"effect/Types\"\nimport * as internal from \"./internal/error.js\"\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport const PlatformErrorTypeId: unique symbol = internal.PlatformErrorTypeId\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport type PlatformErrorTypeId = typeof PlatformErrorTypeId\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isPlatformError = (u: unknown): u is PlatformError => Predicate.hasProperty(u, PlatformErrorTypeId)\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport type PlatformError = BadArgument | SystemError\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport const TypeIdError = <const TypeId extends symbol, const Tag extends string>(\n  typeId: TypeId,\n  tag: Tag\n): new<A extends Record<string, any>>(\n  args: Simplify<A>\n) =>\n  & Cause.YieldableError\n  & Record<TypeId, TypeId>\n  & { readonly _tag: Tag }\n  & Readonly<A> =>\n{\n  class Base extends Data.Error<{}> {\n    readonly _tag = tag\n  }\n  ;(Base.prototype as any)[typeId] = typeId\n  ;(Base.prototype as any).name = tag\n  return Base as any\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace PlatformError {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface Base {\n    readonly [PlatformErrorTypeId]: typeof PlatformErrorTypeId\n    readonly _tag: string\n    readonly module: \"Clipboard\" | \"Command\" | \"FileSystem\" | \"KeyValueStore\" | \"Path\" | \"Stream\" | \"Terminal\"\n    readonly method: string\n    readonly message: string\n  }\n\n  /**\n   * @since 1.0.0\n   */\n  export type ProvidedFields = PlatformErrorTypeId | \"_tag\"\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport interface BadArgument extends PlatformError.Base {\n  readonly _tag: \"BadArgument\"\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport const BadArgument: (props: Omit<BadArgument, PlatformError.ProvidedFields>) => BadArgument = internal.badArgument\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport type SystemErrorReason =\n  | \"AlreadyExists\"\n  | \"BadResource\"\n  | \"Busy\"\n  | \"InvalidData\"\n  | \"NotFound\"\n  | \"PermissionDenied\"\n  | \"TimedOut\"\n  | \"UnexpectedEof\"\n  | \"Unknown\"\n  | \"WouldBlock\"\n  | \"WriteZero\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface SystemError extends PlatformError.Base {\n  readonly _tag: \"SystemError\"\n  readonly reason: SystemErrorReason\n  readonly syscall?: string | undefined\n  readonly pathOrDescriptor: string | number\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport const SystemError: (props: Omit<SystemError, PlatformError.ProvidedFields>) => SystemError = internal.systemError\n"],"names":["Data","Predicate","internal","PlatformErrorTypeId","isPlatformError","u","hasProperty","TypeIdError","typeId","tag","Base","Error","_tag","prototype","name","BadArgument","badArgument","SystemError","systemError"],"mappings":";;;;;;;AAOA,OAAO,KAAKE,QAAQ,MAAM,qBAAqB;AAF/C,OAAO,KAAKD,SAAS,MAAM,kBAAkB;AAD7C,OAAO,KAAKD,IAAI,MAAM,aAAa;;;;AAS5B,MAAMG,mBAAmB,GAAkBD,QAAQ,4PAACC,mBAAmB;AAYvE,MAAMC,eAAe,IAAIC,CAAU,GAAyBJ,SAAS,gMAACK,WAAW,CAACD,CAAC,EAAEF,mBAAmB,CAAC;AAYzG,MAAMI,WAAW,GAAGA,CACzBC,MAAc,EACdC,GAAQ,KAOQ;IAEhB,MAAMC,IAAK,SAAQV,IAAI,gMAACW,KAAS;QACtBC,IAAI,GAAGH,GAAG,CAAA;;;IAEnBC,IAAI,CAACG,SAAiB,CAACL,MAAM,CAAC,GAAGA,MAAM;IACvCE,IAAI,CAACG,SAAiB,CAACC,IAAI,GAAGL,GAAG;IACnC,OAAOC,IAAW;AACpB,CAAC;AAoCM,MAAMK,WAAW,GAA4Eb,QAAQ,4PAACc,WAAW;AAkCjH,MAAMC,WAAW,GAA4Ef,QAAQ,4PAACgB,WAAW","ignoreList":[0]}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"file":"fileSystem.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/fileSystem.ts"],"sourcesContent":["import * as Channel from \"effect/Channel\"\nimport * as Chunk from \"effect/Chunk\"\nimport { GenericTag } from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport { identity, pipe } from \"effect/Function\"\nimport * as Layer from \"effect/Layer\"\nimport * as Option from \"effect/Option\"\nimport * as Sink from \"effect/Sink\"\nimport * as Stream from \"effect/Stream\"\nimport * as Error from \"../Error.js\"\nimport type { File, FileSystem, Size as Size_, SizeInput, StreamOptions } from \"../FileSystem.js\"\n\n/** @internal */\nexport const tag = GenericTag<FileSystem>(\"@effect/platform/FileSystem\")\n\n/** @internal */\nexport const Size = (bytes: SizeInput) => typeof bytes === \"bigint\" ? bytes as Size_ : BigInt(bytes) as Size_\n\n/** @internal */\nexport const KiB = (n: number) => Size(n * 1024)\n\n/** @internal */\nexport const MiB = (n: number) => Size(n * 1024 * 1024)\n\n/** @internal */\nexport const GiB = (n: number) => Size(n * 1024 * 1024 * 1024)\n\n/** @internal */\nexport const TiB = (n: number) => Size(n * 1024 * 1024 * 1024 * 1024)\n\nconst bigint1024 = BigInt(1024)\nconst bigintPiB = bigint1024 * bigint1024 * bigint1024 * bigint1024 * bigint1024\n\n/** @internal */\nexport const PiB = (n: number) => Size(BigInt(n) * bigintPiB)\n\n/** @internal */\nexport const make = (\n  impl: Omit<FileSystem, \"exists\" | \"readFileString\" | \"stream\" | \"sink\" | \"writeFileString\">\n): FileSystem => {\n  return tag.of({\n    ...impl,\n    exists: (path) =>\n      pipe(\n        impl.access(path),\n        Effect.as(true),\n        Effect.catchTag(\"SystemError\", (e) => e.reason === \"NotFound\" ? Effect.succeed(false) : Effect.fail(e))\n      ),\n    readFileString: (path, encoding) =>\n      Effect.tryMap(impl.readFile(path), {\n        try: (_) => new TextDecoder(encoding).decode(_),\n        catch: () =>\n          Error.BadArgument({\n            module: \"FileSystem\",\n            method: \"readFileString\",\n            message: \"invalid encoding\"\n          })\n      }),\n    stream: (path, options) =>\n      pipe(\n        impl.open(path, { flag: \"r\" }),\n        options?.offset ?\n          Effect.tap((file) => file.seek(options.offset!, \"start\")) :\n          identity,\n        Effect.map((file) => stream(file, options)),\n        Stream.unwrapScoped\n      ),\n    sink: (path, options) =>\n      pipe(\n        impl.open(path, { flag: \"w\", ...options }),\n        Effect.map((file) => Sink.forEach((_: Uint8Array) => file.writeAll(_))),\n        Sink.unwrapScoped\n      ),\n    writeFileString: (path, data, options) =>\n      Effect.flatMap(\n        Effect.try({\n          try: () => new TextEncoder().encode(data),\n          catch: () =>\n            Error.BadArgument({\n              module: \"FileSystem\",\n              method: \"writeFileString\",\n              message: \"could not encode string\"\n            })\n        }),\n        (_) => impl.writeFile(path, _, options)\n      )\n  })\n}\n\nconst notFound = (method: string, path: string) =>\n  Error.SystemError({\n    module: \"FileSystem\",\n    method,\n    reason: \"NotFound\",\n    message: \"No such file or directory\",\n    pathOrDescriptor: path\n  })\n\n/** @internal */\nexport const makeNoop = (\n  fileSystem: Partial<FileSystem>\n): FileSystem => {\n  return {\n    access(path) {\n      return Effect.fail(notFound(\"access\", path))\n    },\n    chmod(path) {\n      return Effect.fail(notFound(\"chmod\", path))\n    },\n    chown(path) {\n      return Effect.fail(notFound(\"chown\", path))\n    },\n    copy(path) {\n      return Effect.fail(notFound(\"copy\", path))\n    },\n    copyFile(path) {\n      return Effect.fail(notFound(\"copyFile\", path))\n    },\n    exists() {\n      return Effect.succeed(false)\n    },\n    link(path) {\n      return Effect.fail(notFound(\"link\", path))\n    },\n    makeDirectory() {\n      return Effect.die(\"not implemented\")\n    },\n    makeTempDirectory() {\n      return Effect.die(\"not implemented\")\n    },\n    makeTempDirectoryScoped() {\n      return Effect.die(\"not implemented\")\n    },\n    makeTempFile() {\n      return Effect.die(\"not implemented\")\n    },\n    makeTempFileScoped() {\n      return Effect.die(\"not implemented\")\n    },\n    open(path) {\n      return Effect.fail(notFound(\"open\", path))\n    },\n    readDirectory(path) {\n      return Effect.fail(notFound(\"readDirectory\", path))\n    },\n    readFile(path) {\n      return Effect.fail(notFound(\"readFile\", path))\n    },\n    readFileString(path) {\n      return Effect.fail(notFound(\"readFileString\", path))\n    },\n    readLink(path) {\n      return Effect.fail(notFound(\"readLink\", path))\n    },\n    realPath(path) {\n      return Effect.fail(notFound(\"realPath\", path))\n    },\n    remove() {\n      return Effect.void\n    },\n    rename(oldPath) {\n      return Effect.fail(notFound(\"rename\", oldPath))\n    },\n    sink(path) {\n      return Sink.fail(notFound(\"sink\", path))\n    },\n    stat(path) {\n      return Effect.fail(notFound(\"stat\", path))\n    },\n    stream(path) {\n      return Stream.fail(notFound(\"stream\", path))\n    },\n    symlink(fromPath) {\n      return Effect.fail(notFound(\"symlink\", fromPath))\n    },\n    truncate(path) {\n      return Effect.fail(notFound(\"truncate\", path))\n    },\n    utimes(path) {\n      return Effect.fail(notFound(\"utimes\", path))\n    },\n    watch(path) {\n      return Stream.fail(notFound(\"watch\", path))\n    },\n    writeFile(path) {\n      return Effect.fail(notFound(\"writeFile\", path))\n    },\n    writeFileString(path) {\n      return Effect.fail(notFound(\"writeFileString\", path))\n    },\n    ...fileSystem\n  }\n}\n\n/** @internal */\nexport const layerNoop = (\n  fileSystem: Partial<FileSystem>\n): Layer.Layer<FileSystem> => Layer.succeed(tag, makeNoop(fileSystem))\n\n/** @internal */\nconst stream = (file: File, {\n  bufferSize = 16,\n  bytesToRead: bytesToRead_,\n  chunkSize: chunkSize_ = Size(64 * 1024)\n}: StreamOptions = {}) => {\n  const bytesToRead = bytesToRead_ !== undefined ? Size(bytesToRead_) : undefined\n  const chunkSize = Size(chunkSize_)\n\n  function loop(\n    totalBytesRead: bigint\n  ): Channel.Channel<Chunk.Chunk<Uint8Array>, unknown, Error.PlatformError, unknown, void, unknown> {\n    if (bytesToRead !== undefined && bytesToRead <= totalBytesRead) {\n      return Channel.void\n    }\n\n    const toRead = bytesToRead !== undefined && (bytesToRead - totalBytesRead) < chunkSize\n      ? bytesToRead - totalBytesRead\n      : chunkSize\n\n    return Channel.flatMap(\n      file.readAlloc(toRead),\n      Option.match({\n        onNone: () => Channel.void,\n        onSome: (buf) =>\n          Channel.flatMap(\n            Channel.write(Chunk.of(buf)),\n            (_) => loop(totalBytesRead + BigInt(buf.length))\n          )\n      })\n    )\n  }\n\n  return Stream.bufferChunks(\n    Stream.fromChannel(loop(BigInt(0))),\n    { capacity: bufferSize }\n  )\n}\n"],"names":["Channel","Chunk","GenericTag","Effect","identity","pipe","Layer","Option","Sink","Stream","Error","tag","Size","bytes","BigInt","KiB","n","MiB","GiB","TiB","bigint1024","bigintPiB","PiB","make","impl","of","exists","path","access","as","catchTag","e","reason","succeed","fail","readFileString","encoding","tryMap","readFile","try","_","TextDecoder","decode","catch","BadArgument","module","method","message","stream","options","open","flag","offset","tap","file","seek","map","unwrapScoped","sink","forEach","writeAll","writeFileString","data","flatMap","TextEncoder","encode","writeFile","notFound","SystemError","pathOrDescriptor","makeNoop","fileSystem","chmod","chown","copy","copyFile","link","makeDirectory","die","makeTempDirectory","makeTempDirectoryScoped","makeTempFile","makeTempFileScoped","readDirectory","readLink","realPath","remove","void","rename","oldPath","stat","symlink","fromPath","truncate","utimes","watch","layerNoop","bufferSize","bytesToRead","bytesToRead_","chunkSize","chunkSize_","undefined","loop","totalBytesRead","toRead","readAlloc","match","onNone","onSome","buf","write","length","bufferChunks","fromChannel","capacity"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"file":"FileSystem.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/FileSystem.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Brand from \"effect/Brand\"\nimport type { Tag } from \"effect/Context\"\nimport * as Context from \"effect/Context\"\nimport * as Data from \"effect/Data\"\nimport type * as Effect from \"effect/Effect\"\nimport type { Layer } from \"effect/Layer\"\nimport type { Option } from \"effect/Option\"\nimport type { Scope } from \"effect/Scope\"\nimport type { Sink } from \"effect/Sink\"\nimport type { Stream } from \"effect/Stream\"\nimport type { PlatformError } from \"./Error.js\"\nimport * as internal from \"./internal/fileSystem.js\"\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport interface FileSystem {\n  /**\n   * Check if a file can be accessed.\n   * You can optionally specify the level of access to check for.\n   */\n  readonly access: (\n    path: string,\n    options?: AccessFileOptions\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Copy a file or directory from `fromPath` to `toPath`.\n   *\n   * Equivalent to `cp -r`.\n   */\n  readonly copy: (\n    fromPath: string,\n    toPath: string,\n    options?: CopyOptions\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Copy a file from `fromPath` to `toPath`.\n   */\n  readonly copyFile: (\n    fromPath: string,\n    toPath: string\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Change the permissions of a file.\n   */\n  readonly chmod: (\n    path: string,\n    mode: number\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Change the owner and group of a file.\n   */\n  readonly chown: (\n    path: string,\n    uid: number,\n    gid: number\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Check if a path exists.\n   */\n  readonly exists: (\n    path: string\n  ) => Effect.Effect<boolean, PlatformError>\n  /**\n   * Create a hard link from `fromPath` to `toPath`.\n   */\n  readonly link: (\n    fromPath: string,\n    toPath: string\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Create a directory at `path`. You can optionally specify the mode and\n   * whether to recursively create nested directories.\n   */\n  readonly makeDirectory: (\n    path: string,\n    options?: MakeDirectoryOptions\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Create a temporary directory.\n   *\n   * By default the directory will be created inside the system's default\n   * temporary directory, but you can specify a different location by setting\n   * the `directory` option.\n   *\n   * You can also specify a prefix for the directory name by setting the\n   * `prefix` option.\n   */\n  readonly makeTempDirectory: (\n    options?: MakeTempDirectoryOptions\n  ) => Effect.Effect<string, PlatformError>\n  /**\n   * Create a temporary directory inside a scope.\n   *\n   * Functionally equivalent to `makeTempDirectory`, but the directory will be\n   * automatically deleted when the scope is closed.\n   */\n  readonly makeTempDirectoryScoped: (\n    options?: MakeTempDirectoryOptions\n  ) => Effect.Effect<string, PlatformError, Scope>\n  /**\n   * Create a temporary file.\n   * The directory creation is functionally equivalent to `makeTempDirectory`.\n   * The file name will be a randomly generated string.\n   */\n  readonly makeTempFile: (\n    options?: MakeTempFileOptions\n  ) => Effect.Effect<string, PlatformError>\n  /**\n   * Create a temporary file inside a scope.\n   *\n   * Functionally equivalent to `makeTempFile`, but the file will be\n   * automatically deleted when the scope is closed.\n   */\n  readonly makeTempFileScoped: (\n    options?: MakeTempFileOptions\n  ) => Effect.Effect<string, PlatformError, Scope>\n  /**\n   * Open a file at `path` with the specified `options`.\n   *\n   * The file handle will be automatically closed when the scope is closed.\n   */\n  readonly open: (\n    path: string,\n    options?: OpenFileOptions\n  ) => Effect.Effect<File, PlatformError, Scope>\n  /**\n   * List the contents of a directory.\n   *\n   * You can recursively list the contents of nested directories by setting the\n   * `recursive` option.\n   */\n  readonly readDirectory: (\n    path: string,\n    options?: ReadDirectoryOptions\n  ) => Effect.Effect<Array<string>, PlatformError>\n  /**\n   * Read the contents of a file.\n   */\n  readonly readFile: (\n    path: string\n  ) => Effect.Effect<Uint8Array, PlatformError>\n  /**\n   * Read the contents of a file.\n   */\n  readonly readFileString: (\n    path: string,\n    encoding?: string\n  ) => Effect.Effect<string, PlatformError>\n  /**\n   * Read the destination of a symbolic link.\n   */\n  readonly readLink: (\n    path: string\n  ) => Effect.Effect<string, PlatformError>\n  /**\n   * Resolve a path to its canonicalized absolute pathname.\n   */\n  readonly realPath: (\n    path: string\n  ) => Effect.Effect<string, PlatformError>\n  /**\n   * Remove a file or directory.\n   */\n  readonly remove: (\n    path: string,\n    options?: RemoveOptions\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Rename a file or directory.\n   */\n  readonly rename: (\n    oldPath: string,\n    newPath: string\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Create a writable `Sink` for the specified `path`.\n   */\n  readonly sink: (\n    path: string,\n    options?: SinkOptions\n  ) => Sink<void, Uint8Array, never, PlatformError>\n  /**\n   * Get information about a file at `path`.\n   */\n  readonly stat: (\n    path: string\n  ) => Effect.Effect<File.Info, PlatformError>\n  /**\n   * Create a readable `Stream` for the specified `path`.\n   *\n   * Changing the `bufferSize` option will change the internal buffer size of\n   * the stream. It defaults to `4`.\n   *\n   * The `chunkSize` option will change the size of the chunks emitted by the\n   * stream. It defaults to 64kb.\n   *\n   * Changing `offset` and `bytesToRead` will change the offset and the number\n   * of bytes to read from the file.\n   */\n  readonly stream: (\n    path: string,\n    options?: StreamOptions\n  ) => Stream<Uint8Array, PlatformError>\n  /**\n   * Create a symbolic link from `fromPath` to `toPath`.\n   */\n  readonly symlink: (\n    fromPath: string,\n    toPath: string\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Truncate a file to a specified length. If the `length` is not specified,\n   * the file will be truncated to length `0`.\n   */\n  readonly truncate: (\n    path: string,\n    length?: SizeInput\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Change the file system timestamps of the file at `path`.\n   */\n  readonly utimes: (\n    path: string,\n    atime: Date | number,\n    mtime: Date | number\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Watch a directory or file for changes\n   */\n  readonly watch: (path: string) => Stream<WatchEvent, PlatformError>\n  /**\n   * Write data to a file at `path`.\n   */\n  readonly writeFile: (\n    path: string,\n    data: Uint8Array,\n    options?: WriteFileOptions\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Write a string to a file at `path`.\n   */\n  readonly writeFileString: (\n    path: string,\n    data: string,\n    options?: WriteFileStringOptions\n  ) => Effect.Effect<void, PlatformError>\n}\n\n/**\n * Represents a size in bytes.\n *\n * @since 1.0.0\n * @category sizes\n */\nexport type Size = Brand.Branded<bigint, \"Size\">\n\n/**\n * Represents a size in bytes.\n *\n * @since 1.0.0\n * @category sizes\n */\nexport type SizeInput = bigint | number | Size\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const Size: (bytes: SizeInput) => Size = internal.Size\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const KiB: (n: number) => Size = internal.KiB\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const MiB: (n: number) => Size = internal.MiB\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const GiB: (n: number) => Size = internal.GiB\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const TiB: (n: number) => Size = internal.TiB\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const PiB: (n: number) => Size = internal.PiB\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport type OpenFlag =\n  | \"r\"\n  | \"r+\"\n  | \"w\"\n  | \"wx\"\n  | \"w+\"\n  | \"wx+\"\n  | \"a\"\n  | \"ax\"\n  | \"a+\"\n  | \"ax+\"\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface AccessFileOptions {\n  readonly ok?: boolean\n  readonly readable?: boolean\n  readonly writable?: boolean\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface MakeDirectoryOptions {\n  readonly recursive?: boolean\n  readonly mode?: number\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface CopyOptions {\n  readonly overwrite?: boolean\n  readonly preserveTimestamps?: boolean\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface MakeTempDirectoryOptions {\n  readonly directory?: string\n  readonly prefix?: string\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface MakeTempFileOptions {\n  readonly directory?: string\n  readonly prefix?: string\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface OpenFileOptions {\n  readonly flag?: OpenFlag\n  readonly mode?: number\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface ReadDirectoryOptions {\n  readonly recursive?: boolean\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface RemoveOptions {\n  /**\n   * When `true`, you can recursively remove nested directories.\n   */\n  readonly recursive?: boolean\n  /**\n   * When `true`, exceptions will be ignored if `path` does not exist.\n   */\n  readonly force?: boolean\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface SinkOptions extends OpenFileOptions {}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface StreamOptions {\n  readonly bufferSize?: number\n  readonly bytesToRead?: SizeInput\n  readonly chunkSize?: SizeInput\n  readonly offset?: SizeInput\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface WriteFileOptions {\n  readonly flag?: OpenFlag\n  readonly mode?: number\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface WriteFileStringOptions {\n  readonly flag?: OpenFlag\n  readonly mode?: number\n}\n\n/**\n * @since 1.0.0\n * @category tag\n */\nexport const FileSystem: Tag<FileSystem, FileSystem> = internal.tag\n\n/**\n * @since 1.0.0\n * @category constructor\n */\nexport const make: (\n  impl: Omit<FileSystem, \"exists\" | \"readFileString\" | \"stream\" | \"sink\" | \"writeFileString\">\n) => FileSystem = internal.make\n\n/**\n * Create a no-op file system that can be used for testing.\n *\n * @since 1.0.0\n * @category constructor\n */\nexport const makeNoop: (fileSystem: Partial<FileSystem>) => FileSystem = internal.makeNoop\n\n/**\n * Create a no-op file system that can be used for testing.\n *\n * @since 1.0.0\n * @category layers\n */\nexport const layerNoop: (fileSystem: Partial<FileSystem>) => Layer<FileSystem> = internal.layerNoop\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport const FileTypeId: unique symbol = Symbol.for(\n  \"@effect/platform/FileSystem/File\"\n)\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport type FileTypeId = typeof FileTypeId\n\n/**\n * @since 1.0.0\n * @category guard\n */\nexport const isFile = (u: unknown): u is File => typeof u === \"object\" && u !== null && FileTypeId in u\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport interface File {\n  readonly [FileTypeId]: FileTypeId\n  readonly fd: File.Descriptor\n  readonly stat: Effect.Effect<File.Info, PlatformError>\n  readonly seek: (offset: SizeInput, from: SeekMode) => Effect.Effect<void>\n  readonly read: (buffer: Uint8Array) => Effect.Effect<Size, PlatformError>\n  readonly readAlloc: (size: SizeInput) => Effect.Effect<Option<Uint8Array>, PlatformError>\n  readonly truncate: (length?: SizeInput) => Effect.Effect<void, PlatformError>\n  readonly write: (buffer: Uint8Array) => Effect.Effect<Size, PlatformError>\n  readonly writeAll: (buffer: Uint8Array) => Effect.Effect<void, PlatformError>\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace File {\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export type Descriptor = Brand.Branded<number, \"FileDescriptor\">\n\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export type Type =\n    | \"File\"\n    | \"Directory\"\n    | \"SymbolicLink\"\n    | \"BlockDevice\"\n    | \"CharacterDevice\"\n    | \"FIFO\"\n    | \"Socket\"\n    | \"Unknown\"\n\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export interface Info {\n    readonly type: Type\n    readonly mtime: Option<Date>\n    readonly atime: Option<Date>\n    readonly birthtime: Option<Date>\n    readonly dev: number\n    readonly ino: Option<number>\n    readonly mode: number\n    readonly nlink: Option<number>\n    readonly uid: Option<number>\n    readonly gid: Option<number>\n    readonly rdev: Option<number>\n    readonly size: Size\n    readonly blksize: Option<Size>\n    readonly blocks: Option<number>\n  }\n}\n\n/**\n * @since 1.0.0\n * @category constructor\n */\nexport const FileDescriptor = Brand.nominal<File.Descriptor>()\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport type SeekMode = \"start\" | \"current\"\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport type WatchEvent = WatchEvent.Create | WatchEvent.Update | WatchEvent.Remove\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport declare namespace WatchEvent {\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export interface Create {\n    readonly _tag: \"Create\"\n    readonly path: string\n  }\n\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export interface Update {\n    readonly _tag: \"Update\"\n    readonly path: string\n  }\n\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export interface Remove {\n    readonly _tag: \"Remove\"\n    readonly path: string\n  }\n}\n\n/**\n * @since 1.0.0\n * @category constructor\n */\nexport const WatchEventCreate: Data.Case.Constructor<WatchEvent.Create, \"_tag\"> = Data.tagged<WatchEvent.Create>(\n  \"Create\"\n)\n\n/**\n * @since 1.0.0\n * @category constructor\n */\nexport const WatchEventUpdate: Data.Case.Constructor<WatchEvent.Update, \"_tag\"> = Data.tagged<WatchEvent.Update>(\n  \"Update\"\n)\n\n/**\n * @since 1.0.0\n * @category constructor\n */\nexport const WatchEventRemove: Data.Case.Constructor<WatchEvent.Remove, \"_tag\"> = Data.tagged<WatchEvent.Remove>(\n  \"Remove\"\n)\n\n/**\n * @since 1.0.0\n * @category file watcher\n */\nexport class WatchBackend extends Context.Tag(\"@effect/platform/FileSystem/WatchBackend\")<\n  WatchBackend,\n  {\n    readonly register: (path: string, stat: File.Info) => Option<Stream<WatchEvent, PlatformError>>\n  }\n>() {\n}\n"],"names":["Brand","Context","Data","internal","Size","KiB","MiB","GiB","TiB","PiB","FileSystem","tag","make","makeNoop","layerNoop","FileTypeId","Symbol","for","isFile","u","FileDescriptor","nominal","WatchEventCreate","tagged","WatchEventUpdate","WatchEventRemove","WatchBackend","Tag"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAcA,OAAO,KAAKG,QAAQ,MAAM,0BAA0B;AAXpD,OAAO,KAAKH,KAAK,MAAM,cAAc;AAGrC,OAAO,KAAKE,IAAI,MAAM,aAAa;AADnC,OAAO,KAAKD,OAAO,MAAM,gBAAgB;;;;;AA4QlC,MAAMG,IAAI,GAA+BD,QAAQ,iQAACC,IAAI;AAMtD,MAAMC,GAAG,GAAwBF,QAAQ,iQAACE,GAAG;AAM7C,MAAMC,GAAG,GAAwBH,QAAQ,iQAACG,GAAG;AAM7C,MAAMC,GAAG,GAAwBJ,QAAQ,iQAACI,GAAG;AAM7C,MAAMC,GAAG,GAAwBL,QAAQ,iQAACK,GAAG;AAM7C,MAAMC,GAAG,GAAwBN,QAAQ,iQAACM,GAAG;AAuI7C,MAAMC,UAAU,GAAgCP,QAAQ,iQAACQ,GAAG;AAM5D,MAAMC,IAAI,GAECT,QAAQ,iQAACS,IAAI;AAQxB,MAAMC,QAAQ,GAAoDV,QAAQ,iQAACU,QAAQ;AAQnF,MAAMC,SAAS,GAA2DX,QAAQ,iQAACW,SAAS;AAM5F,MAAMC,UAAU,GAAA,WAAA,GAAkBC,MAAM,CAACC,GAAG,CACjD,kCAAkC,CACnC;AAYM,MAAMC,MAAM,IAAIC,CAAU,GAAgB,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,IAAI,IAAIJ,UAAU,IAAII,CAAC;AAoEhG,MAAMC,cAAc,GAAA,WAAA,GAAGpB,KAAK,gMAACqB,OAAO,EAAmB;AAmDvD,MAAMC,gBAAgB,GAAA,WAAA,GAAqDpB,IAAI,gMAACqB,MAAM,CAC3F,QAAQ,CACT;AAMM,MAAMC,gBAAgB,GAAA,WAAA,GAAqDtB,IAAI,gMAACqB,MAAM,CAC3F,QAAQ,CACT;AAMM,MAAME,gBAAgB,GAAA,WAAA,GAAqDvB,IAAI,gMAACqB,MAAM,CAC3F,QAAQ,CACT;AAMK,MAAOG,YAAa,SAAA,WAAA,GAAQzB,OAAO,gMAAC0B,GAAG,CAAC,0CAA0C,CAAC,EAKtF;AAAA","ignoreList":[0]}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"file":"httpBody.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpBody.ts"],"sourcesContent":["import * as Data from \"effect/Data\"\nimport * as Effect from \"effect/Effect\"\nimport { identity } from \"effect/Function\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport * as Stream_ from \"effect/Stream\"\nimport type * as PlatformError from \"../Error.js\"\nimport * as FileSystem from \"../FileSystem.js\"\nimport type * as Body from \"../HttpBody.js\"\nimport * as UrlParams from \"../UrlParams.js\"\n\n/** @internal */\nexport const TypeId: Body.TypeId = Symbol.for(\n  \"@effect/platform/HttpBody\"\n) as Body.TypeId\n\n/** @internal */\nexport const ErrorTypeId: Body.ErrorTypeId = Symbol.for(\n  \"@effect/platform/HttpBody/HttpBodyError\"\n) as Body.ErrorTypeId\n\nconst bodyError = Data.tagged<Body.HttpBodyError>(\"HttpBodyError\")\n\n/** @internal */\nexport const HttpBodyError = (reason: Body.ErrorReason): Body.HttpBodyError =>\n  bodyError({ [ErrorTypeId]: ErrorTypeId, reason })\n\nabstract class BodyBase implements Body.HttpBody.Proto {\n  readonly [TypeId]: Body.TypeId\n  abstract readonly _tag: string\n  constructor() {\n    this[TypeId] = TypeId\n  }\n  abstract toJSON(): unknown\n  [Inspectable.NodeInspectSymbol](): unknown {\n    return this.toJSON()\n  }\n  toString(): string {\n    return Inspectable.format(this)\n  }\n}\n\nclass EmptyImpl extends BodyBase implements Body.Empty {\n  readonly _tag = \"Empty\"\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/HttpBody\",\n      _tag: \"Empty\"\n    }\n  }\n}\n\n/** @internal */\nexport const empty: Body.Empty = new EmptyImpl()\n\nclass RawImpl extends BodyBase implements Body.Raw {\n  readonly _tag = \"Raw\"\n  constructor(\n    readonly body: unknown,\n    readonly contentType?: string | undefined,\n    readonly contentLength?: number | undefined\n  ) {\n    super()\n  }\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/HttpBody\",\n      _tag: \"Raw\",\n      body: this.body,\n      contentType: this.contentType,\n      contentLength: this.contentLength\n    }\n  }\n}\n\n/** @internal */\nexport const raw = (body: unknown, options?: {\n  readonly contentType?: string | undefined\n  readonly contentLength?: number | undefined\n}): Body.Raw => new RawImpl(body, options?.contentType, options?.contentLength)\n\nclass Uint8ArrayImpl extends BodyBase implements Body.Uint8Array {\n  readonly _tag = \"Uint8Array\"\n  constructor(\n    readonly body: Uint8Array,\n    readonly contentType: string\n  ) {\n    super()\n  }\n  get contentLength(): number {\n    return this.body.length\n  }\n  toJSON(): unknown {\n    const toString = this.contentType.startsWith(\"text/\") || this.contentType.endsWith(\"json\")\n    return {\n      _id: \"@effect/platform/HttpBody\",\n      _tag: \"Uint8Array\",\n      body: toString ? new TextDecoder().decode(this.body) : `Uint8Array(${this.body.length})`,\n      contentType: this.contentType,\n      contentLength: this.contentLength\n    }\n  }\n}\n\n/** @internal */\nexport const uint8Array = (body: Uint8Array, contentType?: string): Body.Uint8Array =>\n  new Uint8ArrayImpl(body, contentType ?? \"application/octet-stream\")\n\nconst encoder = new TextEncoder()\n\n/** @internal */\nexport const text = (body: string, contentType?: string): Body.Uint8Array =>\n  uint8Array(encoder.encode(body), contentType ?? \"text/plain\")\n\n/** @internal */\nexport const unsafeJson = (body: unknown): Body.Uint8Array => text(JSON.stringify(body), \"application/json\")\n\n/** @internal */\nexport const json = (body: unknown): Effect.Effect<Body.Uint8Array, Body.HttpBodyError> =>\n  Effect.try({\n    try: () => unsafeJson(body),\n    catch: (error) => HttpBodyError({ _tag: \"JsonError\", error })\n  })\n\n/** @internal */\nexport const urlParams = (urlParams: UrlParams.UrlParams): Body.Uint8Array =>\n  text(UrlParams.toString(urlParams), \"application/x-www-form-urlencoded\")\n\n/** @internal */\nexport const jsonSchema = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions) => {\n  const encode = Schema.encode(schema, options)\n  return (body: A): Effect.Effect<Body.Uint8Array, Body.HttpBodyError, R> =>\n    Effect.flatMap(\n      Effect.mapError(encode(body), (error) => HttpBodyError({ _tag: \"SchemaError\", error })),\n      json\n    )\n}\n\n/** @internal */\nexport const file = (\n  path: string,\n  options?: FileSystem.StreamOptions & { readonly contentType?: string }\n): Effect.Effect<Body.Stream, PlatformError.PlatformError, FileSystem.FileSystem> =>\n  Effect.flatMap(\n    FileSystem.FileSystem,\n    (fs) =>\n      Effect.map(fs.stat(path), (info) =>\n        stream(\n          fs.stream(path, options),\n          options?.contentType,\n          Number(info.size)\n        ))\n  )\n\n/** @internal */\nexport const fileInfo = (\n  path: string,\n  info: FileSystem.File.Info,\n  options?: FileSystem.StreamOptions & { readonly contentType?: string }\n): Effect.Effect<Body.Stream, PlatformError.PlatformError, FileSystem.FileSystem> =>\n  Effect.map(\n    FileSystem.FileSystem,\n    (fs) =>\n      stream(\n        fs.stream(path, options),\n        options?.contentType,\n        Number(info.size)\n      )\n  )\n\n/** @internal */\nexport const fileWeb = (file: Body.HttpBody.FileLike): Body.Stream =>\n  stream(Stream_.fromReadableStream(() => file.stream() as ReadableStream<Uint8Array>, identity), file.type, file.size)\n\nclass FormDataImpl extends BodyBase implements Body.FormData {\n  readonly _tag = \"FormData\"\n  constructor(\n    readonly formData: FormData\n  ) {\n    super()\n  }\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/HttpBody\",\n      _tag: \"FormData\",\n      formData: this.formData\n    }\n  }\n}\n\n/** @internal */\nexport const formData = (body: FormData): Body.FormData => new FormDataImpl(body)\n\nclass StreamImpl extends BodyBase implements Body.Stream {\n  readonly _tag = \"Stream\"\n  constructor(\n    readonly stream: Stream_.Stream<Uint8Array, unknown>,\n    readonly contentType: string,\n    readonly contentLength?: number | undefined\n  ) {\n    super()\n  }\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/HttpBody\",\n      _tag: \"Stream\",\n      contentType: this.contentType,\n      contentLength: this.contentLength\n    }\n  }\n}\n\n/** @internal */\nexport const stream = (\n  body: Stream_.Stream<Uint8Array, unknown>,\n  contentType?: string | undefined,\n  contentLength?: number | undefined\n): Body.Stream => new StreamImpl(body, contentType ?? \"application/octet-stream\", contentLength)\n"],"names":["Data","Effect","identity","Inspectable","Schema","Stream_","FileSystem","UrlParams","TypeId","Symbol","for","ErrorTypeId","bodyError","tagged","HttpBodyError","reason","BodyBase","constructor","NodeInspectSymbol","toJSON","toString","format","EmptyImpl","_tag","_id","empty","RawImpl","body","contentType","contentLength","raw","options","Uint8ArrayImpl","length","startsWith","endsWith","TextDecoder","decode","uint8Array","encoder","TextEncoder","text","encode","unsafeJson","JSON","stringify","json","try","catch","error","urlParams","jsonSchema","schema","flatMap","mapError","file","path","fs","map","stat","info","stream","Number","size","fileInfo","fileWeb","fromReadableStream","type","FormDataImpl","formData","StreamImpl"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 726, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"file":"httpClientRequest.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpClientRequest.ts"],"sourcesContent":["import * as Effect from \"effect/Effect\"\nimport { dual } from \"effect/Function\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport { pipeArguments } from \"effect/Pipeable\"\nimport * as Redacted from \"effect/Redacted\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Stream from \"effect/Stream\"\nimport type * as PlatformError from \"../Error.js\"\nimport type * as FileSystem from \"../FileSystem.js\"\nimport * as Headers from \"../Headers.js\"\nimport type * as Body from \"../HttpBody.js\"\nimport type * as ClientRequest from \"../HttpClientRequest.js\"\nimport type { HttpMethod } from \"../HttpMethod.js\"\nimport * as UrlParams from \"../UrlParams.js\"\nimport * as internalBody from \"./httpBody.js\"\n\n/** @internal */\nexport const TypeId: ClientRequest.TypeId = Symbol.for(\"@effect/platform/HttpClientRequest\") as ClientRequest.TypeId\n\nconst Proto = {\n  [TypeId]: TypeId,\n  ...Inspectable.BaseProto,\n  toJSON(this: ClientRequest.HttpClientRequest): unknown {\n    return {\n      _id: \"@effect/platform/HttpClientRequest\",\n      method: this.method,\n      url: this.url,\n      urlParams: this.urlParams,\n      hash: this.hash,\n      headers: Inspectable.redact(this.headers),\n      body: this.body.toJSON()\n    }\n  },\n  pipe() {\n    return pipeArguments(this, arguments)\n  }\n}\n\nfunction makeInternal(\n  method: HttpMethod,\n  url: string,\n  urlParams: UrlParams.UrlParams,\n  hash: Option.Option<string>,\n  headers: Headers.Headers,\n  body: Body.HttpBody\n): ClientRequest.HttpClientRequest {\n  const self = Object.create(Proto)\n  self.method = method\n  self.url = url\n  self.urlParams = urlParams\n  self.hash = hash\n  self.headers = headers\n  self.body = body\n  return self\n}\n\n/** @internal */\nexport const isClientRequest = (u: unknown): u is ClientRequest.HttpClientRequest =>\n  typeof u === \"object\" && u !== null && TypeId in u\n\n/** @internal */\nexport const empty: ClientRequest.HttpClientRequest = makeInternal(\n  \"GET\",\n  \"\",\n  UrlParams.empty,\n  Option.none(),\n  Headers.empty,\n  internalBody.empty\n)\n\n/** @internal */\nexport const make = <M extends HttpMethod>(method: M) =>\n(\n  url: string | URL,\n  options?: M extends \"GET\" | \"HEAD\" ? ClientRequest.Options.NoBody : ClientRequest.Options.NoUrl\n) =>\n  modify(empty, {\n    method,\n    url,\n    ...(options ?? undefined)\n  })\n\n/** @internal */\nexport const get = make(\"GET\")\n\n/** @internal */\nexport const post = make(\"POST\")\n\n/** @internal */\nexport const put = make(\"PUT\")\n\n/** @internal */\nexport const patch = make(\"PATCH\")\n\n/** @internal */\nexport const del = make(\"DELETE\")\n\n/** @internal */\nexport const head = make(\"HEAD\")\n\n/** @internal */\nexport const options = make(\"OPTIONS\")\n\n/** @internal */\nexport const modify = dual<\n  (options: ClientRequest.Options) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, options: ClientRequest.Options) => ClientRequest.HttpClientRequest\n>(2, (self, options) => {\n  let result = self\n\n  if (options.method) {\n    result = setMethod(result, options.method)\n  }\n  if (options.url) {\n    result = setUrl(result, options.url)\n  }\n  if (options.headers) {\n    result = setHeaders(result, options.headers)\n  }\n  if (options.urlParams) {\n    result = setUrlParams(result, options.urlParams)\n  }\n  if (options.hash) {\n    result = setHash(result, options.hash)\n  }\n  if (options.body) {\n    result = setBody(result, options.body)\n  }\n  if (options.accept) {\n    result = accept(result, options.accept)\n  }\n  if (options.acceptJson) {\n    result = acceptJson(result)\n  }\n\n  return result\n})\n\n/** @internal */\nexport const setHeader = dual<\n  (key: string, value: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, key: string, value: string) => ClientRequest.HttpClientRequest\n>(3, (self, key, value) =>\n  makeInternal(\n    self.method,\n    self.url,\n    self.urlParams,\n    self.hash,\n    Headers.set(self.headers, key, value),\n    self.body\n  ))\n\n/** @internal */\nexport const setHeaders = dual<\n  (input: Headers.Input) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, input: Headers.Input) => ClientRequest.HttpClientRequest\n>(2, (self, input) =>\n  makeInternal(\n    self.method,\n    self.url,\n    self.urlParams,\n    self.hash,\n    Headers.setAll(self.headers, input),\n    self.body\n  ))\n\nconst stringOrRedacted = (value: string | Redacted.Redacted): string =>\n  typeof value === \"string\" ? value : Redacted.value(value)\n\n/** @internal */\nexport const basicAuth = dual<\n  (\n    username: string | Redacted.Redacted,\n    password: string | Redacted.Redacted\n  ) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (\n    self: ClientRequest.HttpClientRequest,\n    username: string | Redacted.Redacted,\n    password: string | Redacted.Redacted\n  ) => ClientRequest.HttpClientRequest\n>(\n  3,\n  (self, username, password) =>\n    setHeader(self, \"Authorization\", `Basic ${btoa(`${stringOrRedacted(username)}:${stringOrRedacted(password)}`)}`)\n)\n\n/** @internal */\nexport const bearerToken = dual<\n  (token: string | Redacted.Redacted) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, token: string | Redacted.Redacted) => ClientRequest.HttpClientRequest\n>(2, (self, token) => setHeader(self, \"Authorization\", `Bearer ${stringOrRedacted(token)}`))\n\n/** @internal */\nexport const accept = dual<\n  (mediaType: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, mediaType: string) => ClientRequest.HttpClientRequest\n>(2, (self, mediaType) => setHeader(self, \"Accept\", mediaType))\n\n/** @internal */\nexport const acceptJson = accept(\"application/json\")\n\n/** @internal */\nexport const setMethod = dual<\n  (method: HttpMethod) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, method: HttpMethod) => ClientRequest.HttpClientRequest\n>(2, (self, method) =>\n  makeInternal(\n    method,\n    self.url,\n    self.urlParams,\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const setUrl = dual<\n  (url: string | URL) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, url: string | URL) => ClientRequest.HttpClientRequest\n>(2, (self, url) => {\n  if (typeof url === \"string\") {\n    return makeInternal(\n      self.method,\n      url,\n      self.urlParams,\n      self.hash,\n      self.headers,\n      self.body\n    )\n  }\n  const clone = new URL(url.toString())\n  const urlParams = UrlParams.fromInput(clone.searchParams)\n  const hash = clone.hash ? Option.some(clone.hash.slice(1)) : Option.none()\n  clone.search = \"\"\n  clone.hash = \"\"\n  return makeInternal(\n    self.method,\n    clone.toString(),\n    urlParams,\n    hash,\n    self.headers,\n    self.body\n  )\n})\n\n/** @internal */\nexport const appendUrl = dual<\n  (path: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, path: string) => ClientRequest.HttpClientRequest\n>(2, (self, url) =>\n  makeInternal(\n    self.method,\n    self.url.endsWith(\"/\") && url.startsWith(\"/\") ?\n      self.url + url.slice(1) :\n      self.url + url,\n    self.urlParams,\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const prependUrl = dual<\n  (path: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, path: string) => ClientRequest.HttpClientRequest\n>(2, (self, url) =>\n  makeInternal(\n    self.method,\n    url.endsWith(\"/\") && self.url.startsWith(\"/\") ?\n      url + self.url.slice(1) :\n      url + self.url,\n    self.urlParams,\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const updateUrl = dual<\n  (f: (url: string) => string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, f: (url: string) => string) => ClientRequest.HttpClientRequest\n>(2, (self, f) =>\n  makeInternal(\n    self.method,\n    f(self.url),\n    self.urlParams,\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const appendUrlParam = dual<\n  (key: string, value: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, key: string, value: string) => ClientRequest.HttpClientRequest\n>(3, (self, key, value) =>\n  makeInternal(\n    self.method,\n    self.url,\n    UrlParams.append(self.urlParams, key, value),\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const appendUrlParams = dual<\n  (input: UrlParams.Input) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, input: UrlParams.Input) => ClientRequest.HttpClientRequest\n>(2, (self, input) =>\n  makeInternal(\n    self.method,\n    self.url,\n    UrlParams.appendAll(self.urlParams, input),\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const setUrlParam = dual<\n  (key: string, value: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, key: string, value: string) => ClientRequest.HttpClientRequest\n>(3, (self, key, value) =>\n  makeInternal(\n    self.method,\n    self.url,\n    UrlParams.set(self.urlParams, key, value),\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const setUrlParams = dual<\n  (input: UrlParams.Input) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, input: UrlParams.Input) => ClientRequest.HttpClientRequest\n>(2, (self, input) =>\n  makeInternal(\n    self.method,\n    self.url,\n    UrlParams.setAll(self.urlParams, input),\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const setHash = dual<\n  (hash: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, hash: string) => ClientRequest.HttpClientRequest\n>(2, (self, hash) =>\n  makeInternal(\n    self.method,\n    self.url,\n    self.urlParams,\n    Option.some(hash),\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const removeHash = (self: ClientRequest.HttpClientRequest): ClientRequest.HttpClientRequest =>\n  makeInternal(\n    self.method,\n    self.url,\n    self.urlParams,\n    Option.none(),\n    self.headers,\n    self.body\n  )\n\n/** @internal */\nexport const setBody = dual<\n  (body: Body.HttpBody) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, body: Body.HttpBody) => ClientRequest.HttpClientRequest\n>(2, (self, body) => {\n  let headers = self.headers\n  if (body._tag === \"Empty\") {\n    headers = Headers.remove(Headers.remove(headers, \"Content-Type\"), \"Content-length\")\n  } else {\n    const contentType = body.contentType\n    if (contentType) {\n      headers = Headers.set(headers, \"content-type\", contentType)\n    }\n\n    const contentLength = body.contentLength\n    if (contentLength) {\n      headers = Headers.set(headers, \"content-length\", contentLength.toString())\n    }\n  }\n  return makeInternal(\n    self.method,\n    self.url,\n    self.urlParams,\n    self.hash,\n    headers,\n    body\n  )\n})\n\n/** @internal */\nexport const bodyUint8Array = dual<\n  (\n    body: Uint8Array,\n    contentType?: string\n  ) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, body: Uint8Array, contentType?: string) => ClientRequest.HttpClientRequest\n>(\n  (args) => isClientRequest(args[0]),\n  (self, body, contentType = \"application/octet-stream\") => setBody(self, internalBody.uint8Array(body, contentType))\n)\n\n/** @internal */\nexport const bodyText = dual<\n  (body: string, contentType?: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, body: string, contentType?: string) => ClientRequest.HttpClientRequest\n>(\n  (args) => isClientRequest(args[0]),\n  (self, body, contentType = \"text/plain\") => setBody(self, internalBody.text(body, contentType))\n)\n\n/** @internal */\nexport const bodyJson = dual<\n  (\n    body: unknown\n  ) => (self: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError>,\n  (\n    self: ClientRequest.HttpClientRequest,\n    body: unknown\n  ) => Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError>\n>(2, (self, body) => Effect.map(internalBody.json(body), (body) => setBody(self, body)))\n\n/** @internal */\nexport const bodyUnsafeJson = dual<\n  (body: unknown) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, body: unknown) => ClientRequest.HttpClientRequest\n>(2, (self, body) => setBody(self, internalBody.unsafeJson(body)))\n\n/** @internal */\nexport const bodyFile = dual<\n  (\n    path: string,\n    options?: FileSystem.StreamOptions & { readonly contentType?: string }\n  ) => (\n    self: ClientRequest.HttpClientRequest\n  ) => Effect.Effect<ClientRequest.HttpClientRequest, PlatformError.PlatformError, FileSystem.FileSystem>,\n  (\n    self: ClientRequest.HttpClientRequest,\n    path: string,\n    options?: FileSystem.StreamOptions & { readonly contentType?: string }\n  ) => Effect.Effect<ClientRequest.HttpClientRequest, PlatformError.PlatformError, FileSystem.FileSystem>\n>(\n  (args) => isClientRequest(args[0]),\n  (self, path, options) => Effect.map(internalBody.file(path, options), (body) => setBody(self, body))\n)\n\n/** @internal */\nexport const bodyFileWeb = dual<\n  (file: Body.HttpBody.FileLike) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, file: Body.HttpBody.FileLike) => ClientRequest.HttpClientRequest\n>(2, (self, file) => setBody(self, internalBody.fileWeb(file)))\n\n/** @internal */\nexport const schemaBodyJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined): {\n  (\n    body: A\n  ): (self: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError, R>\n  (\n    self: ClientRequest.HttpClientRequest,\n    body: A\n  ): Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError, R>\n} => {\n  const encode = internalBody.jsonSchema(schema, options)\n  return dual<\n    (\n      body: A\n    ) => (\n      self: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError, R>,\n    (\n      self: ClientRequest.HttpClientRequest,\n      body: A\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError, R>\n  >(2, (self, body) => Effect.map(encode(body), (body) => setBody(self, body)))\n}\n\n/** @internal */\nexport const bodyUrlParams = dual<\n  (input: UrlParams.Input) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, input: UrlParams.Input) => ClientRequest.HttpClientRequest\n>(2, (self, body) =>\n  setBody(\n    self,\n    internalBody.text(\n      UrlParams.toString(UrlParams.fromInput(body)),\n      \"application/x-www-form-urlencoded\"\n    )\n  ))\n\n/** @internal */\nexport const bodyFormData = dual<\n  (body: FormData) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, body: FormData) => ClientRequest.HttpClientRequest\n>(2, (self, body) => setBody(self, internalBody.formData(body)))\n\n/** @internal */\nexport const bodyStream = dual<\n  (\n    body: Stream.Stream<Uint8Array, unknown>,\n    options?: {\n      readonly contentType?: string | undefined\n      readonly contentLength?: number | undefined\n    }\n  ) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (\n    self: ClientRequest.HttpClientRequest,\n    body: Stream.Stream<Uint8Array, unknown>,\n    options?: {\n      readonly contentType?: string | undefined\n      readonly contentLength?: number | undefined\n    }\n  ) => ClientRequest.HttpClientRequest\n>(\n  (args) => isClientRequest(args[0]),\n  (self, body, { contentLength, contentType = \"application/octet-stream\" } = {}) =>\n    setBody(self, internalBody.stream(body, contentType, contentLength))\n)\n"],"names":["Effect","dual","Inspectable","Option","pipeArguments","Redacted","Headers","UrlParams","internalBody","TypeId","Symbol","for","Proto","BaseProto","toJSON","_id","method","url","urlParams","hash","headers","redact","body","pipe","arguments","makeInternal","self","Object","create","isClientRequest","u","empty","none","make","options","modify","undefined","get","post","put","patch","del","head","result","setMethod","setUrl","setHeaders","setUrlParams","setHash","setBody","accept","acceptJson","setHeader","key","value","set","input","setAll","stringOrRedacted","basicAuth","username","password","btoa","bearerToken","token","mediaType","clone","URL","toString","fromInput","searchParams","some","slice","search","appendUrl","endsWith","startsWith","prependUrl","updateUrl","f","appendUrlParam","append","appendUrlParams","appendAll","setUrlParam","removeHash","_tag","remove","contentType","contentLength","bodyUint8Array","args","uint8Array","bodyText","text","bodyJson","map","json","bodyUnsafeJson","unsafeJson","bodyFile","path","file","bodyFileWeb","fileWeb","schemaBodyJson","schema","encode","jsonSchema","bodyUrlParams","bodyFormData","formData","bodyStream","stream"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 926, "column": 0}, "map": {"version":3,"file":"HttpTraceContext.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpTraceContext.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Option from \"effect/Option\"\nimport * as Tracer from \"effect/Tracer\"\nimport * as Headers from \"./Headers.js\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface FromHeaders {\n  (headers: Headers.Headers): Option.Option<Tracer.ExternalSpan>\n}\n\n/**\n * @since 1.0.0\n * @category encoding\n */\nexport const toHeaders = (span: Tracer.Span): Headers.Headers =>\n  Headers.unsafeFromRecord({\n    b3: `${span.traceId}-${span.spanId}-${span.sampled ? \"1\" : \"0\"}${\n      span.parent._tag === \"Some\" ? `-${span.parent.value.spanId}` : \"\"\n    }`,\n    traceparent: `00-${span.traceId}-${span.spanId}-${span.sampled ? \"01\" : \"00\"}`\n  })\n\n/**\n * @since 1.0.0\n * @category decoding\n */\nexport const fromHeaders = (headers: Headers.Headers): Option.Option<Tracer.ExternalSpan> => {\n  let span = w3c(headers)\n  if (span._tag === \"Some\") {\n    return span\n  }\n  span = b3(headers)\n  if (span._tag === \"Some\") {\n    return span\n  }\n  return xb3(headers)\n}\n\n/**\n * @since 1.0.0\n * @category decoding\n */\nexport const b3: FromHeaders = (headers) => {\n  if (!(\"b3\" in headers)) {\n    return Option.none()\n  }\n  const parts = headers[\"b3\"].split(\"-\")\n  if (parts.length < 2) {\n    return Option.none()\n  }\n  return Option.some(Tracer.externalSpan({\n    traceId: parts[0],\n    spanId: parts[1],\n    sampled: parts[2] ? parts[2] === \"1\" : true\n  }))\n}\n\n/**\n * @since 1.0.0\n * @category decoding\n */\nexport const xb3: FromHeaders = (headers) => {\n  if (!(headers[\"x-b3-traceid\"]) || !(headers[\"x-b3-spanid\"])) {\n    return Option.none()\n  }\n  return Option.some(Tracer.externalSpan({\n    traceId: headers[\"x-b3-traceid\"],\n    spanId: headers[\"x-b3-spanid\"],\n    sampled: headers[\"x-b3-sampled\"] ? headers[\"x-b3-sampled\"] === \"1\" : true\n  }))\n}\n\nconst w3cTraceId = /^[0-9a-f]{32}$/gi\nconst w3cSpanId = /^[0-9a-f]{16}$/gi\n\n/**\n * @since 1.0.0\n * @category decoding\n */\nexport const w3c: FromHeaders = (headers) => {\n  if (!(headers[\"traceparent\"])) {\n    return Option.none()\n  }\n  const parts = headers[\"traceparent\"].split(\"-\")\n  if (parts.length !== 4) {\n    return Option.none()\n  }\n  const [version, traceId, spanId, flags] = parts\n  switch (version) {\n    case \"00\": {\n      if (w3cTraceId.test(traceId) === false || w3cSpanId.test(spanId) === false) {\n        return Option.none()\n      }\n      return Option.some(Tracer.externalSpan({\n        traceId,\n        spanId,\n        sampled: (parseInt(flags, 16) & 1) === 1\n      }))\n    }\n    default: {\n      return Option.none()\n    }\n  }\n}\n"],"names":["Option","Tracer","Headers","toHeaders","span","unsafeFromRecord","b3","traceId","spanId","sampled","parent","_tag","value","traceparent","fromHeaders","headers","w3c","xb3","none","parts","split","length","some","externalSpan","w3cTraceId","w3cSpanId","version","flags","test","parseInt"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1009, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1015, "column": 0}, "map": {"version":3,"file":"httpClientError.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpClientError.ts"],"sourcesContent":["import type * as Error from \"../HttpClientError.js\"\n\n/** @internal */\nexport const TypeId: Error.TypeId = Symbol.for(\n  \"@effect/platform/HttpClientError\"\n) as Error.TypeId\n"],"names":["TypeId","Symbol","for"],"mappings":"AAEA,cAAA;;;AACO,MAAMA,MAAM,GAAA,WAAA,GAAiBC,MAAM,CAACC,GAAG,CAC5C,kCAAkC,CACnB","ignoreList":[0]}},
    {"offset": {"line": 1019, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"file":"HttpClientError.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpClientError.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Error from \"@effect/platform/Error\"\nimport { hasProperty } from \"effect/Predicate\"\nimport type * as ClientRequest from \"./HttpClientRequest.js\"\nimport type * as ClientResponse from \"./HttpClientResponse.js\"\nimport * as internal from \"./internal/httpClientError.js\"\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category guards\n */\nexport const isHttpClientError = (u: unknown): u is HttpClientError => hasProperty(u, TypeId)\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport type HttpClientError = RequestError | ResponseError\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class RequestError extends Error.TypeIdError(TypeId, \"RequestError\")<{\n  readonly request: ClientRequest.HttpClientRequest\n  readonly reason: \"Transport\" | \"Encode\" | \"InvalidUrl\"\n  readonly cause?: unknown\n  readonly description?: string\n}> {\n  get methodAndUrl() {\n    return `${this.request.method} ${this.request.url}`\n  }\n\n  get message() {\n    return this.description ?\n      `${this.reason}: ${this.description} (${this.methodAndUrl})` :\n      `${this.reason} error (${this.methodAndUrl})`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class ResponseError extends Error.TypeIdError(TypeId, \"ResponseError\")<{\n  readonly request: ClientRequest.HttpClientRequest\n  readonly response: ClientResponse.HttpClientResponse\n  readonly reason: \"StatusCode\" | \"Decode\" | \"EmptyBody\"\n  readonly cause?: unknown\n  readonly description?: string\n}> {\n  get methodAndUrl() {\n    return `${this.request.method} ${this.request.url}`\n  }\n\n  get message() {\n    const info = `${this.response.status} ${this.methodAndUrl}`\n    return this.description ?\n      `${this.reason}: ${this.description} (${info})` :\n      `${this.reason} error (${info})`\n  }\n}\n"],"names":["Error","hasProperty","internal","TypeId","isHttpClientError","u","RequestError","TypeIdError","methodAndUrl","request","method","url","message","description","reason","ResponseError","info","response","status"],"mappings":"AAAA;;;;;;;;AAOA,OAAO,KAAKE,QAAQ,MAAM,+BAA+B;AAHzD,SAASD,WAAW,QAAQ,kBAAkB;AAD9C,OAAO,KAAKD,KAAK,MAAM,wBAAwB;;;;AAUxC,MAAMG,MAAM,GAAkBD,QAAQ,sQAACC,MAAM;AAY7C,MAAMC,iBAAiB,IAAIC,CAAU,gNAA2BJ,cAAAA,AAAW,EAACI,CAAC,EAAEF,MAAM,CAAC;AAYvF,MAAOG,YAAa,SAAA,WAAA,GAAQN,KAAK,mPAACO,WAAW,CAACJ,MAAM,EAAE,cAAc,CAKxE;IACA,IAAIK,YAAYA,CAAA,EAAA;QACd,OAAO,GAAG,IAAI,CAACC,OAAO,CAACC,MAAM,CAAA,CAAA,EAAI,IAAI,CAACD,OAAO,CAACE,GAAG,EAAE;IACrD;IAEA,IAAIC,OAAOA,CAAA,EAAA;QACT,OAAO,IAAI,CAACC,WAAW,GACrB,GAAG,IAAI,CAACC,MAAM,CAAA,EAAA,EAAK,IAAI,CAACD,WAAW,CAAA,EAAA,EAAK,IAAI,CAACL,YAAY,CAAA,CAAA,CAAG,GAC5D,GAAG,IAAI,CAACM,MAAM,CAAA,QAAA,EAAW,IAAI,CAACN,YAAY,CAAA,CAAA,CAAG;IACjD;;AAOI,MAAOO,aAAc,SAAA,WAAA,GAAQf,KAAK,mPAACO,WAAW,CAACJ,MAAM,EAAE,eAAe,CAM1E;IACA,IAAIK,YAAYA,CAAA,EAAA;QACd,OAAO,GAAG,IAAI,CAACC,OAAO,CAACC,MAAM,CAAA,CAAA,EAAI,IAAI,CAACD,OAAO,CAACE,GAAG,EAAE;IACrD;IAEA,IAAIC,OAAOA,CAAA,EAAA;QACT,MAAMI,IAAI,GAAG,GAAG,IAAI,CAACC,QAAQ,CAACC,MAAM,CAAA,CAAA,EAAI,IAAI,CAACV,YAAY,EAAE;QAC3D,OAAO,IAAI,CAACK,WAAW,GACrB,GAAG,IAAI,CAACC,MAAM,CAAA,EAAA,EAAK,IAAI,CAACD,WAAW,CAAA,EAAA,EAAKG,IAAI,CAAA,CAAA,CAAG,GAC/C,GAAG,IAAI,CAACF,MAAM,CAAA,QAAA,EAAWE,IAAI,CAAA,CAAA,CAAG;IACpC","ignoreList":[0]}},
    {"offset": {"line": 1058, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1064, "column": 0}, "map": {"version":3,"file":"HttpIncomingMessage.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpIncomingMessage.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Effect from \"effect/Effect\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { dual } from \"effect/Function\"\nimport * as Global from \"effect/GlobalValue\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Stream from \"effect/Stream\"\nimport * as FileSystem from \"./FileSystem.js\"\nimport type * as Headers from \"./Headers.js\"\nimport type * as UrlParams from \"./UrlParams.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"@effect/platform/HttpIncomingMessage\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpIncomingMessage<E> extends Inspectable.Inspectable {\n  readonly [TypeId]: TypeId\n  readonly headers: Headers.Headers\n  readonly remoteAddress: Option.Option<string>\n  readonly json: Effect.Effect<unknown, E>\n  readonly text: Effect.Effect<string, E>\n  readonly urlParamsBody: Effect.Effect<UrlParams.UrlParams, E>\n  readonly arrayBuffer: Effect.Effect<ArrayBuffer, E>\n  readonly stream: Stream.Stream<Uint8Array, E>\n}\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return <E>(self: HttpIncomingMessage<E>): Effect.Effect<A, E | ParseResult.ParseError, R> =>\n    Effect.flatMap(self.json, parse)\n}\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyUrlParams = <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return <E>(self: HttpIncomingMessage<E>): Effect.Effect<A, E | ParseResult.ParseError, R> =>\n    Effect.flatMap(self.urlParamsBody, (_) => parse(Object.fromEntries(_)))\n}\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaHeaders = <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return <E>(self: HttpIncomingMessage<E>): Effect.Effect<A, ParseResult.ParseError, R> => parse(self.headers)\n}\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const maxBodySize: FiberRef.FiberRef<Option.Option<FileSystem.Size>> = Global.globalValue(\n  \"@effect/platform/HttpIncomingMessage/maxBodySize\",\n  () => FiberRef.unsafeMake(Option.none<FileSystem.Size>())\n)\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withMaxBodySize = dual<\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (size: Option.Option<FileSystem.SizeInput>) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, size: Option.Option<FileSystem.SizeInput>) => Effect.Effect<A, E, R>\n>(2, (effect, size) => Effect.locally(effect, maxBodySize, Option.map(size, FileSystem.Size)))\n\n/**\n * @since 1.0.0\n */\nexport const inspect = <E>(self: HttpIncomingMessage<E>, that: object): object => {\n  const contentType = self.headers[\"content-type\"] ?? \"\"\n  let body: unknown\n  if (contentType.includes(\"application/json\")) {\n    try {\n      body = Effect.runSync(self.json)\n    } catch (_) {\n      //\n    }\n  } else if (contentType.includes(\"text/\") || contentType.includes(\"urlencoded\")) {\n    try {\n      body = Effect.runSync(self.text)\n    } catch (_) {\n      //\n    }\n  }\n  const obj: any = {\n    ...that,\n    headers: Inspectable.redact(self.headers),\n    remoteAddress: self.remoteAddress.toJSON()\n  }\n  if (body !== undefined) {\n    obj.body = body\n  }\n  return obj\n}\n"],"names":["Effect","FiberRef","dual","Global","Inspectable","Option","Schema","FileSystem","TypeId","Symbol","for","schemaBodyJson","schema","options","parse","decodeUnknown","self","flatMap","json","schemaBodyUrlParams","urlParamsBody","_","Object","fromEntries","schemaHeaders","headers","maxBodySize","globalValue","unsafeMake","none","withMaxBodySize","effect","size","locally","map","Size","inspect","that","contentType","body","includes","runSync","text","obj","redact","remoteAddress","toJSON","undefined"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1138, "column": 0}, "map": {"version":3,"file":"Cookies.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/Cookies.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Duration from \"effect/Duration\"\nimport * as Either from \"effect/Either\"\nimport { dual } from \"effect/Function\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport { type Pipeable, pipeArguments } from \"effect/Pipeable\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Record from \"effect/Record\"\nimport type * as Types from \"effect/Types\"\nimport { TypeIdError } from \"./Error.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"@effect/platform/Cookies\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isCookies = (u: unknown): u is Cookies => Predicate.hasProperty(u, TypeId)\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Cookies extends Pipeable, Inspectable.Inspectable {\n  readonly [TypeId]: TypeId\n  readonly cookies: Record.ReadonlyRecord<string, Cookie>\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const CookieTypeId: unique symbol = Symbol.for(\"@effect/platform/Cookies/Cookie\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type CookieTypeId = typeof CookieTypeId\n\n/**\n * @since 1.0.0\n * @category cookie\n */\nexport interface Cookie extends Inspectable.Inspectable {\n  readonly [CookieTypeId]: CookieTypeId\n  readonly name: string\n  readonly value: string\n  readonly valueEncoded: string\n  readonly options?: {\n    readonly domain?: string | undefined\n    readonly expires?: Date | undefined\n    readonly maxAge?: Duration.DurationInput | undefined\n    readonly path?: string | undefined\n    readonly priority?: \"low\" | \"medium\" | \"high\" | undefined\n    readonly httpOnly?: boolean | undefined\n    readonly secure?: boolean | undefined\n    readonly partitioned?: boolean | undefined\n    readonly sameSite?: \"lax\" | \"strict\" | \"none\" | undefined\n  } | undefined\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const ErrorTypeId: unique symbol = Symbol.for(\"@effect/platform/Cookies/CookieError\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type ErrorTypeId = typeof ErrorTypeId\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport class CookiesError extends TypeIdError(ErrorTypeId, \"CookieError\")<{\n  readonly reason: \"InvalidName\" | \"InvalidValue\" | \"InvalidDomain\" | \"InvalidPath\" | \"InfinityMaxAge\"\n}> {\n  get message() {\n    return this.reason\n  }\n}\n\nconst Proto: Omit<Cookies, \"cookies\"> = {\n  [TypeId]: TypeId,\n  ...Inspectable.BaseProto,\n  toJSON(this: Cookies) {\n    return {\n      _id: \"@effect/platform/Cookies\",\n      cookies: Record.map(this.cookies, (cookie) => cookie.toJSON())\n    }\n  },\n  pipe() {\n    return pipeArguments(this, arguments)\n  }\n}\n\n/**\n * Create a Cookies object from an Iterable\n *\n * @since 1.0.0\n * @category constructors\n */\nexport const fromReadonlyRecord = (cookies: Record.ReadonlyRecord<string, Cookie>): Cookies => {\n  const self = Object.create(Proto)\n  self.cookies = cookies\n  return self\n}\n\n/**\n * Create a Cookies object from an Iterable\n *\n * @since 1.0.0\n * @category constructors\n */\nexport const fromIterable = (cookies: Iterable<Cookie>): Cookies => {\n  const record: Record<string, Cookie> = {}\n  for (const cookie of cookies) {\n    record[cookie.name] = cookie\n  }\n  return fromReadonlyRecord(record)\n}\n\n/**\n * Create a Cookies object from a set of Set-Cookie headers\n *\n * @since 1.0.0\n * @category constructors\n */\nexport const fromSetCookie = (headers: Iterable<string> | string): Cookies => {\n  const arrayHeaders = typeof headers === \"string\" ? [headers] : headers\n  const cookies: Array<Cookie> = []\n  for (const header of arrayHeaders) {\n    const cookie = parseSetCookie(header.trim())\n    if (Option.isSome(cookie)) {\n      cookies.push(cookie.value)\n    }\n  }\n\n  return fromIterable(cookies)\n}\n\nfunction parseSetCookie(header: string): Option.Option<Cookie> {\n  const parts = header.split(\";\").map((_) => _.trim()).filter((_) => _ !== \"\")\n  if (parts.length === 0) {\n    return Option.none()\n  }\n\n  const firstEqual = parts[0].indexOf(\"=\")\n  if (firstEqual === -1) {\n    return Option.none()\n  }\n  const name = parts[0].slice(0, firstEqual)\n  if (!fieldContentRegExp.test(name)) {\n    return Option.none()\n  }\n\n  const valueEncoded = parts[0].slice(firstEqual + 1)\n  const value = tryDecodeURIComponent(valueEncoded)\n\n  if (parts.length === 1) {\n    return Option.some(Object.assign(Object.create(CookieProto), {\n      name,\n      value,\n      valueEncoded\n    }))\n  }\n\n  const options: Types.Mutable<Cookie[\"options\"]> = {}\n\n  for (let i = 1; i < parts.length; i++) {\n    const part = parts[i]\n    const equalIndex = part.indexOf(\"=\")\n    const key = equalIndex === -1 ? part : part.slice(0, equalIndex).trim()\n    const value = equalIndex === -1 ? undefined : part.slice(equalIndex + 1).trim()\n\n    switch (key.toLowerCase()) {\n      case \"domain\": {\n        if (value === undefined) {\n          break\n        }\n        const domain = value.trim().replace(/^\\./, \"\")\n        if (domain) {\n          options.domain = domain\n        }\n        break\n      }\n      case \"expires\": {\n        if (value === undefined) {\n          break\n        }\n        const date = new Date(value)\n        if (!isNaN(date.getTime())) {\n          options.expires = date\n        }\n        break\n      }\n      case \"max-age\": {\n        if (value === undefined) {\n          break\n        }\n        const maxAge = parseInt(value, 10)\n        if (!isNaN(maxAge)) {\n          options.maxAge = Duration.seconds(maxAge)\n        }\n        break\n      }\n      case \"path\": {\n        if (value === undefined) {\n          break\n        }\n        if (value[0] === \"/\") {\n          options.path = value\n        }\n        break\n      }\n      case \"priority\": {\n        if (value === undefined) {\n          break\n        }\n        switch (value.toLowerCase()) {\n          case \"low\":\n            options.priority = \"low\"\n            break\n          case \"medium\":\n            options.priority = \"medium\"\n            break\n          case \"high\":\n            options.priority = \"high\"\n            break\n        }\n        break\n      }\n      case \"httponly\": {\n        options.httpOnly = true\n        break\n      }\n      case \"secure\": {\n        options.secure = true\n        break\n      }\n      case \"partitioned\": {\n        options.partitioned = true\n        break\n      }\n      case \"samesite\": {\n        if (value === undefined) {\n          break\n        }\n        switch (value.toLowerCase()) {\n          case \"lax\":\n            options.sameSite = \"lax\"\n            break\n          case \"strict\":\n            options.sameSite = \"strict\"\n            break\n          case \"none\":\n            options.sameSite = \"none\"\n            break\n        }\n        break\n      }\n    }\n  }\n\n  return Option.some(Object.assign(Object.create(CookieProto), {\n    name,\n    value,\n    valueEncoded,\n    options: Object.keys(options).length > 0 ? options : undefined\n  }))\n}\n\n/**\n * An empty Cookies object\n *\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: Cookies = fromIterable([])\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isEmpty = (self: Cookies): boolean => Record.isEmptyRecord(self.cookies)\n\n// eslint-disable-next-line no-control-regex\nconst fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/\n\nconst CookieProto = {\n  [CookieTypeId]: CookieTypeId,\n  ...Inspectable.BaseProto,\n  toJSON(this: Cookie) {\n    return {\n      _id: \"@effect/platform/Cookies/Cookie\",\n      name: this.name,\n      value: this.value,\n      options: this.options\n    }\n  }\n}\n\n/**\n * Create a new cookie\n *\n * @since 1.0.0\n * @category constructors\n */\nexport function makeCookie(\n  name: string,\n  value: string,\n  options?: Cookie[\"options\"] | undefined\n): Either.Either<Cookie, CookiesError> {\n  if (!fieldContentRegExp.test(name)) {\n    return Either.left(new CookiesError({ reason: \"InvalidName\" }))\n  }\n  const encodedValue = encodeURIComponent(value)\n  if (encodedValue && !fieldContentRegExp.test(encodedValue)) {\n    return Either.left(new CookiesError({ reason: \"InvalidValue\" }))\n  }\n\n  if (options !== undefined) {\n    if (options.domain !== undefined && !fieldContentRegExp.test(options.domain)) {\n      return Either.left(new CookiesError({ reason: \"InvalidDomain\" }))\n    }\n\n    if (options.path !== undefined && !fieldContentRegExp.test(options.path)) {\n      return Either.left(new CookiesError({ reason: \"InvalidPath\" }))\n    }\n\n    if (options.maxAge !== undefined && !Duration.isFinite(Duration.decode(options.maxAge))) {\n      return Either.left(new CookiesError({ reason: \"InfinityMaxAge\" }))\n    }\n  }\n\n  return Either.right(Object.assign(Object.create(CookieProto), {\n    name,\n    value,\n    valueEncoded: encodedValue,\n    options\n  }))\n}\n\n/**\n * Create a new cookie, throwing an error if invalid\n *\n * @since 1.0.0\n * @category constructors\n */\nexport const unsafeMakeCookie = (\n  name: string,\n  value: string,\n  options?: Cookie[\"options\"] | undefined\n): Cookie => Either.getOrThrow(makeCookie(name, value, options))\n\n/**\n * Add a cookie to a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const setCookie: {\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (cookie: Cookie): (self: Cookies) => Cookies\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, cookie: Cookie): Cookies\n} = dual(\n  2,\n  (self: Cookies, cookie: Cookie) =>\n    fromReadonlyRecord(Record.set(\n      self.cookies,\n      cookie.name,\n      cookie\n    ))\n)\n\n/**\n * Add multiple cookies to a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const setAllCookie: {\n  /**\n   * Add multiple cookies to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (cookies: Iterable<Cookie>): (self: Cookies) => Cookies\n  /**\n   * Add multiple cookies to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, cookies: Iterable<Cookie>): Cookies\n} = dual(2, (self: Cookies, cookies: Iterable<Cookie>) => {\n  const record = { ...self.cookies }\n  for (const cookie of cookies) {\n    record[cookie.name] = cookie\n  }\n  return fromReadonlyRecord(record)\n})\n\n/**\n * Combine two Cookies objects, removing duplicates from the first\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const merge: {\n  /**\n   * Combine two Cookies objects, removing duplicates from the first\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (that: Cookies): (self: Cookies) => Cookies\n  /**\n   * Combine two Cookies objects, removing duplicates from the first\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, that: Cookies): Cookies\n} = dual(2, (self: Cookies, that: Cookies) =>\n  fromReadonlyRecord({\n    ...self.cookies,\n    ...that.cookies\n  }))\n\n/**\n * Remove a cookie by name\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const remove: {\n  /**\n   * Remove a cookie by name\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string): (self: Cookies) => Cookies\n  /**\n   * Remove a cookie by name\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, name: string): Cookies\n} = dual(2, (self: Cookies, name: string) => fromReadonlyRecord(Record.remove(self.cookies, name)))\n\n/**\n * Get a cookie from a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const get: {\n  /**\n   * Get a cookie from a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string): (self: Cookies) => Option.Option<Cookie>\n  /**\n   * Get a cookie from a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, name: string): Option.Option<Cookie>\n} = dual(\n  (args) => isCookies(args[0]),\n  (self: Cookies, name: string): Option.Option<Cookie> => Record.get(self.cookies, name)\n)\n\n/**\n * Get a cookie from a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const getValue: {\n  /**\n   * Get a cookie from a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string): (self: Cookies) => Option.Option<string>\n  /**\n   * Get a cookie from a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, name: string): Option.Option<string>\n} = dual(\n  (args) => isCookies(args[0]),\n  (self: Cookies, name: string): Option.Option<string> =>\n    Option.map(Record.get(self.cookies, name), (cookie) => cookie.value)\n)\n\n/**\n * Add a cookie to a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const set: {\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string, value: string, options?: Cookie[\"options\"]): (self: Cookies) => Either.Either<Cookies, CookiesError>\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, name: string, value: string, options?: Cookie[\"options\"]): Either.Either<Cookies, CookiesError>\n} = dual(\n  (args) => isCookies(args[0]),\n  (self: Cookies, name: string, value: string, options?: Cookie[\"options\"]) =>\n    Either.map(\n      makeCookie(name, value, options),\n      (cookie) => fromReadonlyRecord(Record.set(self.cookies, name, cookie))\n    )\n)\n\n/**\n * Add a cookie to a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const unsafeSet: {\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string, value: string, options?: Cookie[\"options\"]): (self: Cookies) => Cookies\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, name: string, value: string, options?: Cookie[\"options\"]): Cookies\n} = dual(\n  (args) => isCookies(args[0]),\n  (self: Cookies, name: string, value: string, options?: Cookie[\"options\"]) =>\n    fromReadonlyRecord(Record.set(\n      self.cookies,\n      name,\n      unsafeMakeCookie(name, value, options)\n    ))\n)\n\n/**\n * Add multiple cookies to a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const setAll: {\n  /**\n   * Add multiple cookies to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): (self: Cookies) => Either.Either<Cookies, CookiesError>\n  /**\n   * Add multiple cookies to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: Cookies,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): Either.Either<Cookies, CookiesError>\n} = dual(\n  2,\n  (\n    self: Cookies,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): Either.Either<Cookies, CookiesError> => {\n    const record: Record<string, Cookie> = { ...self.cookies }\n    for (const [name, value, options] of cookies) {\n      const either = makeCookie(name, value, options)\n      if (Either.isLeft(either)) {\n        return either as Either.Left<CookiesError, never>\n      }\n      record[name] = either.right\n    }\n    return Either.right(fromReadonlyRecord(record))\n  }\n)\n\n/**\n * Add multiple cookies to a Cookies object, throwing an error if invalid\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const unsafeSetAll: {\n  /**\n   * Add multiple cookies to a Cookies object, throwing an error if invalid\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): (self: Cookies) => Cookies\n  /**\n   * Add multiple cookies to a Cookies object, throwing an error if invalid\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: Cookies,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): Cookies\n} = dual(\n  2,\n  (\n    self: Cookies,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): Cookies => Either.getOrThrow(setAll(self, cookies))\n)\n\n/**\n * Serialize a cookie into a string\n *\n * Adapted from https://github.com/fastify/fastify-cookie under MIT License\n *\n * @since 1.0.0\n * @category encoding\n */\nexport function serializeCookie(self: Cookie): string {\n  let str = self.name + \"=\" + self.valueEncoded\n\n  if (self.options === undefined) {\n    return str\n  }\n  const options = self.options\n\n  if (options.maxAge !== undefined) {\n    const maxAge = Duration.toSeconds(options.maxAge)\n    str += \"; Max-Age=\" + Math.trunc(maxAge)\n  }\n\n  if (options.domain !== undefined) {\n    str += \"; Domain=\" + options.domain\n  }\n\n  if (options.path !== undefined) {\n    str += \"; Path=\" + options.path\n  }\n\n  if (options.priority !== undefined) {\n    switch (options.priority) {\n      case \"low\":\n        str += \"; Priority=Low\"\n        break\n      case \"medium\":\n        str += \"; Priority=Medium\"\n        break\n      case \"high\":\n        str += \"; Priority=High\"\n        break\n    }\n  }\n\n  if (options.expires !== undefined) {\n    str += \"; Expires=\" + options.expires.toUTCString()\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\"\n  }\n\n  if (options.secure) {\n    str += \"; Secure\"\n  }\n\n  // Draft implementation to support Chrome from 2024-Q1 forward.\n  // See https://datatracker.ietf.org/doc/html/draft-cutler-httpbis-partitioned-cookies#section-2.1\n  if (options.partitioned) {\n    str += \"; Partitioned\"\n  }\n\n  if (options.sameSite !== undefined) {\n    switch (options.sameSite) {\n      case \"lax\":\n        str += \"; SameSite=Lax\"\n        break\n      case \"strict\":\n        str += \"; SameSite=Strict\"\n        break\n      case \"none\":\n        str += \"; SameSite=None\"\n        break\n    }\n  }\n\n  return str\n}\n\n/**\n * Serialize a Cookies object into a Cookie header\n *\n * @since 1.0.0\n * @category encoding\n */\nexport const toCookieHeader = (self: Cookies): string =>\n  Object.values(self.cookies).map((cookie) => `${cookie.name}=${cookie.valueEncoded}`).join(\"; \")\n\n/**\n * To record\n *\n * @since 1.0.0\n * @category encoding\n */\nexport const toRecord = (self: Cookies): Record<string, string> => {\n  const record: Record<string, string> = {}\n  const cookies = Object.values(self.cookies)\n  for (let index = 0; index < cookies.length; index++) {\n    const cookie = cookies[index]\n    record[cookie.name] = cookie.value\n  }\n  return record\n}\n\n/**\n * Serialize a Cookies object into Headers object containing one or more Set-Cookie headers\n *\n * @since 1.0.0\n * @category encoding\n */\nexport const toSetCookieHeaders = (self: Cookies): Array<string> => Object.values(self.cookies).map(serializeCookie)\n\n/**\n * Parse a cookie header into a record of key-value pairs\n *\n * Adapted from https://github.com/fastify/fastify-cookie under MIT License\n *\n * @since 1.0.0\n * @category decoding\n */\nexport function parseHeader(header: string): Record<string, string> {\n  const result: Record<string, string> = {}\n\n  const strLen = header.length\n  let pos = 0\n  let terminatorPos = 0\n\n  while (true) {\n    if (terminatorPos === strLen) break\n    terminatorPos = header.indexOf(\";\", pos)\n    if (terminatorPos === -1) terminatorPos = strLen // This is the last pair\n\n    let eqIdx = header.indexOf(\"=\", pos)\n    if (eqIdx === -1) break // No key-value pairs left\n    if (eqIdx > terminatorPos) {\n      // Malformed key-value pair\n      pos = terminatorPos + 1\n      continue\n    }\n\n    const key = header.substring(pos, eqIdx++).trim()\n    if (result[key] === undefined) {\n      const val = header.charCodeAt(eqIdx) === 0x22\n        ? header.substring(eqIdx + 1, terminatorPos - 1).trim()\n        : header.substring(eqIdx, terminatorPos).trim()\n\n      result[key] = !(val.indexOf(\"%\") === -1)\n        ? tryDecodeURIComponent(val)\n        : val\n    }\n\n    pos = terminatorPos + 1\n  }\n\n  return result\n}\n\nconst tryDecodeURIComponent = (str: string): string => {\n  try {\n    return decodeURIComponent(str)\n  } catch (_) {\n    return str\n  }\n}\n"],"names":["Duration","Either","dual","Inspectable","Option","pipeArguments","Predicate","Record","TypeIdError","TypeId","Symbol","for","isCookies","u","hasProperty","CookieTypeId","ErrorTypeId","CookiesError","message","reason","Proto","BaseProto","toJSON","_id","cookies","map","cookie","pipe","arguments","fromReadonlyRecord","self","Object","create","fromIterable","record","name","fromSetCookie","headers","arrayHeaders","header","parseSetCookie","trim","isSome","push","value","parts","split","_","filter","length","none","firstEqual","indexOf","slice","fieldContentRegExp","test","valueEncoded","tryDecodeURIComponent","some","assign","CookieProto","options","i","part","equalIndex","key","undefined","toLowerCase","domain","replace","date","Date","isNaN","getTime","expires","maxAge","parseInt","seconds","path","priority","httpOnly","secure","partitioned","sameSite","keys","empty","isEmpty","isEmptyRecord","makeCookie","left","encodedValue","encodeURIComponent","isFinite","decode","right","unsafeMakeCookie","getOrThrow","setCookie","set","setAllCookie","merge","that","remove","get","args","getValue","unsafeSet","setAll","either","isLeft","unsafeSetAll","serializeCookie","str","toSeconds","Math","trunc","toUTCString","toCookieHeader","values","join","toRecord","index","toSetCookieHeaders","parseHeader","result","strLen","pos","terminatorPos","eqIdx","substring","val","charCodeAt","decodeURIComponent"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1559, "column": 0}, "map": {"version":3,"file":"httpClientResponse.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpClientResponse.ts"],"sourcesContent":["import * as Effect from \"effect/Effect\"\nimport { dual } from \"effect/Function\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport * as Stream from \"effect/Stream\"\nimport type { Unify } from \"effect/Unify\"\nimport * as Cookies from \"../Cookies.js\"\nimport * as Headers from \"../Headers.js\"\nimport * as Error from \"../HttpClientError.js\"\nimport type * as ClientRequest from \"../HttpClientRequest.js\"\nimport type * as ClientResponse from \"../HttpClientResponse.js\"\nimport * as IncomingMessage from \"../HttpIncomingMessage.js\"\nimport * as UrlParams from \"../UrlParams.js\"\n\n/** @internal */\nexport const TypeId: ClientResponse.TypeId = Symbol.for(\"@effect/platform/HttpClientResponse\") as ClientResponse.TypeId\n\n/** @internal */\nexport const fromWeb = (\n  request: ClientRequest.HttpClientRequest,\n  source: globalThis.Response\n): ClientResponse.HttpClientResponse => new ClientResponseImpl(request, source)\n\nclass ClientResponseImpl extends Inspectable.Class implements ClientResponse.HttpClientResponse {\n  readonly [IncomingMessage.TypeId]: IncomingMessage.TypeId\n  readonly [TypeId]: ClientResponse.TypeId\n\n  constructor(\n    readonly request: ClientRequest.HttpClientRequest,\n    private readonly source: globalThis.Response\n  ) {\n    super()\n    this[IncomingMessage.TypeId] = IncomingMessage.TypeId\n    this[TypeId] = TypeId\n  }\n\n  toJSON(): unknown {\n    return IncomingMessage.inspect(this, {\n      _id: \"@effect/platform/HttpClientResponse\",\n      request: this.request.toJSON(),\n      status: this.status\n    })\n  }\n\n  get status(): number {\n    return this.source.status\n  }\n\n  get headers(): Headers.Headers {\n    return Headers.fromInput(this.source.headers)\n  }\n\n  cachedCookies?: Cookies.Cookies\n  get cookies(): Cookies.Cookies {\n    if (this.cachedCookies) {\n      return this.cachedCookies\n    }\n    return this.cachedCookies = Cookies.fromSetCookie(this.source.headers.getSetCookie())\n  }\n\n  get remoteAddress(): Option.Option<string> {\n    return Option.none()\n  }\n\n  get stream(): Stream.Stream<Uint8Array, Error.ResponseError> {\n    return this.source.body\n      ? Stream.fromReadableStream(() => this.source.body!, (cause) =>\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"Decode\",\n          cause\n        }))\n      : Stream.fail(\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"EmptyBody\",\n          description: \"can not create stream from empty body\"\n        })\n      )\n  }\n\n  get json(): Effect.Effect<unknown, Error.ResponseError> {\n    return Effect.tryMap(this.text, {\n      try: (text) => text === \"\" ? null : JSON.parse(text) as unknown,\n      catch: (cause) =>\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"Decode\",\n          cause\n        })\n    })\n  }\n\n  private textBody?: Effect.Effect<string, Error.ResponseError>\n  get text(): Effect.Effect<string, Error.ResponseError> {\n    return this.textBody ??= Effect.tryPromise({\n      try: () => this.source.text(),\n      catch: (cause) =>\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"Decode\",\n          cause\n        })\n    }).pipe(Effect.cached, Effect.runSync)\n  }\n\n  get urlParamsBody(): Effect.Effect<UrlParams.UrlParams, Error.ResponseError> {\n    return Effect.flatMap(this.text, (_) =>\n      Effect.try({\n        try: () => UrlParams.fromInput(new URLSearchParams(_)),\n        catch: (cause) =>\n          new Error.ResponseError({\n            request: this.request,\n            response: this,\n            reason: \"Decode\",\n            cause\n          })\n      }))\n  }\n\n  private formDataBody?: Effect.Effect<FormData, Error.ResponseError>\n  get formData(): Effect.Effect<FormData, Error.ResponseError> {\n    return this.formDataBody ??= Effect.tryPromise({\n      try: () => this.source.formData(),\n      catch: (cause) =>\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"Decode\",\n          cause\n        })\n    }).pipe(Effect.cached, Effect.runSync)\n  }\n\n  private arrayBufferBody?: Effect.Effect<ArrayBuffer, Error.ResponseError>\n  get arrayBuffer(): Effect.Effect<ArrayBuffer, Error.ResponseError> {\n    return this.arrayBufferBody ??= Effect.tryPromise({\n      try: () => this.source.arrayBuffer(),\n      catch: (cause) =>\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"Decode\",\n          cause\n        })\n    }).pipe(Effect.cached, Effect.runSync)\n  }\n}\n\n/** @internal */\nexport const schemaJson = <\n  R,\n  I extends {\n    readonly status?: number | undefined\n    readonly headers?: Readonly<Record<string, string>> | undefined\n    readonly body?: unknown | undefined\n  },\n  A\n>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return (self: ClientResponse.HttpClientResponse): Effect.Effect<A, Error.ResponseError | ParseResult.ParseError, R> =>\n    Effect.flatMap(\n      self.json,\n      (body) =>\n        parse({\n          status: self.status,\n          headers: self.headers,\n          body\n        })\n    )\n}\n\n/** @internal */\nexport const schemaNoBody = <\n  R,\n  I extends {\n    readonly status?: number | undefined\n    readonly headers?: Readonly<Record<string, string>> | undefined\n  },\n  A\n>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return (self: ClientResponse.HttpClientResponse): Effect.Effect<A, ParseResult.ParseError, R> =>\n    parse({\n      status: self.status,\n      headers: self.headers\n    })\n}\n\n/** @internal */\nexport const stream = <E, R>(effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>) =>\n  Stream.unwrapScoped(Effect.map(effect, (_) => _.stream))\n\n/** @internal */\nexport const matchStatus = dual<\n  <\n    const Cases extends {\n      readonly [status: number]: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"2xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"3xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"4xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"5xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly orElse: (_: ClientResponse.HttpClientResponse) => any\n    }\n  >(\n    cases: Cases\n  ) => (self: ClientResponse.HttpClientResponse) => Cases[keyof Cases] extends (_: any) => infer R ? Unify<R> : never,\n  <\n    const Cases extends {\n      readonly [status: number]: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"2xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"3xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"4xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"5xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly orElse: (_: ClientResponse.HttpClientResponse) => any\n    }\n  >(\n    self: ClientResponse.HttpClientResponse,\n    cases: Cases\n  ) => Cases[keyof Cases] extends (_: any) => infer R ? Unify<R> : never\n>(2, (self, cases) => {\n  const status = self.status\n  if (cases[status]) {\n    return cases[status](self)\n  } else if (status >= 200 && status < 300 && cases[\"2xx\"]) {\n    return cases[\"2xx\"](self)\n  } else if (status >= 300 && status < 400 && cases[\"3xx\"]) {\n    return cases[\"3xx\"](self)\n  } else if (status >= 400 && status < 500 && cases[\"4xx\"]) {\n    return cases[\"4xx\"](self)\n  } else if (status >= 500 && status < 600 && cases[\"5xx\"]) {\n    return cases[\"5xx\"](self)\n  }\n  return cases.orElse(self)\n})\n\n/** @internal */\nexport const filterStatus = dual<\n  (\n    f: (status: number) => boolean\n  ) => (\n    self: ClientResponse.HttpClientResponse\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, Error.ResponseError>,\n  (\n    self: ClientResponse.HttpClientResponse,\n    f: (status: number) => boolean\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, Error.ResponseError>\n>(\n  2,\n  (self, f) =>\n    Effect.suspend(() =>\n      f(self.status) ? Effect.succeed(self) : Effect.fail(\n        new Error.ResponseError({\n          response: self,\n          request: self.request,\n          reason: \"StatusCode\",\n          description: \"invalid status code\"\n        })\n      )\n    )\n)\n\n/** @internal */\nexport const filterStatusOk = (\n  self: ClientResponse.HttpClientResponse\n): Effect.Effect<ClientResponse.HttpClientResponse, Error.ResponseError> =>\n  self.status >= 200 && self.status < 300 ? Effect.succeed(self) : Effect.fail(\n    new Error.ResponseError({\n      response: self,\n      request: self.request,\n      reason: \"StatusCode\",\n      description: \"non 2xx status code\"\n    })\n  )\n"],"names":["Effect","dual","Inspectable","Option","Schema","Stream","Cookies","Headers","Error","IncomingMessage","UrlParams","TypeId","Symbol","for","fromWeb","request","source","ClientResponseImpl","Class","constructor","toJSON","inspect","_id","status","headers","fromInput","cachedCookies","cookies","fromSetCookie","getSetCookie","remoteAddress","none","stream","body","fromReadableStream","cause","ResponseError","response","reason","fail","description","json","tryMap","text","try","JSON","parse","catch","textBody","tryPromise","pipe","cached","runSync","urlParamsBody","flatMap","_","URLSearchParams","formDataBody","formData","arrayBufferBody","arrayBuffer","schemaJson","schema","options","decodeUnknown","self","schemaNoBody","effect","unwrapScoped","map","matchStatus","cases","orElse","filterStatus","f","suspend","succeed","filterStatusOk"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1743, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1749, "column": 0}, "map": {"version":3,"file":"httpClient.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpClient.ts"],"sourcesContent":["import * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport type * as Fiber from \"effect/Fiber\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { constFalse, dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Layer from \"effect/Layer\"\nimport { pipeArguments } from \"effect/Pipeable\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Ref from \"effect/Ref\"\nimport * as Schedule from \"effect/Schedule\"\nimport * as Scope from \"effect/Scope\"\nimport * as Cookies from \"../Cookies.js\"\nimport * as Headers from \"../Headers.js\"\nimport type * as Client from \"../HttpClient.js\"\nimport * as Error from \"../HttpClientError.js\"\nimport type * as ClientRequest from \"../HttpClientRequest.js\"\nimport type * as ClientResponse from \"../HttpClientResponse.js\"\nimport * as TraceContext from \"../HttpTraceContext.js\"\nimport * as UrlParams from \"../UrlParams.js\"\nimport * as internalRequest from \"./httpClientRequest.js\"\nimport * as internalResponse from \"./httpClientResponse.js\"\n\n/** @internal */\nexport const TypeId: Client.TypeId = Symbol.for(\n  \"@effect/platform/HttpClient\"\n) as Client.TypeId\n\n/** @internal */\nexport const tag = Context.GenericTag<Client.HttpClient>(\"@effect/platform/HttpClient\")\n\n/** @internal */\nexport const currentTracerDisabledWhen = globalValue(\n  Symbol.for(\"@effect/platform/HttpClient/tracerDisabledWhen\"),\n  () => FiberRef.unsafeMake<Predicate.Predicate<ClientRequest.HttpClientRequest>>(constFalse)\n)\n\n/** @internal */\nexport const withTracerDisabledWhen = dual<\n  (\n    predicate: Predicate.Predicate<ClientRequest.HttpClientRequest>\n  ) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(\n    effect: Effect.Effect<A, E, R>,\n    predicate: Predicate.Predicate<ClientRequest.HttpClientRequest>\n  ) => Effect.Effect<A, E, R>\n>(2, (self, pred) => Effect.locally(self, currentTracerDisabledWhen, pred))\n\n/** @internal */\nexport const currentTracerPropagation = globalValue(\n  Symbol.for(\"@effect/platform/HttpClient/currentTracerPropagation\"),\n  () => FiberRef.unsafeMake(true)\n)\n\n/** @internal */\nexport const withTracerPropagation = dual<\n  (\n    enabled: boolean\n  ) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(\n    effect: Effect.Effect<A, E, R>,\n    enabled: boolean\n  ) => Effect.Effect<A, E, R>\n>(2, (self, enabled) => Effect.locally(self, currentTracerPropagation, enabled))\n\nconst ClientProto = {\n  [TypeId]: TypeId,\n  pipe() {\n    return pipeArguments(this, arguments)\n  },\n  ...Inspectable.BaseProto,\n  toJSON() {\n    return {\n      _id: \"@effect/platform/HttpClient\"\n    }\n  },\n  get(this: Client.HttpClient, url: string | URL, options?: ClientRequest.Options.NoBody) {\n    return this.execute(internalRequest.get(url, options))\n  },\n  head(this: Client.HttpClient, url: string | URL, options?: ClientRequest.Options.NoBody) {\n    return this.execute(internalRequest.head(url, options))\n  },\n  post(this: Client.HttpClient, url: string | URL, options: ClientRequest.Options.NoUrl) {\n    return this.execute(internalRequest.post(url, options))\n  },\n  put(this: Client.HttpClient, url: string | URL, options: ClientRequest.Options.NoUrl) {\n    return this.execute(internalRequest.put(url, options))\n  },\n  patch(this: Client.HttpClient, url: string | URL, options: ClientRequest.Options.NoUrl) {\n    return this.execute(internalRequest.patch(url, options))\n  },\n  del(this: Client.HttpClient, url: string | URL, options?: ClientRequest.Options.NoUrl) {\n    return this.execute(internalRequest.del(url, options))\n  },\n  options(this: Client.HttpClient, url: string | URL, options?: ClientRequest.Options.NoBody) {\n    return this.execute(internalRequest.options(url, options))\n  }\n}\n\nconst isClient = (u: unknown): u is Client.HttpClient<unknown, unknown> => Predicate.hasProperty(u, TypeId)\n\ninterface HttpClientImpl<E, R> extends Client.HttpClient<E, R> {\n  readonly preprocess: Client.HttpClient.Preprocess<E, R>\n  readonly postprocess: Client.HttpClient.Postprocess<E, R>\n}\n\n/** @internal */\nexport const makeWith = <E2, R2, E, R>(\n  postprocess: (\n    request: Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n  preprocess: Client.HttpClient.Preprocess<E2, R2>\n): Client.HttpClient<E, R> => {\n  const self = Object.create(ClientProto)\n  self.preprocess = preprocess\n  self.postprocess = postprocess\n  self.execute = function(request: ClientRequest.HttpClientRequest) {\n    return postprocess(preprocess(request))\n  }\n  return self\n}\n\n/** @internal */\nexport const make = (\n  f: (\n    request: ClientRequest.HttpClientRequest,\n    url: URL,\n    signal: AbortSignal,\n    fiber: Fiber.RuntimeFiber<ClientResponse.HttpClientResponse, Error.HttpClientError>\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, Error.HttpClientError, Scope.Scope>\n): Client.HttpClient =>\n  makeWith((effect) =>\n    Effect.flatMap(effect, (request) =>\n      Effect.withFiberRuntime((fiber) => {\n        const scope = Context.unsafeGet(fiber.getFiberRef(FiberRef.currentContext), Scope.Scope)\n        const controller = new AbortController()\n        const addAbort = Scope.addFinalizer(scope, Effect.sync(() => controller.abort()))\n        const urlResult = UrlParams.makeUrl(request.url, request.urlParams, request.hash)\n        if (urlResult._tag === \"Left\") {\n          return Effect.fail(new Error.RequestError({ request, reason: \"InvalidUrl\", cause: urlResult.left }))\n        }\n        const url = urlResult.right\n        const tracerDisabled = !fiber.getFiberRef(FiberRef.currentTracerEnabled) ||\n          fiber.getFiberRef(currentTracerDisabledWhen)(request)\n        if (tracerDisabled) {\n          return Effect.zipRight(\n            addAbort,\n            f(request, url, controller.signal, fiber)\n          )\n        }\n        return Effect.zipRight(\n          addAbort,\n          Effect.useSpan(\n            `http.client ${request.method}`,\n            { kind: \"client\", captureStackTrace: false },\n            (span) => {\n              span.attribute(\"http.request.method\", request.method)\n              span.attribute(\"server.address\", url.origin)\n              if (url.port !== \"\") {\n                span.attribute(\"server.port\", +url.port)\n              }\n              span.attribute(\"url.full\", url.toString())\n              span.attribute(\"url.path\", url.pathname)\n              span.attribute(\"url.scheme\", url.protocol.slice(0, -1))\n              const query = url.search.slice(1)\n              if (query !== \"\") {\n                span.attribute(\"url.query\", query)\n              }\n              const redactedHeaderNames = fiber.getFiberRef(Headers.currentRedactedNames)\n              const redactedHeaders = Headers.redact(request.headers, redactedHeaderNames)\n              for (const name in redactedHeaders) {\n                span.attribute(`http.request.header.${name}`, String(redactedHeaders[name]))\n              }\n              request = fiber.getFiberRef(currentTracerPropagation)\n                ? internalRequest.setHeaders(request, TraceContext.toHeaders(span))\n                : request\n              return Effect.tap(\n                Effect.withParentSpan(\n                  f(\n                    request,\n                    url,\n                    controller.signal,\n                    fiber\n                  ),\n                  span\n                ),\n                (response) => {\n                  span.attribute(\"http.response.status_code\", response.status)\n                  const redactedHeaders = Headers.redact(response.headers, redactedHeaderNames)\n                  for (const name in redactedHeaders) {\n                    span.attribute(`http.response.header.${name}`, String(redactedHeaders[name]))\n                  }\n                }\n              )\n            }\n          )\n        )\n      })), Effect.succeed as Client.HttpClient.Preprocess<never, never>)\n\nexport const {\n  /** @internal */\n  del,\n  /** @internal */\n  execute,\n  /** @internal */\n  get,\n  /** @internal */\n  head,\n  /** @internal */\n  options,\n  /** @internal */\n  patch,\n  /** @internal */\n  post,\n  /** @internal */\n  put\n} = Effect.serviceFunctions(tag)\n\n/** @internal */\nexport const transform = dual<\n  <E, R, E1, R1>(\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n      request: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ) => (self: Client.HttpClient<E, R>) => Client.HttpClient<E | E1, R | R1>,\n  <E, R, E1, R1>(\n    self: Client.HttpClient<E, R>,\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n      request: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ) => Client.HttpClient<E | E1, R | R1>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(\n    Effect.flatMap((request) => f(client.postprocess(Effect.succeed(request)), request)),\n    client.preprocess\n  )\n})\n\n/** @internal */\nexport const filterStatus = dual<\n  (\n    f: (status: number) => boolean\n  ) => <E, R>(\n    self: Client.HttpClient<E, R>\n  ) => Client.HttpClient<E | Error.ResponseError, R>,\n  <E, R>(\n    self: Client.HttpClient<E, R>,\n    f: (status: number) => boolean\n  ) => Client.HttpClient<E | Error.ResponseError, R>\n>(2, (self, f) => transformResponse(self, Effect.flatMap(internalResponse.filterStatus(f))))\n\n/** @internal */\nexport const filterStatusOk = <E, R>(\n  self: Client.HttpClient<E, R>\n): Client.HttpClient<E | Error.ResponseError, R> =>\n  transformResponse(self, Effect.flatMap(internalResponse.filterStatusOk))\n\n/** @internal */\nexport const transformResponse = dual<\n  <E, R, E1, R1>(\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ) => (self: Client.HttpClient<E, R>) => Client.HttpClient<E1, R1>,\n  <E, R, E1, R1>(\n    self: Client.HttpClient<E, R>,\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ) => Client.HttpClient<E1, R1>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith((request) => f(client.postprocess(request)), client.preprocess)\n})\n\n/** @internal */\nexport const catchTag: {\n  <K extends E extends { _tag: string } ? E[\"_tag\"] : never, E, E1, R1>(\n    tag: K,\n    f: (e: Extract<E, { _tag: K }>) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): <R>(self: Client.HttpClient<E, R>) => Client.HttpClient<E1 | Exclude<E, { _tag: K }>, R1 | R>\n  <\n    R,\n    E,\n    K extends E extends { _tag: string } ? E[\"_tag\"] : never,\n    R1,\n    E1\n  >(\n    self: Client.HttpClient<E, R>,\n    tag: K,\n    f: (e: Extract<E, { _tag: K }>) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): Client.HttpClient<E1 | Exclude<E, { _tag: K }>, R1 | R>\n} = dual(\n  3,\n  <\n    R,\n    E,\n    K extends E extends { _tag: string } ? E[\"_tag\"] : never,\n    R1,\n    E1\n  >(\n    self: Client.HttpClient<E, R>,\n    tag: K,\n    f: (e: Extract<E, { _tag: K }>) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): Client.HttpClient<E1 | Exclude<E, { _tag: K }>, R1 | R> => transformResponse(self, Effect.catchTag(tag, f))\n)\n\n/** @internal */\nexport const catchTags: {\n  <\n    E,\n    Cases extends\n      & {\n        [K in Extract<E, { _tag: string }>[\"_tag\"]]+?: (\n          error: Extract<E, { _tag: K }>\n        ) => Effect.Effect<ClientResponse.HttpClientResponse, any, any>\n      }\n      & (unknown extends E ? {}\n        : {\n          [\n            K in Exclude<\n              keyof Cases,\n              Extract<E, { _tag: string }>[\"_tag\"]\n            >\n          ]: never\n        })\n  >(\n    cases: Cases\n  ): <R>(self: Client.HttpClient<E, R>) => Client.HttpClient<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, infer E, any> ? E\n        : never\n    }[keyof Cases],\n    | R\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, any, infer R> ? R\n        : never\n    }[keyof Cases]\n  >\n  <\n    E extends { _tag: string },\n    R,\n    Cases extends\n      & {\n        [K in Extract<E, { _tag: string }>[\"_tag\"]]+?: (\n          error: Extract<E, { _tag: K }>\n        ) => Effect.Effect<ClientResponse.HttpClientResponse, any, any>\n      }\n      & (unknown extends E ? {}\n        : {\n          [\n            K in Exclude<\n              keyof Cases,\n              Extract<E, { _tag: string }>[\"_tag\"]\n            >\n          ]: never\n        })\n  >(\n    self: Client.HttpClient<E, R>,\n    cases: Cases\n  ): Client.HttpClient<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, infer E, any> ? E\n        : never\n    }[keyof Cases],\n    | R\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, any, infer R> ? R\n        : never\n    }[keyof Cases]\n  >\n} = dual(\n  2,\n  <\n    E extends { _tag: string },\n    R,\n    Cases extends\n      & {\n        [K in Extract<E, { _tag: string }>[\"_tag\"]]+?: (\n          error: Extract<E, { _tag: K }>\n        ) => Effect.Effect<ClientResponse.HttpClientResponse, any, any>\n      }\n      & (unknown extends E ? {}\n        : {\n          [\n            K in Exclude<\n              keyof Cases,\n              Extract<E, { _tag: string }>[\"_tag\"]\n            >\n          ]: never\n        })\n  >(\n    self: Client.HttpClient<E, R>,\n    cases: Cases\n  ): Client.HttpClient<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, infer E, any> ? E\n        : never\n    }[keyof Cases],\n    | R\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, any, infer R> ? R\n        : never\n    }[keyof Cases]\n  > => transformResponse(self, Effect.catchTags(cases) as any)\n)\n\n/** @internal */\nexport const catchAll: {\n  <E, E2, R2>(\n    f: (e: E) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): <R>(self: Client.HttpClient<E, R>) => Client.HttpClient<E2, R | R2>\n  <E, R, E2, R2>(\n    self: Client.HttpClient<E, R>,\n    f: (e: E) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): Client.HttpClient<E2, R | R2>\n} = dual(\n  2,\n  <E, R, E2, R2>(\n    self: Client.HttpClient<E, R>,\n    f: (e: E) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): Client.HttpClient<E2, R | R2> => transformResponse(self, Effect.catchAll(f))\n)\n\n/** @internal */\nexport const filterOrElse: {\n  <E2, R2>(\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orElse: (response: ClientResponse.HttpClientResponse) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): <E, R>(\n    self: Client.HttpClient<E, R>\n  ) => Client.HttpClient<E2 | E, R2 | R>\n  <E, R, E2, R2>(\n    self: Client.HttpClient<E, R>,\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orElse: (response: ClientResponse.HttpClientResponse) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): Client.HttpClient<E2 | E, R2 | R>\n} = dual(3, (self, f, orElse) => transformResponse(self, Effect.filterOrElse(f, orElse)))\n\n/** @internal */\nexport const filterOrFail: {\n  <E2>(\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orFailWith: (response: ClientResponse.HttpClientResponse) => E2\n  ): <E, R>(self: Client.HttpClient<E, R>) => Client.HttpClient<E2 | E, R>\n  <E, R, E2>(\n    self: Client.HttpClient<E, R>,\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orFailWith: (response: ClientResponse.HttpClientResponse) => E2\n  ): Client.HttpClient<E2 | E, R>\n} = dual(3, (self, f, orFailWith) => transformResponse(self, Effect.filterOrFail(f, orFailWith)))\n\n/** @internal */\nexport const mapRequest = dual<\n  (\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ) => <E, R>(self: Client.HttpClient<E, R>) => Client.HttpClient<E, R>,\n  <E, R>(\n    self: Client.HttpClient<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ) => Client.HttpClient<E, R>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(client.postprocess, (request) => Effect.map(client.preprocess(request), f))\n})\n\n/** @internal */\nexport const mapRequestEffect = dual<\n  <E2, R2>(\n    f: (\n      a: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => <E, R>(\n    self: Client.HttpClient<E, R>\n  ) => Client.HttpClient<E | E2, R | R2>,\n  <E, R, E2, R2>(\n    self: Client.HttpClient<E, R>,\n    f: (\n      a: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => Client.HttpClient<E | E2, R | R2>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(client.postprocess as any, (request) => Effect.flatMap(client.preprocess(request), f))\n})\n\n/** @internal */\nexport const mapRequestInput = dual<\n  (\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ) => <E, R>(self: Client.HttpClient<E, R>) => Client.HttpClient<E, R>,\n  <E, R>(\n    self: Client.HttpClient<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ) => Client.HttpClient<E, R>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(client.postprocess, (request) => client.preprocess(f(request)))\n})\n\n/** @internal */\nexport const mapRequestInputEffect = dual<\n  <E2, R2>(\n    f: (\n      a: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => <E, R>(\n    self: Client.HttpClient<E, R>\n  ) => Client.HttpClient<E | E2, R | R2>,\n  <E, R, E2, R2>(\n    self: Client.HttpClient<E, R>,\n    f: (\n      a: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => Client.HttpClient<E | E2, R | R2>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(client.postprocess as any, (request) => Effect.flatMap(f(request), client.preprocess))\n})\n\n/** @internal */\nexport const retry: {\n  <E, O extends Effect.Retry.Options<E>>(\n    options: O\n  ): <R>(self: Client.HttpClient<E, R>) => Client.Retry.Return<R, E, O>\n  <B, E, R1>(\n    policy: Schedule.Schedule<B, NoInfer<E>, R1>\n  ): <R>(self: Client.HttpClient<E, R>) => Client.HttpClient<E, R1 | R>\n  <E, R, O extends Effect.Retry.Options<E>>(\n    self: Client.HttpClient<E, R>,\n    options: O\n  ): Client.Retry.Return<R, E, O>\n  <E, R, B, R1>(\n    self: Client.HttpClient<E, R>,\n    policy: Schedule.Schedule<B, E, R1>\n  ): Client.HttpClient<E, R1 | R>\n} = dual(\n  2,\n  <E extends E0, E0, R, R1, B>(\n    self: Client.HttpClient<E, R>,\n    policy: Schedule.Schedule<B, E0, R1>\n  ): Client.HttpClient<E, R | R1> => transformResponse(self, Effect.retry(policy))\n)\n\n/** @internal */\nexport const retryTransient: {\n  <B, E, R1 = never>(\n    options: {\n      readonly schedule?: Schedule.Schedule<B, NoInfer<E>, R1>\n      readonly times?: number\n    } | Schedule.Schedule<B, NoInfer<E>, R1>\n  ): <R>(self: Client.HttpClient<E, R>) => Client.HttpClient<E, R1 | R>\n  <E, R, B, R1 = never>(\n    self: Client.HttpClient<E, R>,\n    options: {\n      readonly schedule?: Schedule.Schedule<B, NoInfer<E>, R1>\n      readonly times?: number\n    } | Schedule.Schedule<B, NoInfer<E>, R1>\n  ): Client.HttpClient<E, R1 | R>\n} = dual(\n  2,\n  <E extends E0, E0, R, B, R1 = never>(\n    self: Client.HttpClient<E, R>,\n    options: {\n      readonly schedule?: Schedule.Schedule<B, NoInfer<E>, R1>\n      readonly times?: number\n    } | Schedule.Schedule<B, NoInfer<E>, R1>\n  ): Client.HttpClient<E, R | R1> =>\n    transformResponse(\n      self,\n      Effect.retry({\n        while: (error) =>\n          Error.isHttpClientError(error) &&\n          ((error._tag === \"RequestError\" && error.reason === \"Transport\") ||\n            (error._tag === \"ResponseError\" && error.response.status >= 429)),\n        schedule: Schedule.ScheduleTypeId in options ? options : options.schedule,\n        times: Schedule.ScheduleTypeId in options ? undefined : options.times\n      })\n    )\n)\n\n/** @internal */\nexport const tap = dual<\n  <_, E2, R2>(\n    f: (response: ClientResponse.HttpClientResponse) => Effect.Effect<_, E2, R2>\n  ) => <E, R>(self: Client.HttpClient<E, R>) => Client.HttpClient<E | E2, R | R2>,\n  <E, R, _, E2, R2>(\n    self: Client.HttpClient<E, R>,\n    f: (response: ClientResponse.HttpClientResponse) => Effect.Effect<_, E2, R2>\n  ) => Client.HttpClient<E | E2, R | R2>\n>(2, (self, f) => transformResponse(self, Effect.tap(f)))\n\n/** @internal */\nexport const tapRequest = dual<\n  <_, E2, R2>(\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<_, E2, R2>\n  ) => <E, R>(\n    self: Client.HttpClient<E, R>\n  ) => Client.HttpClient<E | E2, R | R2>,\n  <E, R, _, E2, R2>(\n    self: Client.HttpClient<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<_, E2, R2>\n  ) => Client.HttpClient<E | E2, R | R2>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(client.postprocess as any, (request) => Effect.tap(client.preprocess(request), f))\n})\n\n/** @internal */\nexport const withCookiesRef = dual<\n  (\n    ref: Ref.Ref<Cookies.Cookies>\n  ) => <E, R>(self: Client.HttpClient<E, R>) => Client.HttpClient<E, R>,\n  <E, R>(\n    self: Client.HttpClient<E, R>,\n    ref: Ref.Ref<Cookies.Cookies>\n  ) => Client.HttpClient<E, R>\n>(\n  2,\n  <E, R>(\n    self: Client.HttpClient<E, R>,\n    ref: Ref.Ref<Cookies.Cookies>\n  ): Client.HttpClient<E, R> => {\n    const client = self as HttpClientImpl<E, R>\n    return makeWith(\n      (request: Effect.Effect<ClientRequest.HttpClientRequest, E, R>) =>\n        Effect.tap(\n          client.postprocess(request),\n          (response) => Ref.update(ref, (cookies) => Cookies.merge(cookies, response.cookies))\n        ),\n      (request) =>\n        Effect.flatMap(client.preprocess(request), (request) =>\n          Effect.map(\n            Ref.get(ref),\n            (cookies) =>\n              Cookies.isEmpty(cookies)\n                ? request\n                : internalRequest.setHeader(request, \"cookie\", Cookies.toCookieHeader(cookies))\n          ))\n    )\n  }\n)\n\n/** @internal */\nexport const followRedirects = dual<\n  (\n    maxRedirects?: number | undefined\n  ) => <E, R>(self: Client.HttpClient<E, R>) => Client.HttpClient<E, R>,\n  <E, R>(\n    self: Client.HttpClient<E, R>,\n    maxRedirects?: number | undefined\n  ) => Client.HttpClient<E, R>\n>((args) => isClient(args[0]), <E, R>(\n  self: Client.HttpClient<E, R>,\n  maxRedirects?: number | undefined\n): Client.HttpClient<E, R> => {\n  const client = self as HttpClientImpl<E, R>\n  return makeWith(\n    (request) => {\n      const loop = (\n        request: ClientRequest.HttpClientRequest,\n        redirects: number\n      ): Effect.Effect<ClientResponse.HttpClientResponse, E, R> =>\n        Effect.flatMap(\n          client.postprocess(Effect.succeed(request)),\n          (response) =>\n            response.status >= 300 && response.status < 400 && response.headers.location &&\n              redirects < (maxRedirects ?? 10)\n              ? loop(\n                internalRequest.setUrl(\n                  request,\n                  response.headers.location\n                ),\n                redirects + 1\n              )\n              : Effect.succeed(response)\n        )\n      return Effect.flatMap(request, (request) => loop(request, 0))\n    },\n    client.preprocess\n  )\n})\n\n/** @internal */\nexport const layerMergedContext = <E, R>(\n  effect: Effect.Effect<Client.HttpClient, E, R>\n): Layer.Layer<Client.HttpClient, E, R> =>\n  Layer.effect(\n    tag,\n    Effect.flatMap(Effect.context<never>(), (context) =>\n      Effect.map(effect, (client) =>\n        transformResponse(\n          client,\n          Effect.mapInputContext((input: Context.Context<Scope.Scope>) => Context.merge(context, input))\n        )))\n  )\n"],"names":["Context","Effect","FiberRef","constFalse","dual","globalValue","Inspectable","Layer","pipeArguments","Predicate","Ref","Schedule","Scope","Cookies","Headers","Error","TraceContext","UrlParams","internalRequest","internalResponse","TypeId","Symbol","for","tag","GenericTag","currentTracerDisabledWhen","unsafeMake","withTracerDisabledWhen","self","pred","locally","currentTracerPropagation","withTracerPropagation","enabled","ClientProto","pipe","arguments","BaseProto","toJSON","_id","get","url","options","execute","head","post","put","patch","del","isClient","u","hasProperty","makeWith","postprocess","preprocess","Object","create","request","make","f","effect","flatMap","withFiberRuntime","fiber","scope","unsafeGet","getFiberRef","currentContext","controller","AbortController","addAbort","addFinalizer","sync","abort","urlResult","makeUrl","urlParams","hash","_tag","fail","RequestError","reason","cause","left","right","tracerDisabled","currentTracerEnabled","zipRight","signal","useSpan","method","kind","captureStackTrace","span","attribute","origin","port","toString","pathname","protocol","slice","query","search","redactedHeaderNames","currentRedactedNames","redactedHeaders","redact","headers","name","String","setHeaders","toHeaders","tap","withParentSpan","response","status","succeed","serviceFunctions","transform","client","filterStatus","transformResponse","filterStatusOk","catchTag","catchTags","cases","catchAll","filterOrElse","orElse","filterOrFail","orFailWith","mapRequest","map","mapRequestEffect","mapRequestInput","mapRequestInputEffect","retry","policy","retryTransient","while","error","isHttpClientError","schedule","ScheduleTypeId","times","undefined","tapRequest","withCookiesRef","ref","update","cookies","merge","isEmpty","setHeader","toCookieHeader","followRedirects","args","maxRedirects","loop","redirects","location","setUrl","layerMergedContext","context","mapInputContext","input"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1977, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1983, "column": 0}, "map": {"version":3,"file":"fetchHttpClient.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/fetchHttpClient.ts"],"sourcesContent":["import * as Effect from \"effect/Effect\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport * as Stream from \"effect/Stream\"\nimport type * as Client from \"../HttpClient.js\"\nimport * as Error from \"../HttpClientError.js\"\nimport * as client from \"./httpClient.js\"\nimport * as internalResponse from \"./httpClientResponse.js\"\n\n/** @internal */\nexport const fetchTagKey = \"@effect/platform/FetchHttpClient/Fetch\"\n/** @internal */\nexport const requestInitTagKey = \"@effect/platform/FetchHttpClient/FetchOptions\"\n\nconst fetch: Client.HttpClient = client.make((request, url, signal, fiber) => {\n  const context = fiber.getFiberRef(FiberRef.currentContext)\n  const fetch: typeof globalThis.fetch = context.unsafeMap.get(fetchTagKey) ?? globalThis.fetch\n  const options: RequestInit = context.unsafeMap.get(requestInitTagKey) ?? {}\n  const headers = new globalThis.Headers(request.headers)\n  const send = (body: BodyInit | undefined) =>\n    Effect.map(\n      Effect.tryPromise({\n        try: () =>\n          fetch(url, {\n            ...options,\n            method: request.method,\n            headers,\n            body,\n            duplex: request.body._tag === \"Stream\" ? \"half\" : undefined,\n            signal\n          } as any),\n        catch: (cause) =>\n          new Error.RequestError({\n            request,\n            reason: \"Transport\",\n            cause\n          })\n      }),\n      (response) => internalResponse.fromWeb(request, response)\n    )\n  switch (request.body._tag) {\n    case \"Raw\":\n    case \"Uint8Array\":\n      return send(request.body.body as any)\n    case \"FormData\":\n      return send(request.body.formData)\n    case \"Stream\":\n      return Effect.flatMap(Stream.toReadableStreamEffect(request.body.stream), send)\n  }\n  return send(undefined)\n})\n\n/** @internal */\nexport const layer = client.layerMergedContext(Effect.succeed(fetch))\n"],"names":["Effect","FiberRef","Stream","Error","client","internalResponse","fetchTagKey","requestInitTagKey","fetch","make","request","url","signal","fiber","context","getFiberRef","currentContext","unsafeMap","get","globalThis","options","headers","Headers","send","body","map","tryPromise","try","method","duplex","_tag","undefined","catch","cause","RequestError","reason","response","fromWeb","formData","flatMap","toReadableStreamEffect","stream","layer","layerMergedContext","succeed"],"mappings":";;;;;AAKA,OAAO,KAAKI,MAAM,MAAM,iBAAiB;AAJzC,OAAO,KAAKH,QAAQ,MAAM,iBAAiB;AAD3C,OAAO,KAAKD,MAAM,MAAM,eAAe;AAIvC,OAAO,KAAKG,KAAK,MAAM,uBAAuB;AAE9C,OAAO,KAAKE,gBAAgB,MAAM,yBAAyB;AAJ3D,OAAO,KAAKH,MAAM,MAAM,eAAe;;;;;;;AAOhC,MAAMI,WAAW,GAAG,wCAAwC;AAE5D,MAAMC,iBAAiB,GAAG,+CAA+C;AAEhF,MAAMC,KAAK,GAAA,WAAA,GAAsBJ,MAAM,mQAACK,IAAI,CAAC,CAACC,OAAO,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,KAAI;IAC3E,MAAMC,OAAO,GAAGD,KAAK,CAACE,WAAW,CAACd,QAAQ,gMAACe,cAAc,CAAC;IAC1D,MAAMR,KAAK,GAA4BM,OAAO,CAACG,SAAS,CAACC,GAAG,CAACZ,WAAW,CAAC,IAAIa,UAAU,CAACX,KAAK;IAC7F,MAAMY,OAAO,GAAgBN,OAAO,CAACG,SAAS,CAACC,GAAG,CAACX,iBAAiB,CAAC,IAAI,CAAA,CAAE;IAC3E,MAAMc,OAAO,GAAG,IAAIF,UAAU,CAACG,OAAO,CAACZ,OAAO,CAACW,OAAO,CAAC;IACvD,MAAME,IAAI,IAAIC,IAA0B,GACtCxB,MAAM,gMAACyB,GAAG,CACRzB,MAAM,gMAAC0B,UAAU,CAAC;YAChBC,GAAG,EAAEA,CAAA,GACHnB,KAAK,CAACG,GAAG,EAAE;oBACT,GAAGS,OAAO;oBACVQ,MAAM,EAAElB,OAAO,CAACkB,MAAM;oBACtBP,OAAO;oBACPG,IAAI;oBACJK,MAAM,EAAEnB,OAAO,CAACc,IAAI,CAACM,IAAI,KAAK,QAAQ,GAAG,MAAM,GAAGC,SAAS;oBAC3DnB;iBACM,CAAC;YACXoB,KAAK,GAAGC,KAAK,GACX,IAAI9B,KAAK,6PAAC+B,YAAY,CAAC;oBACrBxB,OAAO;oBACPyB,MAAM,EAAE,WAAW;oBACnBF;iBACD;SACJ,CAAC,GACDG,QAAQ,GAAK/B,gBAAgB,iQAACgC,OAAO,CAAC3B,OAAO,EAAE0B,QAAQ,CAAC,CAC1D;IACH,OAAQ1B,OAAO,CAACc,IAAI,CAACM,IAAI;QACvB,KAAK,KAAK;QACV,KAAK,YAAY;YACf,OAAOP,IAAI,CAACb,OAAO,CAACc,IAAI,CAACA,IAAW,CAAC;QACvC,KAAK,UAAU;YACb,OAAOD,IAAI,CAACb,OAAO,CAACc,IAAI,CAACc,QAAQ,CAAC;QACpC,KAAK,QAAQ;YACX,OAAOtC,MAAM,gMAACuC,OAAO,CAACrC,MAAM,gMAACsC,sBAAsB,CAAC9B,OAAO,CAACc,IAAI,CAACiB,MAAM,CAAC,EAAElB,IAAI,CAAC;IACnF;IACA,OAAOA,IAAI,CAACQ,SAAS,CAAC;AACxB,CAAC,CAAC;AAGK,MAAMW,KAAK,GAAA,WAAA,GAAGtC,MAAM,mQAACuC,kBAAkB,CAAA,WAAA,GAAC3C,MAAM,gMAAC4C,OAAO,CAACpC,KAAK,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2034, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2040, "column": 0}, "map": {"version":3,"file":"FetchHttpClient.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/FetchHttpClient.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Context from \"effect/Context\"\nimport type * as Layer from \"effect/Layer\"\nimport type { HttpClient } from \"./HttpClient.js\"\nimport * as internal from \"./internal/fetchHttpClient.js\"\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport class Fetch extends Context.Tag(internal.fetchTagKey)<Fetch, typeof globalThis.fetch>() {}\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport class RequestInit extends Context.Tag(internal.requestInitTagKey)<RequestInit, globalThis.RequestInit>() {}\n\n/**\n * @since 1.0.0\n * @category layers\n */\nexport const layer: Layer.Layer<HttpClient> = internal.layer\n"],"names":["Context","internal","Fetch","Tag","fetchTagKey","RequestInit","requestInitTagKey","layer"],"mappings":"AAAA;;;;;;;AAGA,OAAO,KAAKA,OAAO,MAAM,gBAAgB;AAGzC,OAAO,KAAKC,QAAQ,MAAM,+BAA+B;;;AAMnD,MAAOC,KAAM,SAAA,WAAA,GAAQF,OAAO,gMAACG,GAAG,CAACF,QAAQ,sQAACG,WAAW,CAAC,EAAkC;AAAA;AAMxF,MAAOC,WAAY,SAAA,WAAA,GAAQL,OAAO,gMAACG,GAAG,CAACF,QAAQ,sQAACK,iBAAiB,CAAC,EAAuC;AAAA;AAMxG,MAAMC,KAAK,GAA4BN,QAAQ,sQAACM,KAAK","ignoreList":[0]}},
    {"offset": {"line": 2056, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2082, "column": 0}, "map": {"version":3,"file":"Socket.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/Socket.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Channel from \"effect/Channel\"\nimport type * as Chunk from \"effect/Chunk\"\nimport * as Context from \"effect/Context\"\nimport * as Deferred from \"effect/Deferred\"\nimport type { DurationInput } from \"effect/Duration\"\nimport * as Effect from \"effect/Effect\"\nimport * as ExecutionStrategy from \"effect/ExecutionStrategy\"\nimport * as Exit from \"effect/Exit\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport * as FiberSet from \"effect/FiberSet\"\nimport { dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Layer from \"effect/Layer\"\nimport * as Mailbox from \"effect/Mailbox\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Queue from \"effect/Queue\"\nimport * as Scope from \"effect/Scope\"\nimport type * as AsyncProducer from \"effect/SingleProducerAsyncInput\"\nimport { TypeIdError } from \"./Error.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"@effect/platform/Socket\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category guards\n */\nexport const isSocket = (u: unknown): u is Socket => Predicate.hasProperty(u, TypeId)\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const Socket: Context.Tag<Socket, Socket> = Context.GenericTag<Socket>(\n  \"@effect/platform/Socket\"\n)\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Socket {\n  readonly [TypeId]: TypeId\n  readonly run: <_, E = never, R = never>(\n    handler: (_: Uint8Array) => Effect.Effect<_, E, R> | void\n  ) => Effect.Effect<void, SocketError | E, R>\n  readonly runRaw: <_, E = never, R = never>(\n    handler: (_: string | Uint8Array) => Effect.Effect<_, E, R> | void\n  ) => Effect.Effect<void, SocketError | E, R>\n  readonly writer: Effect.Effect<\n    (chunk: Uint8Array | string | CloseEvent) => Effect.Effect<boolean>,\n    never,\n    Scope.Scope\n  >\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const CloseEventTypeId: unique symbol = Symbol.for(\"@effect/platform/Socket/CloseEvent\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type CloseEventTypeId = typeof CloseEventTypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport class CloseEvent {\n  /**\n   * @since 1.0.0\n   */\n  readonly [CloseEventTypeId]: CloseEventTypeId\n  constructor(readonly code = 1000, readonly reason?: string) {\n    this[CloseEventTypeId] = CloseEventTypeId\n  }\n  /**\n   * @since 1.0.0\n   */\n  toString() {\n    return this.reason ? `${this.code}: ${this.reason}` : `${this.code}`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isCloseEvent = (u: unknown): u is CloseEvent => Predicate.hasProperty(u, CloseEventTypeId)\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const SocketErrorTypeId: unique symbol = Symbol.for(\"@effect/platform/Socket/SocketError\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type SocketErrorTypeId = typeof SocketErrorTypeId\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isSocketError = (u: unknown): u is SocketError => Predicate.hasProperty(u, SocketErrorTypeId)\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport type SocketError = SocketGenericError | SocketCloseError\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport class SocketGenericError extends TypeIdError(SocketErrorTypeId, \"SocketError\")<{\n  readonly reason: \"Write\" | \"Read\" | \"Open\" | \"OpenTimeout\"\n  readonly cause: unknown\n}> {\n  get message() {\n    return `An error occurred during ${this.reason}`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport class SocketCloseError extends TypeIdError(SocketErrorTypeId, \"SocketError\")<{\n  readonly reason: \"Close\"\n  readonly code: number\n  readonly closeReason?: string | undefined\n}> {\n  /**\n   * @since 1.0.0\n   */\n  static is(u: unknown): u is SocketCloseError {\n    return isSocketError(u) && u.reason === \"Close\"\n  }\n\n  /**\n   * @since 1.0.0\n   */\n  static isClean(isClean: (code: number) => boolean) {\n    return function(u: unknown): u is SocketCloseError {\n      return SocketCloseError.is(u) && isClean(u.code)\n    }\n  }\n\n  get message() {\n    if (this.closeReason) {\n      return `${this.reason}: ${this.code}: ${this.closeReason}`\n    }\n    return `${this.reason}: ${this.code}`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toChannelMap = <IE, A>(\n  self: Socket,\n  f: (data: Uint8Array | string) => A\n): Channel.Channel<\n  Chunk.Chunk<A>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown\n> =>\n  Effect.scope.pipe(\n    Effect.bindTo(\"scope\"),\n    Effect.bind(\"mailbox\", () => Mailbox.make<A, SocketError | IE>()),\n    Effect.bind(\"writeScope\", ({ scope }) => Scope.fork(scope, ExecutionStrategy.sequential)),\n    Effect.bind(\"write\", ({ writeScope }) => Scope.extend(self.writer, writeScope)),\n    Effect.let(\n      \"input\",\n      (\n        { mailbox, write, writeScope }\n      ): AsyncProducer.AsyncInputProducer<IE, Chunk.Chunk<Uint8Array | string | CloseEvent>, unknown> => ({\n        awaitRead: () => Effect.void,\n        emit(chunk) {\n          return Effect.catchAllCause(\n            Effect.forEach(chunk, write, { discard: true }),\n            (cause) => mailbox.failCause(cause)\n          )\n        },\n        error(error) {\n          return Effect.zipRight(\n            Scope.close(writeScope, Exit.void),\n            mailbox.failCause(error)\n          )\n        },\n        done() {\n          return Scope.close(writeScope, Exit.void)\n        }\n      })\n    ),\n    Effect.tap(({ mailbox, scope }) =>\n      self.runRaw((data) => {\n        mailbox.unsafeOffer(f(data))\n      }).pipe(\n        Mailbox.into(mailbox),\n        Effect.forkIn(scope),\n        Effect.interruptible\n      )\n    ),\n    Effect.map(({ input, mailbox }) => Channel.embedInput(Mailbox.toChannel(mailbox), input)),\n    Channel.unwrapScoped\n  )\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toChannel = <IE>(\n  self: Socket\n): Channel.Channel<\n  Chunk.Chunk<Uint8Array>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown\n> => {\n  const encoder = new TextEncoder()\n  return toChannelMap(self, (data) => typeof data === \"string\" ? encoder.encode(data) : data)\n}\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toChannelString: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (encoding?: string | undefined): <IE>(self: Socket) => Channel.Channel<\n    Chunk.Chunk<string>,\n    Chunk.Chunk<Uint8Array | string | CloseEvent>,\n    SocketError | IE,\n    IE,\n    void,\n    unknown\n  >\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <IE>(self: Socket, encoding?: string | undefined): Channel.Channel<\n    Chunk.Chunk<string>,\n    Chunk.Chunk<Uint8Array | string | CloseEvent>,\n    SocketError | IE,\n    IE,\n    void,\n    unknown\n  >\n} = dual((args) => isSocket(args[0]), <IE>(\n  self: Socket,\n  encoding?: string | undefined\n): Channel.Channel<\n  Chunk.Chunk<string>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown\n> => {\n  const decoder = new TextDecoder(encoding)\n  return toChannelMap(self, (data) => typeof data === \"string\" ? data : decoder.decode(data))\n})\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toChannelWith = <IE = never>() =>\n(\n  self: Socket\n): Channel.Channel<\n  Chunk.Chunk<Uint8Array>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown\n> => toChannel(self)\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeChannel = <IE = never>(): Channel.Channel<\n  Chunk.Chunk<Uint8Array>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown,\n  Socket\n> => Channel.unwrap(Effect.map(Socket, toChannelWith<IE>()))\n\n/**\n * @since 1.0.0\n */\nexport const defaultCloseCodeIsError = (code: number) => code !== 1000 && code !== 1006\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport interface WebSocket {\n  readonly _: unique symbol\n}\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const WebSocket: Context.Tag<WebSocket, globalThis.WebSocket> = Context.GenericTag(\n  \"@effect/platform/Socket/WebSocket\"\n)\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport interface WebSocketConstructor {\n  readonly _: unique symbol\n}\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const WebSocketConstructor: Context.Tag<\n  WebSocketConstructor,\n  (url: string, protocols?: string | Array<string> | undefined) => globalThis.WebSocket\n> = Context\n  .GenericTag(\"@effect/platform/Socket/WebSocketConstructor\")\n\n/**\n * @since 1.0.0\n * @category layers\n */\nexport const layerWebSocketConstructorGlobal: Layer.Layer<WebSocketConstructor> = Layer.succeed(\n  WebSocketConstructor,\n  (url, protocols) => new globalThis.WebSocket(url, protocols)\n)\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeWebSocket = (url: string | Effect.Effect<string>, options?: {\n  readonly closeCodeIsError?: ((code: number) => boolean) | undefined\n  readonly openTimeout?: DurationInput | undefined\n  readonly protocols?: string | Array<string> | undefined\n}): Effect.Effect<Socket, never, WebSocketConstructor> =>\n  fromWebSocket(\n    Effect.acquireRelease(\n      (typeof url === \"string\" ? Effect.succeed(url) : url).pipe(\n        Effect.flatMap((url) => Effect.map(WebSocketConstructor, (f) => f(url, options?.protocols)))\n      ),\n      (ws) => Effect.sync(() => ws.close())\n    ),\n    options\n  )\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromWebSocket = <R>(\n  acquire: Effect.Effect<globalThis.WebSocket, SocketError, R>,\n  options?: {\n    readonly closeCodeIsError?: (code: number) => boolean\n    readonly openTimeout?: DurationInput\n  }\n): Effect.Effect<Socket, never, Exclude<R, Scope.Scope>> =>\n  Effect.withFiberRuntime<Socket, never, Exclude<R, Scope.Scope>>((fiber) =>\n    Effect.map(\n      Queue.dropping<Uint8Array | string | CloseEvent>(fiber.getFiberRef(currentSendQueueCapacity)),\n      (sendQueue) => {\n        const acquireContext = fiber.getFiberRef(FiberRef.currentContext) as Context.Context<R>\n        const closeCodeIsError = options?.closeCodeIsError ?? defaultCloseCodeIsError\n        const runRaw = <_, E, R>(handler: (_: string | Uint8Array) => Effect.Effect<_, E, R> | void) =>\n          acquire.pipe(\n            Effect.bindTo(\"ws\"),\n            Effect.bind(\"fiberSet\", () => FiberSet.make<any, E | SocketError>()),\n            Effect.bind(\"run\", ({ fiberSet, ws }) =>\n              Effect.provideService(FiberSet.runtime(fiberSet)<R>(), WebSocket, ws)),\n            Effect.tap(({ fiberSet, run, ws }) => {\n              let open = false\n\n              function onMessage(event: MessageEvent) {\n                if (event.data instanceof Blob) {\n                  return Effect.promise(() =>\n                    event.data.arrayBuffer() as Promise<ArrayBuffer>\n                  ).pipe(\n                    Effect.andThen((buffer) => handler(new Uint8Array(buffer))),\n                    run\n                  )\n                }\n                const result = handler(event.data)\n                if (Effect.isEffect(result)) {\n                  run(result)\n                }\n              }\n              function onError(cause: Event) {\n                ws.removeEventListener(\"message\", onMessage)\n                ws.removeEventListener(\"close\", onClose)\n                Deferred.unsafeDone(\n                  fiberSet.deferred,\n                  Effect.fail(new SocketGenericError({ reason: open ? \"Read\" : \"Open\", cause }))\n                )\n              }\n              function onClose(event: globalThis.CloseEvent) {\n                ws.removeEventListener(\"message\", onMessage)\n                ws.removeEventListener(\"error\", onError)\n                Deferred.unsafeDone(\n                  fiberSet.deferred,\n                  Effect.fail(\n                    new SocketCloseError({\n                      reason: \"Close\",\n                      code: event.code,\n                      closeReason: event.reason\n                    })\n                  )\n                )\n              }\n\n              ws.addEventListener(\"close\", onClose, { once: true })\n              ws.addEventListener(\"error\", onError, { once: true })\n              ws.addEventListener(\"message\", onMessage)\n\n              if (ws.readyState !== 1) {\n                const openDeferred = Deferred.unsafeMake<void>(fiber.id())\n                ws.addEventListener(\"open\", () => {\n                  open = true\n                  Deferred.unsafeDone(openDeferred, Effect.void)\n                }, { once: true })\n                return Deferred.await(openDeferred).pipe(\n                  Effect.timeoutFail({\n                    duration: options?.openTimeout ?? 10000,\n                    onTimeout: () =>\n                      new SocketGenericError({ reason: \"OpenTimeout\", cause: \"timeout waiting for \\\"open\\\"\" })\n                  }),\n                  Effect.raceFirst(FiberSet.join(fiberSet))\n                )\n              }\n              open = true\n              return Effect.void\n            }),\n            Effect.tap(({ fiberSet, ws }) =>\n              Queue.take(sendQueue).pipe(\n                Effect.tap((chunk) =>\n                  isCloseEvent(chunk) ?\n                    Effect.failSync(() => {\n                      ws.close(chunk.code, chunk.reason)\n                      return new SocketCloseError({\n                        reason: \"Close\",\n                        code: chunk.code,\n                        closeReason: chunk.reason\n                      })\n                    }) :\n                    Effect.try({\n                      try: () => ws.send(chunk),\n                      catch: (cause) => new SocketGenericError({ reason: \"Write\", cause })\n                    })\n                ),\n                Effect.forever,\n                FiberSet.run(fiberSet)\n              )\n            ),\n            Effect.tap(({ fiberSet }) =>\n              Effect.catchIf(\n                FiberSet.join(fiberSet),\n                SocketCloseError.isClean((_) => !closeCodeIsError(_)),\n                (_) => Effect.void\n              )\n            ),\n            Effect.mapInputContext((input: Context.Context<R | Scope.Scope>) => Context.merge(acquireContext, input)),\n            Effect.scoped,\n            Effect.interruptible\n          )\n\n        const encoder = new TextEncoder()\n        const run = <_, E, R>(handler: (_: Uint8Array) => Effect.Effect<_, E, R> | void) =>\n          runRaw((data) =>\n            typeof data === \"string\"\n              ? handler(encoder.encode(data))\n              : handler(data)\n          )\n\n        const write = (chunk: Uint8Array | string | CloseEvent) => Queue.offer(sendQueue, chunk)\n        const writer = Effect.succeed(write)\n\n        return Socket.of({\n          [TypeId]: TypeId,\n          run,\n          runRaw,\n          writer\n        })\n      }\n    )\n  )\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeWebSocketChannel = <IE = never>(\n  url: string,\n  options?: {\n    readonly closeCodeIsError?: (code: number) => boolean\n  }\n): Channel.Channel<\n  Chunk.Chunk<Uint8Array>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown,\n  WebSocketConstructor\n> =>\n  Channel.unwrapScoped(\n    Effect.map(makeWebSocket(url, options), toChannelWith<IE>())\n  )\n\n/**\n * @since 1.0.0\n * @category layers\n */\nexport const layerWebSocket = (url: string, options?: {\n  readonly closeCodeIsError?: (code: number) => boolean\n}): Layer.Layer<Socket, never, WebSocketConstructor> =>\n  Layer.effect(\n    Socket,\n    makeWebSocket(url, options)\n  )\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const currentSendQueueCapacity: FiberRef.FiberRef<number> = globalValue(\n  \"@effect/platform/Socket/currentSendQueueCapacity\",\n  () => FiberRef.unsafeMake(16)\n)\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface InputTransformStream {\n  readonly readable: ReadableStream<Uint8Array> | ReadableStream<string> | ReadableStream<Uint8Array | string>\n  readonly writable: WritableStream<Uint8Array>\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromTransformStream = <R>(acquire: Effect.Effect<InputTransformStream, SocketError, R>, options?: {\n  readonly closeCodeIsError?: (code: number) => boolean\n}): Effect.Effect<Socket, never, Exclude<R, Scope.Scope>> => {\n  const EOF = Symbol()\n  return Effect.withFiberRuntime<Socket, never, Exclude<R, Scope.Scope>>((fiber) =>\n    Effect.map(\n      Queue.dropping<Uint8Array | string | CloseEvent | typeof EOF>(fiber.getFiberRef(currentSendQueueCapacity)),\n      (sendQueue) => {\n        const acquireContext = fiber.getFiberRef(FiberRef.currentContext) as Context.Context<R>\n        const closeCodeIsError = options?.closeCodeIsError ?? defaultCloseCodeIsError\n        const runRaw = <_, E, R>(handler: (_: string | Uint8Array) => Effect.Effect<_, E, R> | void) =>\n          acquire.pipe(\n            Effect.bindTo(\"stream\"),\n            Effect.bind(\"reader\", ({ stream }) =>\n              Effect.acquireRelease(\n                Effect.sync(() => stream.readable.getReader()),\n                (reader) =>\n                  Effect.promise(() => reader.cancel()).pipe(\n                    Effect.tap(() => {\n                      reader.releaseLock()\n                    })\n                  )\n              )),\n            Effect.bind(\"writer\", ({ stream }) =>\n              Effect.acquireRelease(\n                Effect.sync(() => stream.writable.getWriter()),\n                (reader) => Effect.sync(() => reader.releaseLock())\n              )),\n            Effect.bind(\"fiberSet\", () => FiberSet.make<any, E | SocketError>()),\n            Effect.tap(({ fiberSet, writer }) => {\n              const encoder = new TextEncoder()\n              return Queue.take(sendQueue).pipe(\n                Effect.tap((chunk) => {\n                  if (\n                    chunk === EOF ||\n                    isCloseEvent(chunk)\n                  ) {\n                    return Effect.zipRight(\n                      Effect.promise(() => writer.close()),\n                      chunk === EOF ? Effect.interrupt : Effect.fail(\n                        new SocketCloseError({\n                          reason: \"Close\",\n                          code: chunk.code,\n                          closeReason: chunk.reason\n                        })\n                      )\n                    )\n                  }\n                  return Effect.try({\n                    try: () => {\n                      if (typeof chunk === \"string\") {\n                        writer.write(encoder.encode(chunk))\n                      } else {\n                        writer.write(chunk)\n                      }\n                    },\n                    catch: (cause) => new SocketGenericError({ reason: \"Write\", cause })\n                  })\n                }),\n                Effect.forever,\n                FiberSet.run(fiberSet)\n              )\n            }),\n            Effect.tap(({ fiberSet, reader }) =>\n              Effect.tryPromise({\n                try: () => reader.read(),\n                catch: (cause) => new SocketGenericError({ reason: \"Read\", cause })\n              }).pipe(\n                Effect.tap((result) => {\n                  if (result.done) {\n                    return Effect.fail(new SocketCloseError({ reason: \"Close\", code: 1000 }))\n                  }\n                  return handler(result.value)\n                }),\n                Effect.forever,\n                FiberSet.run(fiberSet)\n              )\n            ),\n            Effect.tap(({ fiberSet }) =>\n              Effect.catchIf(\n                FiberSet.join(fiberSet),\n                SocketCloseError.isClean((_) => !closeCodeIsError(_)),\n                (_) => Effect.void\n              )\n            ),\n            Effect.mapInputContext((input: Context.Context<R | Scope.Scope>) => Context.merge(acquireContext, input)),\n            Effect.scoped,\n            Effect.interruptible\n          )\n\n        const encoder = new TextEncoder()\n        const run = <_, E, R>(handler: (_: Uint8Array) => Effect.Effect<_, E, R> | void) =>\n          runRaw((data) =>\n            typeof data === \"string\"\n              ? handler(encoder.encode(data))\n              : handler(data)\n          )\n\n        const write = (chunk: Uint8Array | string | CloseEvent) => Queue.offer(sendQueue, chunk)\n        const writer = Effect.acquireRelease(\n          Effect.succeed(write),\n          () => Queue.offer(sendQueue, EOF)\n        )\n\n        return Socket.of({\n          [TypeId]: TypeId,\n          run,\n          runRaw,\n          writer\n        })\n      }\n    )\n  )\n}\n"],"names":["Channel","Context","Deferred","Effect","ExecutionStrategy","Exit","FiberRef","FiberSet","dual","globalValue","Layer","Mailbox","Predicate","Queue","Scope","TypeIdError","TypeId","Symbol","for","isSocket","u","hasProperty","Socket","GenericTag","CloseEventTypeId","CloseEvent","code","reason","constructor","toString","isCloseEvent","SocketErrorTypeId","isSocketError","SocketGenericError","message","SocketCloseError","is","isClean","closeReason","toChannelMap","self","f","scope","pipe","bindTo","bind","make","fork","sequential","writeScope","extend","writer","let","mailbox","write","awaitRead","void","emit","chunk","catchAllCause","forEach","discard","cause","failCause","error","zipRight","close","done","tap","runRaw","data","unsafeOffer","into","forkIn","interruptible","map","input","embedInput","toChannel","unwrapScoped","encoder","TextEncoder","encode","toChannelString","args","encoding","decoder","TextDecoder","decode","toChannelWith","makeChannel","unwrap","defaultCloseCodeIsError","WebSocket","WebSocketConstructor","layerWebSocketConstructorGlobal","succeed","url","protocols","globalThis","makeWebSocket","options","fromWebSocket","acquireRelease","flatMap","ws","sync","acquire","withFiberRuntime","fiber","dropping","getFiberRef","currentSendQueueCapacity","sendQueue","acquireContext","currentContext","closeCodeIsError","handler","fiberSet","provideService","runtime","run","open","onMessage","event","Blob","promise","arrayBuffer","andThen","buffer","Uint8Array","result","isEffect","onError","removeEventListener","onClose","unsafeDone","deferred","fail","addEventListener","once","readyState","openDeferred","unsafeMake","id","await","timeoutFail","duration","openTimeout","onTimeout","raceFirst","join","take","failSync","try","send","catch","forever","catchIf","_","mapInputContext","merge","scoped","offer","of","makeWebSocketChannel","layerWebSocket","effect","fromTransformStream","EOF","stream","readable","getReader","reader","cancel","releaseLock","writable","getWriter","interrupt","tryPromise","read","value"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2371, "column": 0}, "map": {"version":3,"file":"path.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/path.ts"],"sourcesContent":["import { GenericTag } from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport { identity } from \"effect/Function\"\nimport * as Layer from \"effect/Layer\"\nimport { BadArgument } from \"../Error.js\"\nimport type * as Api from \"../Path.js\"\n\n/** @internal */\nexport const TypeId: Api.TypeId = Symbol.for(\"@effect/platform/Path\") as Api.TypeId\n\n/** @internal */\nexport const Path = GenericTag<Api.Path>(\"@effect/platform/Path\")\n\n/**\n * The following functions are adapted from the Node.js source code:\n * https://github.com/nodejs/node/blob/main/lib/internal/url.js\n *\n * The following license applies to these functions:\n * - MIT\n */\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path: string, allowAboveRoot: boolean) {\n  let res = \"\"\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let code\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length) {\n      code = path.charCodeAt(i)\n    } else if (code === 47 /*/*/) {\n      break\n    } else {\n      code = 47 /*/*/\n    }\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (\n          res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ ||\n          res.charCodeAt(res.length - 2) !== 46 /*.*/\n        ) {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(\"/\")\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = \"\"\n                lastSegmentLength = 0\n              } else {\n                res = res.slice(0, lastSlashIndex)\n                lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\")\n              }\n              lastSlash = i\n              dots = 0\n              continue\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = \"\"\n            lastSegmentLength = 0\n            lastSlash = i\n            dots = 0\n            continue\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0) {\n            res += \"/..\"\n          } else {\n            res = \"..\"\n          }\n          lastSegmentLength = 2\n        }\n      } else {\n        if (res.length > 0) {\n          res += \"/\" + path.slice(lastSlash + 1, i)\n        } else {\n          res = path.slice(lastSlash + 1, i)\n        }\n        lastSegmentLength = i - lastSlash - 1\n      }\n      lastSlash = i\n      dots = 0\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ;++dots\n    } else {\n      dots = -1\n    }\n  }\n  return res\n}\n\nfunction _format(sep: string, pathObject: Partial<Api.Path.Parsed>) {\n  const dir = pathObject.dir || pathObject.root\n  const base = pathObject.base || (pathObject.name || \"\") + (pathObject.ext || \"\")\n  if (!dir) {\n    return base\n  }\n  if (dir === pathObject.root) {\n    return dir + base\n  }\n  return dir + sep + base\n}\n\nfunction fromFileUrl(url: URL): Effect.Effect<string, BadArgument> {\n  if (url.protocol !== \"file:\") {\n    return Effect.fail(BadArgument({\n      module: \"Path\",\n      method: \"fromFileUrl\",\n      message: \"URL must be of scheme file\"\n    }))\n  } else if (url.hostname !== \"\") {\n    return Effect.fail(BadArgument({\n      module: \"Path\",\n      method: \"fromFileUrl\",\n      message: \"Invalid file URL host\"\n    }))\n  }\n  const pathname = url.pathname\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === \"%\") {\n      const third = pathname.codePointAt(n + 2)! | 0x20\n      if (pathname[n + 1] === \"2\" && third === 102) {\n        return Effect.fail(BadArgument({\n          module: \"Path\",\n          method: \"fromFileUrl\",\n          message: \"must not include encoded / characters\"\n        }))\n      }\n    }\n  }\n  return Effect.succeed(decodeURIComponent(pathname))\n}\n\nconst resolve: Api.Path[\"resolve\"] = function resolve() {\n  let resolvedPath = \"\"\n  let resolvedAbsolute = false\n  let cwd: string | undefined = undefined\n\n  for (let i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    let path: string\n    if (i >= 0) {\n      path = arguments[i]\n    } else {\n      const process = (globalThis as any).process\n      if (\n        cwd === undefined && \"process\" in globalThis &&\n        typeof process === \"object\" &&\n        process !== null &&\n        typeof process.cwd === \"function\"\n      ) {\n        cwd = process.cwd()\n      }\n      path = cwd!\n    }\n\n    // Skip empty entries\n    if (path.length === 0) {\n      continue\n    }\n\n    resolvedPath = path + \"/\" + resolvedPath\n    resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute)\n\n  if (resolvedAbsolute) {\n    if (resolvedPath.length > 0) {\n      return \"/\" + resolvedPath\n    } else {\n      return \"/\"\n    }\n  } else if (resolvedPath.length > 0) {\n    return resolvedPath\n  } else {\n    return \".\"\n  }\n}\n\nconst CHAR_FORWARD_SLASH = 47\n\nfunction toFileUrl(filepath: string) {\n  const outURL = new URL(\"file://\")\n  let resolved = resolve(filepath)\n  // path.resolve strips trailing slashes so we must add them back\n  const filePathLast = filepath.charCodeAt(filepath.length - 1)\n  if (\n    (filePathLast === CHAR_FORWARD_SLASH) &&\n    resolved[resolved.length - 1] !== \"/\"\n  ) {\n    resolved += \"/\"\n  }\n  outURL.pathname = encodePathChars(resolved)\n  return Effect.succeed(outURL)\n}\n\nconst percentRegEx = /%/g\nconst backslashRegEx = /\\\\/g\nconst newlineRegEx = /\\n/g\nconst carriageReturnRegEx = /\\r/g\nconst tabRegEx = /\\t/g\n\nfunction encodePathChars(filepath: string) {\n  if (filepath.includes(\"%\")) {\n    filepath = filepath.replace(percentRegEx, \"%25\")\n  }\n  if (filepath.includes(\"\\\\\")) {\n    filepath = filepath.replace(backslashRegEx, \"%5C\")\n  }\n  if (filepath.includes(\"\\n\")) {\n    filepath = filepath.replace(newlineRegEx, \"%0A\")\n  }\n  if (filepath.includes(\"\\r\")) {\n    filepath = filepath.replace(carriageReturnRegEx, \"%0D\")\n  }\n  if (filepath.includes(\"\\t\")) {\n    filepath = filepath.replace(tabRegEx, \"%09\")\n  }\n  return filepath\n}\n\nconst posixImpl = Path.of({\n  [TypeId]: TypeId,\n  resolve,\n  normalize(path) {\n    if (path.length === 0) return \".\"\n\n    const isAbsolute = path.charCodeAt(0) === 47 /*/*/\n    const trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute)\n\n    if (path.length === 0 && !isAbsolute) path = \".\"\n    if (path.length > 0 && trailingSeparator) path += \"/\"\n\n    if (isAbsolute) return \"/\" + path\n    return path\n  },\n\n  isAbsolute(path) {\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/\n  },\n\n  join() {\n    if (arguments.length === 0) {\n      return \".\"\n    }\n    let joined\n    for (let i = 0; i < arguments.length; ++i) {\n      const arg = arguments[i]\n      if (arg.length > 0) {\n        if (joined === undefined) {\n          joined = arg\n        } else {\n          joined += \"/\" + arg\n        }\n      }\n    }\n    if (joined === undefined) {\n      return \".\"\n    }\n    return posixImpl.normalize(joined)\n  },\n\n  relative(from, to) {\n    if (from === to) return \"\"\n\n    from = posixImpl.resolve(from)\n    to = posixImpl.resolve(to)\n\n    if (from === to) return \"\"\n\n    // Trim any leading backslashes\n    let fromStart = 1\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/) {\n        break\n      }\n    }\n    const fromEnd = from.length\n    const fromLen = fromEnd - fromStart\n\n    // Trim any leading backslashes\n    let toStart = 1\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/) {\n        break\n      }\n    }\n    const toEnd = to.length\n    const toLen = toEnd - toStart\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen\n    let lastCommonSep = -1\n    let i = 0\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1)\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i)\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0\n          }\n        }\n        break\n      }\n      const fromCode = from.charCodeAt(fromStart + i)\n      const toCode = to.charCodeAt(toStart + i)\n      if (fromCode !== toCode) {\n        break\n      } else if (fromCode === 47 /*/*/) {\n        lastCommonSep = i\n      }\n    }\n\n    let out = \"\"\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0) {\n          out += \"..\"\n        } else {\n          out += \"/..\"\n        }\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0) {\n      return out + to.slice(toStart + lastCommonSep)\n    } else {\n      toStart += lastCommonSep\n      if (to.charCodeAt(toStart) === 47 /*/*/) {\n        ;++toStart\n      }\n      return to.slice(toStart)\n    }\n  },\n\n  dirname(path) {\n    if (path.length === 0) return \".\"\n    let code = path.charCodeAt(0)\n    const hasRoot = code === 47 /*/*/\n    let end = -1\n    let matchedSlash = true\n    for (let i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i)\n      if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i\n          break\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false\n      }\n    }\n\n    if (end === -1) return hasRoot ? \"/\" : \".\"\n    if (hasRoot && end === 1) return \"//\"\n    return path.slice(0, end)\n  },\n\n  basename(path, ext) {\n    let start = 0\n    let end = -1\n    let matchedSlash = true\n    let i\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return \"\"\n      let extIdx = ext.length - 1\n      let firstNonSlashEnd = -1\n      for (i = path.length - 1; i >= 0; --i) {\n        const code = path.charCodeAt(i)\n        if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1\n            break\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false\n            firstNonSlashEnd = i + 1\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1\n              end = firstNonSlashEnd\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd\n      else if (end === -1) end = path.length\n      return path.slice(start, end)\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1\n            break\n          }\n        } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false\n          end = i + 1\n        }\n      }\n\n      if (end === -1) return \"\"\n      return path.slice(start, end)\n    }\n  },\n\n  extname(path) {\n    let startDot = -1\n    let startPart = 0\n    let end = -1\n    let matchedSlash = true\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = path.charCodeAt(i)\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1\n          break\n        }\n        continue\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false\n        end = i + 1\n      }\n      if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i\n        } else if (preDotState !== 1) {\n          preDotState = 1\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1\n      }\n    }\n\n    if (\n      startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1\n    ) {\n      return \"\"\n    }\n    return path.slice(startDot, end)\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== \"object\") {\n      throw new TypeError(\"The \\\"pathObject\\\" argument must be of type Object. Received type \" + typeof pathObject)\n    }\n    return _format(\"/\", pathObject)\n  },\n\n  parse(path) {\n    const ret = { root: \"\", dir: \"\", base: \"\", ext: \"\", name: \"\" }\n    if (path.length === 0) return ret\n    let code = path.charCodeAt(0)\n    const isAbsolute = code === 47 /*/*/\n    let start\n    if (isAbsolute) {\n      ret.root = \"/\"\n      start = 1\n    } else {\n      start = 0\n    }\n    let startDot = -1\n    let startPart = 0\n    let end = -1\n    let matchedSlash = true\n    let i = path.length - 1\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i)\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1\n          break\n        }\n        continue\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false\n        end = i + 1\n      }\n      if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i\n        else if (preDotState !== 1) preDotState = 1\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1\n      }\n    }\n\n    if (\n      startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1\n    ) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end)\n        else ret.base = ret.name = path.slice(startPart, end)\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot)\n        ret.base = path.slice(1, end)\n      } else {\n        ret.name = path.slice(startPart, startDot)\n        ret.base = path.slice(startPart, end)\n      }\n      ret.ext = path.slice(startDot, end)\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1)\n    else if (isAbsolute) ret.dir = \"/\"\n\n    return ret\n  },\n\n  sep: \"/\",\n  fromFileUrl,\n  toFileUrl,\n  toNamespacedPath: identity\n})\n\n/** @internal */\nexport const layer = Layer.succeed(Path, posixImpl)\n"],"names":["GenericTag","Effect","identity","Layer","BadArgument","TypeId","Symbol","for","Path","normalizeStringPosix","path","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","code","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","_format","sep","pathObject","dir","root","base","name","ext","fromFileUrl","url","protocol","fail","module","method","message","hostname","pathname","n","third","codePointAt","succeed","decodeURIComponent","resolve","resolvedPath","resolvedAbsolute","cwd","undefined","arguments","process","globalThis","CHAR_FORWARD_SLASH","toFileUrl","filepath","outURL","URL","resolved","filePathLast","encodePathChars","percentRegEx","backslashRegEx","newlineRegEx","carriageReturnRegEx","tabRegEx","includes","replace","posixImpl","of","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toCode","out","dirname","hasRoot","end","matchedSlash","basename","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","TypeError","parse","ret","toNamespacedPath","layer"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2917, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2923, "column": 0}, "map": {"version":3,"file":"Path.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/Path.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\n\nimport type { Tag } from \"effect/Context\"\nimport type { Effect } from \"effect/Effect\"\nimport type { Layer } from \"effect/Layer\"\nimport type { BadArgument } from \"./Error.js\"\nimport * as internal from \"./internal/path.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport interface Path {\n  readonly [TypeId]: TypeId\n  readonly sep: string\n  readonly basename: (path: string, suffix?: string) => string\n  readonly dirname: (path: string) => string\n  readonly extname: (path: string) => string\n  readonly format: (pathObject: Partial<Path.Parsed>) => string\n  readonly fromFileUrl: (url: URL) => Effect<string, BadArgument>\n  readonly isAbsolute: (path: string) => boolean\n  readonly join: (...paths: ReadonlyArray<string>) => string\n  readonly normalize: (path: string) => string\n  readonly parse: (path: string) => Path.Parsed\n  readonly relative: (from: string, to: string) => string\n  readonly resolve: (...pathSegments: ReadonlyArray<string>) => string\n  readonly toFileUrl: (path: string) => Effect<URL, BadArgument>\n  readonly toNamespacedPath: (path: string) => string\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace Path {\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export interface Parsed {\n    readonly root: string\n    readonly dir: string\n    readonly base: string\n    readonly ext: string\n    readonly name: string\n  }\n}\n\n/**\n * @since 1.0.0\n * @category tag\n */\nexport const Path: Tag<Path, Path> = internal.Path\n\n/**\n * An implementation of the Path interface that can be used in all environments\n * (including browsers).\n *\n * It uses the POSIX standard for paths.\n *\n * @since 1.0.0\n * @category layer\n */\nexport const layer: Layer<Path> = internal.layer\n"],"names":["internal","TypeId","Path","layer"],"mappings":"AAAA;;;;;;;AAQA,OAAO,KAAKA,QAAQ,MAAM,oBAAoB;;AAMvC,MAAMC,MAAM,GAAkBD,QAAQ,2PAACC,MAAM;AAmD7C,MAAMC,IAAI,GAAoBF,QAAQ,2PAACE,IAAI;AAW3C,MAAMC,KAAK,GAAgBH,QAAQ,2PAACG,KAAK","ignoreList":[0]}},
    {"offset": {"line": 2935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2941, "column": 0}, "map": {"version":3,"file":"multipart.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/multipart.ts"],"sourcesContent":["import * as Cause from \"effect/Cause\"\nimport * as Channel from \"effect/Channel\"\nimport * as Chunk from \"effect/Chunk\"\nimport * as Effect from \"effect/Effect\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { dual, flow, pipe } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Queue from \"effect/Queue\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport type * as AsyncInput from \"effect/SingleProducerAsyncInput\"\nimport * as Stream from \"effect/Stream\"\nimport * as MP from \"multipasta\"\nimport { TypeIdError } from \"../Error.js\"\nimport * as FileSystem from \"../FileSystem.js\"\nimport * as IncomingMessage from \"../HttpIncomingMessage.js\"\nimport type * as Multipart from \"../Multipart.js\"\nimport * as Path from \"../Path.js\"\n\n/** @internal */\nexport const TypeId: Multipart.TypeId = Symbol.for(\"@effect/platform/Multipart\") as Multipart.TypeId\n\n/** @internal */\nexport const isPart = (u: unknown): u is Multipart.Part => Predicate.hasProperty(u, TypeId)\n\n/** @internal */\nexport const isField = (u: unknown): u is Multipart.Field => isPart(u) && u._tag === \"Field\"\n\n/** @internal */\nexport const isFile = (u: unknown): u is Multipart.File => isPart(u) && u._tag === \"File\"\n\n/** @internal */\nexport const isPersistedFile = (u: unknown): u is Multipart.PersistedFile =>\n  Predicate.hasProperty(u, TypeId) && Predicate.isTagged(u, \"PersistedFile\")\n\n/** @internal */\nexport const ErrorTypeId: Multipart.ErrorTypeId = Symbol.for(\n  \"@effect/platform/Multipart/MultipartError\"\n) as Multipart.ErrorTypeId\n\n/** @internal */\nexport class MultipartError extends TypeIdError(ErrorTypeId, \"MultipartError\")<{\n  readonly reason: \"FileTooLarge\" | \"FieldTooLarge\" | \"BodyTooLarge\" | \"TooManyParts\" | \"InternalError\" | \"Parse\"\n  readonly cause: unknown\n}> {\n  get message(): string {\n    return this.reason\n  }\n}\n\n/** @internal */\nexport const maxParts: FiberRef.FiberRef<Option.Option<number>> = globalValue(\n  \"@effect/platform/Multipart/maxParts\",\n  () => FiberRef.unsafeMake(Option.none<number>())\n)\n\n/** @internal */\nexport const withMaxParts = dual<\n  (count: Option.Option<number>) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, count: Option.Option<number>) => Effect.Effect<A, E, R>\n>(2, (effect, count) => Effect.locally(effect, maxParts, count))\n\n/** @internal */\nexport const maxFieldSize: FiberRef.FiberRef<FileSystem.Size> = globalValue(\n  \"@effect/platform/Multipart/maxFieldSize\",\n  () => FiberRef.unsafeMake(FileSystem.Size(10 * 1024 * 1024))\n)\n\n/** @internal */\nexport const withMaxFieldSize = dual<\n  (size: FileSystem.SizeInput) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, size: FileSystem.SizeInput) => Effect.Effect<A, E, R>\n>(2, (effect, size) => Effect.locally(effect, maxFieldSize, FileSystem.Size(size)))\n\n/** @internal */\nexport const maxFileSize: FiberRef.FiberRef<Option.Option<FileSystem.Size>> = globalValue(\n  \"@effect/platform/Multipart/maxFileSize\",\n  () => FiberRef.unsafeMake(Option.none<FileSystem.Size>())\n)\n\n/** @internal */\nexport const withMaxFileSize = dual<\n  (size: Option.Option<FileSystem.SizeInput>) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, size: Option.Option<FileSystem.SizeInput>) => Effect.Effect<A, E, R>\n>(2, (effect, size) => Effect.locally(effect, maxFileSize, Option.map(size, FileSystem.Size)))\n\n/** @internal */\nexport const fieldMimeTypes: FiberRef.FiberRef<Chunk.Chunk<string>> = globalValue(\n  \"@effect/platform/Multipart/fieldMimeTypes\",\n  () => FiberRef.unsafeMake<Chunk.Chunk<string>>(Chunk.make(\"application/json\"))\n)\n\n/** @internal */\nexport const withFieldMimeTypes = dual<\n  (mimeTypes: ReadonlyArray<string>) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, mimeTypes: ReadonlyArray<string>) => Effect.Effect<A, E, R>\n>(2, (effect, mimeTypes) => Effect.locally(effect, fieldMimeTypes, Chunk.fromIterable(mimeTypes)))\n\n/** @internal */\nexport const FileSchema: Schema.Schema<Multipart.PersistedFile> = Schema.declare(isPersistedFile, {\n  identifier: \"PersistedFile\",\n  jsonSchema: {\n    type: \"string\",\n    format: \"binary\"\n  }\n})\n\n/** @internal */\nexport const FilesSchema: Schema.Schema<ReadonlyArray<Multipart.PersistedFile>> = Schema.Array(FileSchema)\n\n/** @internal */\nexport const SingleFileSchema: Schema.transform<\n  Schema.Schema<ReadonlyArray<Multipart.PersistedFile>>,\n  Schema.Schema<Multipart.PersistedFile>\n> = Schema.transform(FilesSchema.pipe(Schema.itemsCount(1)), FileSchema, {\n  strict: true,\n  decode: ([file]) => file,\n  encode: (file) => [file]\n})\n\n/** @internal */\nexport const schemaPersisted = <A, I extends Partial<Multipart.Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return (persisted: Multipart.Persisted) => parse(persisted)\n}\n\n/** @internal */\nexport const schemaJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined): {\n  (\n    field: string\n  ): (persisted: Multipart.Persisted) => Effect.Effect<A, ParseResult.ParseError, R>\n  (\n    persisted: Multipart.Persisted,\n    field: string\n  ): Effect.Effect<A, ParseResult.ParseError, R>\n} => {\n  const fromJson = Schema.parseJson(schema)\n  return dual<\n    (\n      field: string\n    ) => (\n      persisted: Multipart.Persisted\n    ) => Effect.Effect<A, ParseResult.ParseError, R>,\n    (\n      persisted: Multipart.Persisted,\n      field: string\n    ) => Effect.Effect<A, ParseResult.ParseError, R>\n  >(2, (persisted, field) =>\n    Effect.map(\n      Schema.decodeUnknown(\n        Schema.Struct({\n          [field]: fromJson\n        }),\n        options\n      )(persisted),\n      (_) => _[field]\n    ))\n}\n\n/** @internal */\nexport const makeConfig = (\n  headers: Record<string, string>\n): Effect.Effect<MP.BaseConfig> =>\n  Effect.map(\n    Effect.all({\n      maxParts: Effect.map(FiberRef.get(maxParts), Option.getOrUndefined),\n      maxFieldSize: Effect.map(FiberRef.get(maxFieldSize), Number),\n      maxPartSize: Effect.map(FiberRef.get(maxFileSize), flow(Option.map(Number), Option.getOrUndefined)),\n      maxTotalSize: Effect.map(\n        FiberRef.get(IncomingMessage.maxBodySize),\n        flow(Option.map(Number), Option.getOrUndefined)\n      ),\n      isFile: Effect.map(FiberRef.get(fieldMimeTypes), (mimeTypes) => {\n        if (mimeTypes.length === 0) {\n          return undefined\n        }\n        return (info: MP.PartInfo): boolean =>\n          !Chunk.some(\n            mimeTypes,\n            (_) => info.contentType.includes(_)\n          ) && MP.defaultIsFile(info)\n      })\n    }),\n    (_) => ({ ..._, headers })\n  )\n\n/** @internal */\nexport const makeChannel = <IE>(\n  headers: Record<string, string>,\n  bufferSize = 16\n): Channel.Channel<\n  Chunk.Chunk<Multipart.Part>,\n  Chunk.Chunk<Uint8Array>,\n  Multipart.MultipartError | IE,\n  IE,\n  unknown,\n  unknown\n> =>\n  Channel.acquireUseRelease(\n    Effect.all([\n      makeConfig(headers),\n      Queue.bounded<Chunk.Chunk<Uint8Array> | null>(bufferSize)\n    ]),\n    ([config, queue]) => makeFromQueue(config, queue),\n    ([, queue]) => Queue.shutdown(queue)\n  )\n\nconst makeFromQueue = <IE>(\n  config: MP.BaseConfig,\n  queue: Queue.Queue<Chunk.Chunk<Uint8Array> | null>\n): Channel.Channel<\n  Chunk.Chunk<Multipart.Part>,\n  Chunk.Chunk<Uint8Array>,\n  IE | Multipart.MultipartError,\n  IE,\n  unknown,\n  unknown\n> =>\n  Channel.suspend(() => {\n    let error = Option.none<Cause.Cause<IE | Multipart.MultipartError>>()\n    let partsBuffer: Array<Multipart.Part> = []\n    let partsFinished = false\n\n    const input: AsyncInput.AsyncInputProducer<IE, Chunk.Chunk<Uint8Array>, unknown> = {\n      awaitRead: () => Effect.void,\n      emit(element) {\n        return Queue.offer(queue, element)\n      },\n      error(cause) {\n        error = Option.some(cause)\n        return Queue.offer(queue, null)\n      },\n      done(_value) {\n        return Queue.offer(queue, null)\n      }\n    }\n\n    const parser = MP.make({\n      ...config,\n      onField(info, value) {\n        partsBuffer.push(new FieldImpl(info.name, info.contentType, MP.decodeField(info, value)))\n      },\n      onFile(info) {\n        let chunks: Array<Uint8Array> = []\n        let finished = false\n        const take: Channel.Channel<Chunk.Chunk<Uint8Array>, unknown, never, unknown, void, unknown> = Channel\n          .suspend(() => {\n            if (chunks.length === 0) {\n              return finished ? Channel.void : Channel.zipRight(pump, take)\n            }\n            const chunk = Chunk.unsafeFromArray(chunks)\n            chunks = []\n            return finished ? Channel.write(chunk) : Channel.zipRight(\n              Channel.write(chunk),\n              Channel.zipRight(pump, take)\n            )\n          })\n        partsBuffer.push(new FileImpl(info, take))\n        return function(chunk) {\n          if (chunk === null) {\n            finished = true\n          } else {\n            chunks.push(chunk)\n          }\n        }\n      },\n      onError(error_) {\n        error = Option.some(Cause.fail(convertError(error_)))\n      },\n      onDone() {\n        partsFinished = true\n      }\n    })\n\n    const pump = Channel.flatMap(\n      Queue.take(queue),\n      (chunk) =>\n        Channel.sync(() => {\n          if (chunk === null) {\n            parser.end()\n          } else {\n            Chunk.forEach(chunk, parser.write)\n          }\n        })\n    )\n\n    const takeParts = Channel.zipRight(\n      pump,\n      Channel.suspend(() => {\n        if (partsBuffer.length === 0) {\n          return Channel.void\n        }\n        const parts = Chunk.unsafeFromArray(partsBuffer)\n        partsBuffer = []\n        return Channel.write(parts)\n      })\n    )\n\n    const partsChannel: Channel.Channel<\n      Chunk.Chunk<Multipart.Part>,\n      unknown,\n      IE | Multipart.MultipartError,\n      unknown,\n      void,\n      unknown\n    > = Channel.suspend(() => {\n      if (error._tag === \"Some\") {\n        return Channel.failCause(error.value)\n      } else if (partsFinished) {\n        return Channel.void\n      }\n      return Channel.zipRight(takeParts, partsChannel)\n    })\n\n    return Channel.embedInput(partsChannel, input)\n  })\n\nfunction convertError(cause: MP.MultipartError): Multipart.MultipartError {\n  switch (cause._tag) {\n    case \"ReachedLimit\": {\n      switch (cause.limit) {\n        case \"MaxParts\": {\n          return new MultipartError({ reason: \"TooManyParts\", cause })\n        }\n        case \"MaxFieldSize\": {\n          return new MultipartError({ reason: \"FieldTooLarge\", cause })\n        }\n        case \"MaxPartSize\": {\n          return new MultipartError({ reason: \"FileTooLarge\", cause })\n        }\n        case \"MaxTotalSize\": {\n          return new MultipartError({ reason: \"BodyTooLarge\", cause })\n        }\n      }\n    }\n    default: {\n      return new MultipartError({ reason: \"Parse\", cause })\n    }\n  }\n}\n\nabstract class PartBase extends Inspectable.Class {\n  readonly [TypeId]: Multipart.TypeId\n  constructor() {\n    super()\n    this[TypeId] = TypeId\n  }\n}\n\nclass FieldImpl extends PartBase implements Multipart.Field {\n  readonly _tag = \"Field\"\n\n  constructor(\n    readonly key: string,\n    readonly contentType: string,\n    readonly value: string\n  ) {\n    super()\n  }\n\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/Multipart/Part\",\n      _tag: \"Field\",\n      key: this.key,\n      contentType: this.contentType,\n      value: this.value\n    }\n  }\n}\n\nclass FileImpl extends PartBase implements Multipart.File {\n  readonly _tag = \"File\"\n  readonly key: string\n  readonly name: string\n  readonly contentType: string\n  readonly content: Stream.Stream<Uint8Array, Multipart.MultipartError>\n\n  constructor(\n    info: MP.PartInfo,\n    channel: Channel.Channel<Chunk.Chunk<Uint8Array>, unknown, never, unknown, void, unknown>\n  ) {\n    super()\n    this.key = info.name\n    this.name = info.filename ?? info.name\n    this.contentType = info.contentType\n    this.content = Stream.fromChannel(channel)\n  }\n\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/Multipart/Part\",\n      _tag: \"File\",\n      key: this.key,\n      name: this.name,\n      contentType: this.contentType\n    }\n  }\n}\n\nconst defaultWriteFile = (path: string, file: Multipart.File) =>\n  Effect.flatMap(\n    FileSystem.FileSystem,\n    (fs) =>\n      Effect.mapError(\n        Stream.run(file.content, fs.sink(path)),\n        (cause) => new MultipartError({ reason: \"InternalError\", cause })\n      )\n  )\n\n/** @internal */\nexport const toPersisted = (\n  stream: Stream.Stream<Multipart.Part, Multipart.MultipartError>,\n  writeFile = defaultWriteFile\n): Effect.Effect<Multipart.Persisted, Multipart.MultipartError, FileSystem.FileSystem | Path.Path | Scope.Scope> =>\n  pipe(\n    Effect.Do,\n    Effect.bind(\"fs\", () => FileSystem.FileSystem),\n    Effect.bind(\"path\", () => Path.Path),\n    Effect.bind(\"dir\", ({ fs }) => fs.makeTempDirectoryScoped()),\n    Effect.flatMap(({ dir, path: path_ }) =>\n      Stream.runFoldEffect(\n        stream,\n        Object.create(null) as Record<string, Array<Multipart.PersistedFile> | string>,\n        (persisted, part) => {\n          if (part._tag === \"Field\") {\n            persisted[part.key] = part.value\n            return Effect.succeed(persisted)\n          }\n          const file = part\n          const path = path_.join(dir, path_.basename(file.name).slice(-128))\n          if (!Array.isArray(persisted[part.key])) {\n            persisted[part.key] = []\n          }\n          ;(persisted[part.key] as Array<Multipart.PersistedFile>).push(\n            new PersistedFileImpl(\n              file.key,\n              file.name,\n              file.contentType,\n              path\n            )\n          )\n          return Effect.as(writeFile(path, file), persisted)\n        }\n      )\n    ),\n    Effect.catchTags({\n      SystemError: (cause) => Effect.fail(new MultipartError({ reason: \"InternalError\", cause })),\n      BadArgument: (cause) => Effect.fail(new MultipartError({ reason: \"InternalError\", cause }))\n    })\n  )\n\nclass PersistedFileImpl extends PartBase implements Multipart.PersistedFile {\n  readonly _tag = \"PersistedFile\"\n\n  constructor(\n    readonly key: string,\n    readonly name: string,\n    readonly contentType: string,\n    readonly path: string\n  ) {\n    super()\n  }\n\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/Multipart/Part\",\n      _tag: \"PersistedFile\",\n      key: this.key,\n      name: this.name,\n      contentType: this.contentType,\n      path: this.path\n    }\n  }\n}\n"],"names":["Cause","Channel","Chunk","Effect","FiberRef","dual","flow","pipe","globalValue","Inspectable","Option","Predicate","Queue","Schema","Stream","MP","TypeIdError","FileSystem","IncomingMessage","Path","TypeId","Symbol","for","isPart","u","hasProperty","isField","_tag","isFile","isPersistedFile","isTagged","ErrorTypeId","MultipartError","message","reason","maxParts","unsafeMake","none","withMaxParts","effect","count","locally","maxFieldSize","Size","withMaxFieldSize","size","maxFileSize","withMaxFileSize","map","fieldMimeTypes","make","withFieldMimeTypes","mimeTypes","fromIterable","FileSchema","declare","identifier","jsonSchema","type","format","FilesSchema","Array","SingleFileSchema","transform","itemsCount","strict","decode","file","encode","schemaPersisted","schema","options","parse","decodeUnknown","persisted","schemaJson","fromJson","parseJson","field","Struct","_","makeConfig","headers","all","get","getOrUndefined","Number","maxPartSize","maxTotalSize","maxBodySize","length","undefined","info","some","contentType","includes","defaultIsFile","makeChannel","bufferSize","acquireUseRelease","bounded","config","queue","makeFromQueue","shutdown","suspend","error","partsBuffer","partsFinished","input","awaitRead","void","emit","element","offer","cause","done","_value","parser","onField","value","push","FieldImpl","name","decodeField","onFile","chunks","finished","take","zipRight","pump","chunk","unsafeFromArray","write","FileImpl","onError","error_","fail","convertError","onDone","flatMap","sync","end","forEach","takeParts","parts","partsChannel","failCause","embedInput","limit","PartBase","Class","constructor","key","toJSON","_id","content","channel","filename","fromChannel","defaultWriteFile","path","fs","mapError","run","sink","toPersisted","stream","writeFile","Do","bind","makeTempDirectoryScoped","dir","path_","runFoldEffect","Object","create","part","succeed","join","basename","slice","isArray","PersistedFileImpl","as","catchTags","SystemError","BadArgument"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3291, "column": 0}, "map": {"version":3,"file":"Multipart.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/Multipart.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type { YieldableError } from \"effect/Cause\"\nimport type * as Channel from \"effect/Channel\"\nimport type * as Chunk from \"effect/Chunk\"\nimport type * as Effect from \"effect/Effect\"\nimport type * as FiberRef from \"effect/FiberRef\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport type * as Stream from \"effect/Stream\"\nimport type * as Multipasta from \"multipasta\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport * as internal from \"./internal/multipart.js\"\nimport type * as Path from \"./Path.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Part = Field | File\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isPart: (u: unknown) => u is Part = internal.isPart\n\n/**\n * @since 1.0.0\n */\nexport declare namespace Part {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface Proto extends Inspectable {\n    readonly [TypeId]: TypeId\n    readonly _tag: string\n  }\n}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Field extends Part.Proto {\n  readonly _tag: \"Field\"\n  readonly key: string\n  readonly contentType: string\n  readonly value: string\n}\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isField: (u: unknown) => u is Field = internal.isField\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface File extends Part.Proto {\n  readonly _tag: \"File\"\n  readonly key: string\n  readonly name: string\n  readonly contentType: string\n  readonly content: Stream.Stream<Uint8Array, MultipartError>\n}\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isFile: (u: unknown) => u is File = internal.isFile\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface PersistedFile extends Part.Proto {\n  readonly _tag: \"PersistedFile\"\n  readonly key: string\n  readonly name: string\n  readonly contentType: string\n  readonly path: string\n}\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isPersistedFile: (u: unknown) => u is PersistedFile = internal.isPersistedFile\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Persisted {\n  readonly [key: string]: ReadonlyArray<PersistedFile> | string\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const ErrorTypeId: unique symbol = internal.ErrorTypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type ErrorTypeId = typeof ErrorTypeId\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport interface MultipartError extends YieldableError {\n  readonly [ErrorTypeId]: ErrorTypeId\n  readonly _tag: \"MultipartError\"\n  readonly reason: \"FileTooLarge\" | \"FieldTooLarge\" | \"BodyTooLarge\" | \"TooManyParts\" | \"InternalError\" | \"Parse\"\n  readonly message: string\n  readonly cause: unknown\n}\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport const MultipartError: new(\n  options: {\n    readonly reason: MultipartError[\"reason\"]\n    readonly cause: unknown\n  }\n) => MultipartError = internal.MultipartError\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const maxParts: FiberRef.FiberRef<Option.Option<number>> = internal.maxParts\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withMaxParts: {\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (count: Option.Option<number>): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, count: Option.Option<number>): Effect.Effect<A, E, R>\n} = internal.withMaxParts\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const maxFieldSize: FiberRef.FiberRef<FileSystem.Size> = internal.maxFieldSize\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withMaxFieldSize: {\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (size: FileSystem.SizeInput): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, size: FileSystem.SizeInput): Effect.Effect<A, E, R>\n} = internal.withMaxFieldSize\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const maxFileSize: FiberRef.FiberRef<Option.Option<FileSystem.Size>> = internal.maxFileSize\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withMaxFileSize: {\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (size: Option.Option<FileSystem.SizeInput>): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, size: Option.Option<FileSystem.SizeInput>): Effect.Effect<A, E, R>\n} = internal.withMaxFileSize\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const fieldMimeTypes: FiberRef.FiberRef<Chunk.Chunk<string>> = internal.fieldMimeTypes\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withFieldMimeTypes: {\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (mimeTypes: ReadonlyArray<string>): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, mimeTypes: ReadonlyArray<string>): Effect.Effect<A, E, R>\n} = internal.withFieldMimeTypes\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const FileSchema: Schema.Schema<PersistedFile> = internal.FileSchema\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const FilesSchema: Schema.Schema<ReadonlyArray<PersistedFile>> = internal.FilesSchema\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const SingleFileSchema: Schema.transform<\n  Schema.Schema<ReadonlyArray<PersistedFile>>,\n  Schema.Schema<PersistedFile>\n> = internal.SingleFileSchema\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaJson: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  (field: string): (persisted: Persisted) => Effect.Effect<A, ParseResult.ParseError, R>\n  (persisted: Persisted, field: string): Effect.Effect<A, ParseResult.ParseError, R>\n} = internal.schemaJson\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaPersisted: <A, I extends Partial<Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => (persisted: Persisted) => Effect.Effect<A, ParseResult.ParseError, R> = internal.schemaPersisted\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeChannel: <IE>(\n  headers: Record<string, string>,\n  bufferSize?: number\n) => Channel.Channel<Chunk.Chunk<Part>, Chunk.Chunk<Uint8Array>, MultipartError | IE, IE, unknown, unknown> =\n  internal.makeChannel\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeConfig: (headers: Record<string, string>) => Effect.Effect<Multipasta.BaseConfig> = internal.makeConfig\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const toPersisted: (\n  stream: Stream.Stream<Part, MultipartError>,\n  writeFile?: (path: string, file: File) => Effect.Effect<void, MultipartError, FileSystem.FileSystem>\n) => Effect.Effect<Persisted, MultipartError, FileSystem.FileSystem | Path.Path | Scope.Scope> = internal.toPersisted\n"],"names":["internal","TypeId","isPart","isField","isFile","isPersistedFile","ErrorTypeId","MultipartError","maxParts","withMaxParts","maxFieldSize","withMaxFieldSize","maxFileSize","withMaxFileSize","fieldMimeTypes","withFieldMimeTypes","FileSchema","FilesSchema","SingleFileSchema","schemaJson","schemaPersisted","makeChannel","makeConfig","toPersisted"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,OAAO,KAAKA,QAAQ,MAAM,yBAAyB;;AAO5C,MAAMC,MAAM,GAAkBD,QAAQ,gQAACC,MAAM;AAkB7C,MAAMC,MAAM,GAA8BF,QAAQ,gQAACE,MAAM;AA+BzD,MAAMC,OAAO,GAA+BH,QAAQ,gQAACG,OAAO;AAkB5D,MAAMC,MAAM,GAA8BJ,QAAQ,gQAACI,MAAM;AAkBzD,MAAMC,eAAe,GAAuCL,QAAQ,gQAACK,eAAe;AAcpF,MAAMC,WAAW,GAAkBN,QAAQ,gQAACM,WAAW;AAwBvD,MAAMC,cAAc,GAKLP,QAAQ,gQAACO,cAAc;AAMtC,MAAMC,QAAQ,GAA6CR,QAAQ,gQAACQ,QAAQ;AAM5E,MAAMC,YAAY,GAWrBT,QAAQ,gQAACS,YAAY;AAMlB,MAAMC,YAAY,GAAuCV,QAAQ,gQAACU,YAAY;AAM9E,MAAMC,gBAAgB,GAWzBX,QAAQ,gQAACW,gBAAgB;AAMtB,MAAMC,WAAW,GAAsDZ,QAAQ,gQAACY,WAAW;AAM3F,MAAMC,eAAe,GAWxBb,QAAQ,gQAACa,eAAe;AAMrB,MAAMC,cAAc,GAA2Cd,QAAQ,gQAACc,cAAc;AAMtF,MAAMC,kBAAkB,GAW3Bf,QAAQ,gQAACe,kBAAkB;AAMxB,MAAMC,UAAU,GAAiChB,QAAQ,gQAACgB,UAAU;AAMpE,MAAMC,WAAW,GAAgDjB,QAAQ,gQAACiB,WAAW;AAMrF,MAAMC,gBAAgB,GAGzBlB,QAAQ,gQAACkB,gBAAgB;AAMtB,MAAMC,UAAU,GAMnBnB,QAAQ,gQAACmB,UAAU;AAMhB,MAAMC,eAAe,GAGiDpB,QAAQ,gQAACoB,eAAe;AAM9F,MAAMC,WAAW,GAItBrB,QAAQ,gQAACqB,WAAW;AAMf,MAAMC,UAAU,GAA8EtB,QAAQ,gQAACsB,UAAU;AAMjH,MAAMC,WAAW,GAGyEvB,QAAQ,gQAACuB,WAAW","ignoreList":[0]}},
    {"offset": {"line": 3341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3347, "column": 0}, "map": {"version":3,"file":"Template.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/Template.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Effect from \"effect/Effect\"\nimport * as Option from \"effect/Option\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Stream from \"effect/Stream\"\n\n/**\n * @category models\n * @since 1.0.0\n */\nexport type PrimitiveValue = string | number | bigint | boolean | null | undefined\n\n/**\n * @category models\n * @since 1.0.0\n */\nexport type Primitive = PrimitiveValue | ReadonlyArray<PrimitiveValue>\n\n/**\n * @category models\n * @since 1.0.0\n */\nexport type Interpolated =\n  | Primitive\n  | Option.Option<Primitive>\n  | Effect.Effect<Primitive, any, any>\n\n/**\n * @category models\n * @since 1.0.0\n */\nexport type InterpolatedWithStream = Interpolated | Stream.Stream<Primitive, any, any>\n\n/**\n * @category models\n * @since 1.0.0\n */\nexport declare namespace Interpolated {\n  /**\n   * @category models\n   * @since 1.0.0\n   */\n  export type Context<A> = A extends infer T ? T extends Option.Option<infer _> ? never\n    : T extends Stream.Stream<infer _A, infer _E, infer R> ? R\n    : never\n    : never\n\n  /**\n   * @category models\n   * @since 1.0.0\n   */\n  export type Error<A> = A extends infer T ? T extends Option.Option<infer _> ? never\n    : T extends Stream.Stream<infer _A, infer E, infer _R> ? E\n    : never\n    : never\n}\n\n/**\n * @category constructors\n * @since 1.0.0\n */\nexport function make<A extends ReadonlyArray<Interpolated>>(\n  strings: TemplateStringsArray,\n  ...args: A\n): Effect.Effect<\n  string,\n  Interpolated.Error<A[number]>,\n  Interpolated.Context<A[number]>\n> {\n  const argsLength = args.length\n  const values = new Array<string>(argsLength)\n  const effects: Array<\n    [index: number, effect: Effect.Effect<Primitive, any, any>]\n  > = []\n\n  for (let i = 0; i < argsLength; i++) {\n    const arg = args[i]\n\n    if (Option.isOption(arg)) {\n      values[i] = arg._tag === \"Some\" ? primitiveToString(arg.value) : \"\"\n    } else if (isSuccess(arg)) {\n      values[i] = primitiveToString((arg as any).effect_instruction_i0)\n    } else if (Effect.isEffect(arg)) {\n      effects.push([i, arg])\n    } else {\n      values[i] = primitiveToString(arg)\n    }\n  }\n\n  if (effects.length === 0) {\n    return Effect.succeed(consolidate(strings, values))\n  }\n\n  return Effect.map(\n    Effect.forEach(\n      effects,\n      ([index, effect]) =>\n        Effect.tap(effect, (value) => {\n          values[index] = primitiveToString(value)\n        }),\n      {\n        concurrency: \"inherit\",\n        discard: true\n      }\n    ),\n    (_) => consolidate(strings, values)\n  )\n}\n\n/**\n * @category constructors\n * @since 1.0.0\n */\nexport function stream<A extends ReadonlyArray<InterpolatedWithStream>>(\n  strings: TemplateStringsArray,\n  ...args: A\n): Stream.Stream<\n  string,\n  Interpolated.Error<A[number]>,\n  Interpolated.Context<A[number]>\n> {\n  const chunks: Array<string | Stream.Stream<string, any, any>> = []\n  let buffer = \"\"\n\n  for (let i = 0, len = args.length; i < len; i++) {\n    buffer += strings[i]\n    const arg = args[i]\n    if (Option.isOption(arg)) {\n      buffer += arg._tag === \"Some\" ? primitiveToString(arg.value) : \"\"\n    } else if (isSuccess(arg)) {\n      buffer += primitiveToString((arg as any).effect_instruction_i0)\n    } else if (Predicate.hasProperty(arg, Stream.StreamTypeId)) {\n      if (buffer.length > 0) {\n        chunks.push(buffer)\n        buffer = \"\"\n      }\n      if (Effect.isEffect(arg)) {\n        chunks.push(Effect.map(arg, primitiveToString))\n      } else {\n        chunks.push(Stream.map(arg, primitiveToString))\n      }\n    } else {\n      buffer += primitiveToString(arg)\n    }\n  }\n\n  buffer += strings[strings.length - 1]\n  if (buffer.length > 0) {\n    chunks.push(buffer)\n    buffer = \"\"\n  }\n\n  return Stream.flatMap(\n    Stream.fromIterable(chunks),\n    (chunk) => typeof chunk === \"string\" ? Stream.succeed(chunk) : chunk,\n    { concurrency: \"unbounded\" }\n  )\n}\n\nfunction primitiveToString(value: Primitive): string {\n  if (Array.isArray(value)) {\n    return value.map(primitiveToString).join(\"\")\n  }\n\n  switch (typeof value) {\n    case \"string\": {\n      return value\n    }\n    case \"number\":\n    case \"bigint\": {\n      return value.toString()\n    }\n    case \"boolean\": {\n      return value ? \"true\" : \"false\"\n    }\n    default: {\n      return \"\"\n    }\n  }\n}\n\nfunction consolidate(\n  strings: ReadonlyArray<string>,\n  values: ReadonlyArray<string>\n): string {\n  let out = \"\"\n  for (let i = 0, len = values.length; i < len; i++) {\n    out += strings[i]\n    out += values[i]\n  }\n  return out + strings[strings.length - 1]\n}\n\nfunction isSuccess(u: unknown) {\n  return Effect.isEffect(u) && (u as any)._op === \"Success\"\n}\n"],"names":["Effect","Option","Predicate","Stream","make","strings","args","argsLength","length","values","Array","effects","i","arg","isOption","_tag","primitiveToString","value","isSuccess","effect_instruction_i0","isEffect","push","succeed","consolidate","map","forEach","index","effect","tap","concurrency","discard","_","stream","chunks","buffer","len","hasProperty","StreamTypeId","flatMap","fromIterable","chunk","isArray","join","toString","out","u","_op"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3458, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3464, "column": 0}, "map": {"version":3,"file":"httpServerResponse.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpServerResponse.ts"],"sourcesContent":["import * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as Effectable from \"effect/Effectable\"\nimport { dual } from \"effect/Function\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Runtime from \"effect/Runtime\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport * as Stream from \"effect/Stream\"\nimport * as Cookies from \"../Cookies.js\"\nimport type * as PlatformError from \"../Error.js\"\nimport type * as FileSystem from \"../FileSystem.js\"\nimport * as Headers from \"../Headers.js\"\nimport type * as Body from \"../HttpBody.js\"\nimport type * as Platform from \"../HttpPlatform.js\"\nimport type * as Respondable from \"../HttpServerRespondable.js\"\nimport type * as ServerResponse from \"../HttpServerResponse.js\"\nimport * as Template from \"../Template.js\"\nimport * as UrlParams from \"../UrlParams.js\"\nimport * as internalBody from \"./httpBody.js\"\n\n/** @internal */\nexport const TypeId: ServerResponse.TypeId = Symbol.for(\"@effect/platform/HttpServerResponse\") as ServerResponse.TypeId\n\nconst respondableSymbol: typeof Respondable.symbol = Symbol.for(\n  \"@effect/platform/HttpServerRespondable\"\n) as typeof Respondable.symbol\n\nclass ServerResponseImpl extends Effectable.StructuralClass<ServerResponse.HttpServerResponse>\n  implements ServerResponse.HttpServerResponse\n{\n  readonly [TypeId]: ServerResponse.TypeId\n  readonly headers: Headers.Headers\n  constructor(\n    readonly status: number,\n    readonly statusText: string | undefined,\n    headers: Headers.Headers,\n    readonly cookies: Cookies.Cookies,\n    readonly body: Body.HttpBody\n  ) {\n    super()\n    this[TypeId] = TypeId\n    if (body.contentType || body.contentLength) {\n      const newHeaders = { ...headers }\n      if (body.contentType) {\n        newHeaders[\"content-type\"] = body.contentType\n      }\n      if (body.contentLength) {\n        newHeaders[\"content-length\"] = body.contentLength.toString()\n      }\n      this.headers = newHeaders\n    } else {\n      this.headers = headers\n    }\n  }\n\n  commit(): Effect.Effect<ServerResponse.HttpServerResponse> {\n    return Effect.succeed(this)\n  }\n\n  [respondableSymbol](): Effect.Effect<ServerResponse.HttpServerResponse, unknown> {\n    return Effect.succeed(this)\n  }\n\n  [Inspectable.NodeInspectSymbol]() {\n    return this.toJSON()\n  }\n\n  toString(): string {\n    return Inspectable.format(this)\n  }\n\n  toJSON() {\n    return {\n      _id: \"@effect/platform/HttpServerResponse\",\n      status: this.status,\n      statusText: this.statusText,\n      headers: Inspectable.redact(this.headers),\n      cookies: this.cookies.toJSON(),\n      body: this.body.toJSON()\n    }\n  }\n}\n\n/** @internal */\nexport const isServerResponse = (u: unknown): u is ServerResponse.HttpServerResponse =>\n  typeof u === \"object\" && u !== null && TypeId in u\n\n/** @internal */\nexport const empty = (options?: ServerResponse.Options.WithContent | undefined): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 204,\n    options?.statusText,\n    options?.headers ?? Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.empty\n  )\n\n/** @internal */\nexport const uint8Array = (\n  body: Uint8Array,\n  options?: ServerResponse.Options.WithContentType\n): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ?? Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.uint8Array(body, getContentType(options))\n  )\n\n/** @internal */\nexport const text = (\n  body: string,\n  options?: ServerResponse.Options.WithContentType\n): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ?? Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.text(body, getContentType(options))\n  )\n\n/** @internal */\nexport const html: {\n  <A extends ReadonlyArray<Template.Interpolated>>(\n    strings: TemplateStringsArray,\n    ...args: A\n  ): Effect.Effect<\n    ServerResponse.HttpServerResponse,\n    Template.Interpolated.Error<A[number]>,\n    Template.Interpolated.Context<A[number]>\n  >\n  (html: string): ServerResponse.HttpServerResponse\n} = (\n  strings: TemplateStringsArray | string,\n  ...args: ReadonlyArray<Template.Interpolated>\n) => {\n  if (typeof strings === \"string\") {\n    return text(strings, { contentType: \"text/html\" })\n  }\n\n  return Effect.map(\n    Template.make(strings, ...args),\n    (_) => text(_, { contentType: \"text/html\" })\n  ) as any\n}\n\n/** @internal */\nexport const htmlStream = <A extends ReadonlyArray<Template.InterpolatedWithStream>>(\n  strings: TemplateStringsArray,\n  ...args: A\n): Effect.Effect<\n  ServerResponse.HttpServerResponse,\n  never,\n  Template.Interpolated.Context<A[number]>\n> =>\n  Effect.map(\n    Effect.context<any>(),\n    (context) =>\n      stream(\n        Stream.provideContext(\n          Stream.encodeText(Template.stream(strings, ...args)),\n          context\n        ),\n        { contentType: \"text/html\" }\n      )\n  )\n\n/** @internal */\nexport const json = (\n  body: unknown,\n  options?: ServerResponse.Options.WithContent | undefined\n): Effect.Effect<ServerResponse.HttpServerResponse, Body.HttpBodyError> =>\n  Effect.map(internalBody.json(body), (body) =>\n    new ServerResponseImpl(\n      options?.status ?? 200,\n      options?.statusText,\n      options?.headers ?? Headers.empty,\n      options?.cookies ?? Cookies.empty,\n      body\n    ))\n\n/** @internal */\nexport const unsafeJson = (\n  body: unknown,\n  options?: ServerResponse.Options.WithContent | undefined\n): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ?? Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.unsafeJson(body)\n  )\n\n/** @internal */\nexport const schemaJson = <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const encode = internalBody.jsonSchema(schema, options)\n  return (\n    body: A,\n    options?: ServerResponse.Options.WithContent | undefined\n  ): Effect.Effect<ServerResponse.HttpServerResponse, Body.HttpBodyError, R> =>\n    Effect.map(encode(body), (body) =>\n      new ServerResponseImpl(\n        options?.status ?? 200,\n        options?.statusText,\n        options?.headers ?? Headers.empty,\n        options?.cookies ?? Cookies.empty,\n        body\n      ))\n}\n\nconst httpPlatform = Context.GenericTag<Platform.HttpPlatform>(\"@effect/platform/HttpPlatform\")\n\n/** @internal */\nexport const file = (\n  path: string,\n  options?: (ServerResponse.Options & FileSystem.StreamOptions) | undefined\n): Effect.Effect<ServerResponse.HttpServerResponse, PlatformError.PlatformError, Platform.HttpPlatform> =>\n  Effect.flatMap(\n    httpPlatform,\n    (platform) => platform.fileResponse(path, options)\n  )\n\n/** @internal */\nexport const fileWeb = (\n  file: Body.HttpBody.FileLike,\n  options?: (ServerResponse.Options.WithContent & FileSystem.StreamOptions) | undefined\n): Effect.Effect<ServerResponse.HttpServerResponse, never, Platform.HttpPlatform> =>\n  Effect.flatMap(\n    httpPlatform,\n    (platform) => platform.fileWebResponse(file, options)\n  )\n\n/** @internal */\nexport const urlParams = (\n  body: UrlParams.Input,\n  options?: ServerResponse.Options.WithContent | undefined\n): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ?? Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.text(UrlParams.toString(UrlParams.fromInput(body)), \"application/x-www-form-urlencoded\")\n  )\n\n/** @internal */\nexport const raw = (body: unknown, options?: ServerResponse.Options | undefined): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ?? Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.raw(body)\n  )\n\n/** @internal */\nexport const formData = (\n  body: FormData,\n  options?: ServerResponse.Options.WithContent | undefined\n): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ?? Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.formData(body)\n  )\n\n/** @internal */\nexport const stream = <E>(\n  body: Stream.Stream<Uint8Array, E>,\n  options?: ServerResponse.Options | undefined\n): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ?? Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.stream(body, getContentType(options), options?.contentLength)\n  )\n\n/** @internal */\nexport const getContentType = (options?: ServerResponse.Options | undefined): string | undefined => {\n  if (options?.contentType) {\n    return options.contentType\n  } else if (options?.headers) {\n    return options.headers[\"content-type\"]\n  } else {\n    return\n  }\n}\n\n/** @internal */\nexport const setHeader = dual<\n  (key: string, value: string) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (self: ServerResponse.HttpServerResponse, key: string, value: string) => ServerResponse.HttpServerResponse\n>(3, (self, key, value) =>\n  new ServerResponseImpl(\n    self.status,\n    self.statusText,\n    Headers.set(self.headers, key, value),\n    self.cookies,\n    self.body\n  ))\n\n/** @internal */\nexport const replaceCookies = dual<\n  (cookies: Cookies.Cookies) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (self: ServerResponse.HttpServerResponse, cookies: Cookies.Cookies) => ServerResponse.HttpServerResponse\n>(2, (self, cookies) =>\n  new ServerResponseImpl(\n    self.status,\n    self.statusText,\n    self.headers,\n    cookies,\n    self.body\n  ))\n\n/** @internal */\nexport const setCookie = dual<\n  (\n    name: string,\n    value: string,\n    options?: Cookies.Cookie[\"options\"]\n  ) => (\n    self: ServerResponse.HttpServerResponse\n  ) => Effect.Effect<ServerResponse.HttpServerResponse, Cookies.CookiesError>,\n  (\n    self: ServerResponse.HttpServerResponse,\n    name: string,\n    value: string,\n    options?: Cookies.Cookie[\"options\"]\n  ) => Effect.Effect<ServerResponse.HttpServerResponse, Cookies.CookiesError>\n>(\n  (args) => isServerResponse(args[0]),\n  (self, name, value, options) =>\n    Effect.map(Cookies.set(self.cookies, name, value, options), (cookies) =>\n      new ServerResponseImpl(\n        self.status,\n        self.statusText,\n        self.headers,\n        cookies,\n        self.body\n      ))\n)\n\n/** @internal */\nexport const unsafeSetCookie = dual<\n  (\n    name: string,\n    value: string,\n    options?: Cookies.Cookie[\"options\"]\n  ) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (\n    self: ServerResponse.HttpServerResponse,\n    name: string,\n    value: string,\n    options?: Cookies.Cookie[\"options\"]\n  ) => ServerResponse.HttpServerResponse\n>(\n  (args) => isServerResponse(args[0]),\n  (self, name, value, options) =>\n    new ServerResponseImpl(\n      self.status,\n      self.statusText,\n      self.headers,\n      Cookies.unsafeSet(self.cookies, name, value, options),\n      self.body\n    )\n)\n\n/** @internal */\nexport const updateCookies = dual<\n  (\n    f: (cookies: Cookies.Cookies) => Cookies.Cookies\n  ) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (\n    self: ServerResponse.HttpServerResponse,\n    f: (cookies: Cookies.Cookies) => Cookies.Cookies\n  ) => ServerResponse.HttpServerResponse\n>(2, (self, f) =>\n  new ServerResponseImpl(\n    self.status,\n    self.statusText,\n    self.headers,\n    f(self.cookies),\n    self.body\n  ))\n\n/** @internal */\nexport const setCookies = dual<\n  (\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookies.Cookie[\"options\"]]>\n  ) => (\n    self: ServerResponse.HttpServerResponse\n  ) => Effect.Effect<ServerResponse.HttpServerResponse, Cookies.CookiesError>,\n  (\n    self: ServerResponse.HttpServerResponse,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookies.Cookie[\"options\"]]>\n  ) => Effect.Effect<ServerResponse.HttpServerResponse, Cookies.CookiesError>\n>(\n  2,\n  (self, cookies) =>\n    Effect.map(Cookies.setAll(self.cookies, cookies), (cookies) =>\n      new ServerResponseImpl(\n        self.status,\n        self.statusText,\n        self.headers,\n        cookies,\n        self.body\n      ))\n)\n\n/** @internal */\nexport const unsafeSetCookies = dual<\n  (\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookies.Cookie[\"options\"]]>\n  ) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (\n    self: ServerResponse.HttpServerResponse,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookies.Cookie[\"options\"]]>\n  ) => ServerResponse.HttpServerResponse\n>(\n  2,\n  (self, cookies) =>\n    new ServerResponseImpl(\n      self.status,\n      self.statusText,\n      self.headers,\n      Cookies.unsafeSetAll(self.cookies, cookies),\n      self.body\n    )\n)\n\n/** @internal */\nexport const removeCookie = dual<\n  (\n    name: string\n  ) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (\n    self: ServerResponse.HttpServerResponse,\n    name: string\n  ) => ServerResponse.HttpServerResponse\n>(\n  2,\n  (self, name) =>\n    new ServerResponseImpl(\n      self.status,\n      self.statusText,\n      self.headers,\n      Cookies.remove(self.cookies, name),\n      self.body\n    )\n)\n\n/** @internal */\nexport const setHeaders = dual<\n  (input: Headers.Input) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (self: ServerResponse.HttpServerResponse, input: Headers.Input) => ServerResponse.HttpServerResponse\n>(2, (self, input) =>\n  new ServerResponseImpl(\n    self.status,\n    self.statusText,\n    Headers.setAll(self.headers, input),\n    self.cookies,\n    self.body\n  ))\n\n/** @internal */\nexport const setStatus = dual<\n  (\n    status: number,\n    statusText?: string\n  ) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (self: ServerResponse.HttpServerResponse, status: number, statusText?: string) => ServerResponse.HttpServerResponse\n>((args) => isServerResponse(args[0]), (self, status, statusText) =>\n  new ServerResponseImpl(\n    status,\n    statusText,\n    self.headers,\n    self.cookies,\n    self.body\n  ))\n\n/** @internal */\nexport const setBody = dual<\n  (body: Body.HttpBody) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (self: ServerResponse.HttpServerResponse, body: Body.HttpBody) => ServerResponse.HttpServerResponse\n>(2, (self, body) => {\n  let headers = self.headers\n  if (body._tag === \"Empty\") {\n    headers = Headers.remove(Headers.remove(headers, \"Content-Type\"), \"Content-length\")\n  }\n  return new ServerResponseImpl(\n    self.status,\n    self.statusText,\n    headers,\n    self.cookies,\n    body\n  )\n})\n\n/** @internal */\nexport const toWeb = (response: ServerResponse.HttpServerResponse, options?: {\n  readonly withoutBody?: boolean | undefined\n  readonly runtime?: Runtime.Runtime<never> | undefined\n}): Response => {\n  const headers = new globalThis.Headers(response.headers)\n  if (!Cookies.isEmpty(response.cookies)) {\n    const toAdd = Cookies.toSetCookieHeaders(response.cookies)\n    for (const header of toAdd) {\n      headers.append(\"set-cookie\", header)\n    }\n  }\n  if (options?.withoutBody) {\n    return new Response(undefined, {\n      status: response.status,\n      statusText: response.statusText as string,\n      headers\n    })\n  }\n  const body = response.body\n  switch (body._tag) {\n    case \"Empty\": {\n      return new Response(undefined, {\n        status: response.status,\n        statusText: response.statusText as string,\n        headers\n      })\n    }\n    case \"Uint8Array\":\n    case \"Raw\": {\n      return new Response(body.body as any, {\n        status: response.status,\n        statusText: response.statusText,\n        headers\n      })\n    }\n    case \"FormData\": {\n      return new Response(body.formData as any, {\n        status: response.status,\n        statusText: response.statusText,\n        headers\n      })\n    }\n    case \"Stream\": {\n      return new Response(Stream.toReadableStreamRuntime(body.stream, options?.runtime ?? Runtime.defaultRuntime), {\n        status: response.status,\n        statusText: response.statusText,\n        headers\n      })\n    }\n  }\n}\n"],"names":["Context","Effect","Effectable","dual","Inspectable","Runtime","Stream","Cookies","Headers","Template","UrlParams","internalBody","TypeId","Symbol","for","respondableSymbol","ServerResponseImpl","StructuralClass","status","statusText","cookies","body","headers","constructor","contentType","contentLength","newHeaders","toString","commit","succeed","NodeInspectSymbol","toJSON","format","_id","redact","isServerResponse","u","empty","options","uint8Array","getContentType","text","html","strings","args","map","make","_","htmlStream","context","stream","provideContext","encodeText","json","unsafeJson","schemaJson","schema","encode","jsonSchema","httpPlatform","GenericTag","file","path","flatMap","platform","fileResponse","fileWeb","fileWebResponse","urlParams","fromInput","raw","formData","setHeader","self","key","value","set","replaceCookies","setCookie","name","unsafeSetCookie","unsafeSet","updateCookies","f","setCookies","setAll","unsafeSetCookies","unsafeSetAll","removeCookie","remove","setHeaders","input","setStatus","setBody","_tag","toWeb","response","globalThis","isEmpty","toAdd","toSetCookieHeaders","header","append","withoutBody","Response","undefined","toReadableStreamRuntime","runtime","defaultRuntime"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3687, "column": 0}, "map": {"version":3,"file":"HttpServerResponse.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpServerResponse.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Effect from \"effect/Effect\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type * as Runtime from \"effect/Runtime\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Stream from \"effect/Stream\"\nimport type { Cookie, Cookies, CookiesError } from \"./Cookies.js\"\nimport type * as PlatformError from \"./Error.js\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport type * as Headers from \"./Headers.js\"\nimport type * as Body from \"./HttpBody.js\"\nimport type * as Platform from \"./HttpPlatform.js\"\nimport type { Respondable } from \"./HttpServerRespondable.js\"\nimport * as internal from \"./internal/httpServerResponse.js\"\nimport type * as Template from \"./Template.js\"\nimport type * as UrlParams from \"./UrlParams.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"@effect/platform/HttpServerResponse\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpServerResponse extends Effect.Effect<HttpServerResponse>, Inspectable, Respondable {\n  readonly [TypeId]: TypeId\n  readonly status: number\n  readonly statusText?: string | undefined\n  readonly headers: Headers.Headers\n  readonly cookies: Cookies\n  readonly body: Body.HttpBody\n}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Options {\n  readonly status?: number | undefined\n  readonly statusText?: string | undefined\n  readonly headers?: Headers.Headers | undefined\n  readonly cookies?: Cookies | undefined\n  readonly contentType?: string | undefined\n  readonly contentLength?: number | undefined\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace Options {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface WithContent extends Omit<Options, \"contentType\" | \"contentLength\"> {}\n\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface WithContentType extends Omit<Options, \"contentLength\"> {}\n}\n\n/**\n * @since 1.0.0\n */\nexport const isServerResponse: (u: unknown) => u is HttpServerResponse = internal.isServerResponse\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: (options?: Options.WithContent | undefined) => HttpServerResponse = internal.empty\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const uint8Array: (body: Uint8Array, options?: Options.WithContentType | undefined) => HttpServerResponse =\n  internal.uint8Array\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const text: (body: string, options?: Options.WithContentType | undefined) => HttpServerResponse = internal.text\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const html: {\n  /**\n   * @since 1.0.0\n   * @category constructors\n   */\n  <A extends ReadonlyArray<Template.Interpolated>>(\n    strings: TemplateStringsArray,\n    ...args: A\n  ): Effect.Effect<HttpServerResponse, Template.Interpolated.Error<A[number]>, Template.Interpolated.Context<A[number]>>\n  /**\n   * @since 1.0.0\n   * @category constructors\n   */\n  (html: string): HttpServerResponse\n} = internal.html\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const htmlStream: <A extends ReadonlyArray<Template.InterpolatedWithStream>>(\n  strings: TemplateStringsArray,\n  ...args: A\n) => Effect.Effect<HttpServerResponse, never, Template.Interpolated.Context<A[number]>> = internal.htmlStream\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const json: (\n  body: unknown,\n  options?: Options.WithContentType | undefined\n) => Effect.Effect<HttpServerResponse, Body.HttpBodyError> = internal.json\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const schemaJson: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => (body: A, options?: Options.WithContent | undefined) => Effect.Effect<HttpServerResponse, Body.HttpBodyError, R> =\n  internal.schemaJson\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const unsafeJson: (body: unknown, options?: Options.WithContentType | undefined) => HttpServerResponse =\n  internal.unsafeJson\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const urlParams: (body: UrlParams.Input, options?: Options.WithContentType | undefined) => HttpServerResponse =\n  internal.urlParams\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const raw: (body: unknown, options?: Options | undefined) => HttpServerResponse = internal.raw\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const formData: (body: FormData, options?: Options.WithContent | undefined) => HttpServerResponse =\n  internal.formData\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const stream: <E>(\n  body: Stream.Stream<Uint8Array, E, never>,\n  options?: Options | undefined\n) => HttpServerResponse = internal.stream\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const file: (\n  path: string,\n  options?: (Options & FileSystem.StreamOptions) | undefined\n) => Effect.Effect<HttpServerResponse, PlatformError.PlatformError, Platform.HttpPlatform> = internal.file\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fileWeb: (\n  file: Body.HttpBody.FileLike,\n  options?: (Options.WithContent & FileSystem.StreamOptions) | undefined\n) => Effect.Effect<HttpServerResponse, never, Platform.HttpPlatform> = internal.fileWeb\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setHeader: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, key: string, value: string): HttpServerResponse\n} = internal.setHeader\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setHeaders: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: Headers.Input): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, input: Headers.Input): HttpServerResponse\n} = internal.setHeaders\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const removeCookie: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, name: string): HttpServerResponse\n} = internal.removeCookie\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const replaceCookies: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (cookies: Cookies): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, cookies: Cookies): HttpServerResponse\n} = internal.replaceCookies\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setCookie: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string, value: string, options?: Cookie[\"options\"]): (\n    self: HttpServerResponse\n  ) => Effect.Effect<\n    HttpServerResponse,\n    CookiesError\n  >\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpServerResponse,\n    name: string,\n    value: string,\n    options?: Cookie[\"options\"]\n  ): Effect.Effect<\n    HttpServerResponse,\n    CookiesError\n  >\n} = internal.setCookie\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const unsafeSetCookie: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string, value: string, options?: Cookie[\"options\"]): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpServerResponse,\n    name: string,\n    value: string,\n    options?: Cookie[\"options\"]\n  ): HttpServerResponse\n} = internal.unsafeSetCookie\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const updateCookies: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (f: (cookies: Cookies) => Cookies): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, f: (cookies: Cookies) => Cookies): HttpServerResponse\n} = internal.updateCookies\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setCookies: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    cookies: Iterable<\n      readonly [\n        name: string,\n        value: string,\n        options?: Cookie[\"options\"]\n      ]\n    >\n  ): (self: HttpServerResponse) => Effect.Effect<HttpServerResponse, CookiesError, never>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpServerResponse,\n    cookies: Iterable<\n      readonly [\n        name: string,\n        value: string,\n        options?: Cookie[\"options\"]\n      ]\n    >\n  ): Effect.Effect<HttpServerResponse, CookiesError, never>\n} = internal.setCookies\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const unsafeSetCookies: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    cookies: Iterable<\n      readonly [\n        name: string,\n        value: string,\n        options?: Cookie[\"options\"]\n      ]\n    >\n  ): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpServerResponse,\n    cookies: Iterable<\n      readonly [\n        name: string,\n        value: string,\n        options?: Cookie[\"options\"]\n      ]\n    >\n  ): HttpServerResponse\n} = internal.unsafeSetCookies\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setBody: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: Body.HttpBody): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, body: Body.HttpBody): HttpServerResponse\n} = internal.setBody\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setStatus: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (status: number, statusText?: string | undefined): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, status: number, statusText?: string | undefined): HttpServerResponse\n} = internal.setStatus\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toWeb: (\n  response: HttpServerResponse,\n  options?: {\n    readonly withoutBody?: boolean | undefined\n    readonly runtime?: Runtime.Runtime<never> | undefined\n  }\n) => Response = internal.toWeb\n"],"names":["internal","TypeId","Symbol","for","isServerResponse","empty","uint8Array","text","html","htmlStream","json","schemaJson","unsafeJson","urlParams","raw","formData","stream","file","fileWeb","setHeader","setHeaders","removeCookie","replaceCookies","setCookie","unsafeSetCookie","updateCookies","setCookies","unsafeSetCookies","setBody","setStatus","toWeb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,QAAQ,MAAM,kCAAkC;;AAQrD,MAAMC,MAAM,GAAA,WAAA,GAAkBC,MAAM,CAACC,GAAG,CAAC,qCAAqC,CAAC;AAsD/E,MAAMC,gBAAgB,GAA4CJ,QAAQ,yQAACI,gBAAgB;AAM3F,MAAMC,KAAK,GAAsEL,QAAQ,yQAACK,KAAK;AAM/F,MAAMC,UAAU,GACrBN,QAAQ,yQAACM,UAAU;AAMd,MAAMC,IAAI,GAAwFP,QAAQ,yQAACO,IAAI;AAM/G,MAAMC,IAAI,GAcbR,QAAQ,yQAACQ,IAAI;AAMV,MAAMC,UAAU,GAGmET,QAAQ,yQAACS,UAAU;AAMtG,MAAMC,IAAI,GAG4CV,QAAQ,yQAACU,IAAI;AAMnE,MAAMC,UAAU,GAIrBX,QAAQ,yQAACW,UAAU;AAMd,MAAMC,UAAU,GACrBZ,QAAQ,yQAACY,UAAU;AAMd,MAAMC,SAAS,GACpBb,QAAQ,yQAACa,SAAS;AAMb,MAAMC,GAAG,GAAyEd,QAAQ,yQAACc,GAAG;AAM9F,MAAMC,QAAQ,GACnBf,QAAQ,yQAACe,QAAQ;AAMZ,MAAMC,MAAM,GAGOhB,QAAQ,yQAACgB,MAAM;AAMlC,MAAMC,IAAI,GAG4EjB,QAAQ,yQAACiB,IAAI;AAMnG,MAAMC,OAAO,GAGmDlB,QAAQ,yQAACkB,OAAO;AAMhF,MAAMC,SAAS,GAWlBnB,QAAQ,yQAACmB,SAAS;AAMf,MAAMC,UAAU,GAWnBpB,QAAQ,yQAACoB,UAAU;AAMhB,MAAMC,YAAY,GAWrBrB,QAAQ,yQAACqB,YAAY;AAMlB,MAAMC,cAAc,GAWvBtB,QAAQ,yQAACsB,cAAc;AAMpB,MAAMC,SAAS,GAwBlBvB,QAAQ,yQAACuB,SAAS;AAMf,MAAMC,eAAe,GAgBxBxB,QAAQ,yQAACwB,eAAe;AAMrB,MAAMC,aAAa,GAWtBzB,QAAQ,yQAACyB,aAAa;AAMnB,MAAMC,UAAU,GA4BnB1B,QAAQ,yQAAC0B,UAAU;AAMhB,MAAMC,gBAAgB,GA4BzB3B,QAAQ,yQAAC2B,gBAAgB;AAMtB,MAAMC,OAAO,GAWhB5B,QAAQ,yQAAC4B,OAAO;AAMb,MAAMC,SAAS,GAWlB7B,QAAQ,yQAAC6B,SAAS;AAMf,MAAMC,KAAK,GAMF9B,QAAQ,yQAAC8B,KAAK","ignoreList":[0]}},
    {"offset": {"line": 3747, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3753, "column": 0}, "map": {"version":3,"file":"HttpServerRespondable.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpServerRespondable.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Cause from \"effect/Cause\"\nimport * as Effect from \"effect/Effect\"\nimport * as ParseResult from \"effect/ParseResult\"\nimport { hasProperty } from \"effect/Predicate\"\nimport type { HttpServerResponse } from \"./HttpServerResponse.js\"\nimport * as ServerResponse from \"./HttpServerResponse.js\"\n\n/**\n * @since 1.0.0\n * @category symbols\n */\nexport const symbol: unique symbol = Symbol.for(\"@effect/platform/HttpServerRespondable\")\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Respondable {\n  readonly [symbol]: () => Effect.Effect<HttpServerResponse, unknown>\n}\n\n/**\n * @since 1.0.0\n * @category guards\n */\nexport const isRespondable = (u: unknown): u is Respondable => hasProperty(u, symbol)\n\nconst badRequest = ServerResponse.empty({ status: 400 })\nconst notFound = ServerResponse.empty({ status: 404 })\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const toResponse = (self: Respondable): Effect.Effect<HttpServerResponse> => {\n  if (ServerResponse.isServerResponse(self)) {\n    return Effect.succeed(self)\n  }\n  return Effect.orDie(self[symbol]())\n}\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const toResponseOrElse = (u: unknown, orElse: HttpServerResponse): Effect.Effect<HttpServerResponse> => {\n  if (ServerResponse.isServerResponse(u)) {\n    return Effect.succeed(u)\n  } else if (isRespondable(u)) {\n    return Effect.catchAllCause(u[symbol](), () => Effect.succeed(orElse))\n    // add support for some commmon types\n  } else if (ParseResult.isParseError(u)) {\n    return Effect.succeed(badRequest)\n  } else if (Cause.isNoSuchElementException(u)) {\n    return Effect.succeed(notFound)\n  }\n  return Effect.succeed(orElse)\n}\n"],"names":["Cause","Effect","ParseResult","hasProperty","ServerResponse","symbol","Symbol","for","isRespondable","u","badRequest","empty","status","notFound","toResponse","self","isServerResponse","succeed","orDie","toResponseOrElse","orElse","catchAllCause","isParseError","isNoSuchElementException"],"mappings":"AAAA;;;;;;;;AAMA,SAASG,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,KAAKC,cAAc,MAAM,yBAAyB;AAJzD,OAAO,KAAKH,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AAFjD,OAAO,KAAKF,KAAK,MAAM,cAAc;;;;;;AAW9B,MAAMK,MAAM,GAAA,WAAA,GAAkBC,MAAM,CAACC,GAAG,CAAC,wCAAwC,CAAC;AAclF,MAAMC,aAAa,IAAIC,CAAU,OAAuBN,uNAAAA,AAAW,EAACM,CAAC,EAAEJ,MAAM,CAAC;AAErF,MAAMK,UAAU,GAAA,WAAA,GAAGN,cAAc,uPAACO,KAAK,CAAC;IAAEC,MAAM,EAAE;AAAG,CAAE,CAAC;AACxD,MAAMC,QAAQ,GAAA,WAAA,GAAGT,cAAc,uPAACO,KAAK,CAAC;IAAEC,MAAM,EAAE;AAAG,CAAE,CAAC;AAM/C,MAAME,UAAU,IAAIC,IAAiB,IAAuC;IACjF,IAAIX,cAAc,uPAACY,gBAAgB,CAACD,IAAI,CAAC,EAAE;QACzC,OAAOd,MAAM,gMAACgB,OAAO,CAACF,IAAI,CAAC;IAC7B;IACA,OAAOd,MAAM,gMAACiB,KAAK,CAACH,IAAI,CAACV,MAAM,CAAC,EAAE,CAAC;AACrC,CAAC;AAMM,MAAMc,gBAAgB,GAAGA,CAACV,CAAU,EAAEW,MAA0B,KAAuC;IAC5G,IAAIhB,cAAc,uPAACY,gBAAgB,CAACP,CAAC,CAAC,EAAE;QACtC,OAAOR,MAAM,gMAACgB,OAAO,CAACR,CAAC,CAAC;IAC1B,CAAC,MAAM,IAAID,aAAa,CAACC,CAAC,CAAC,EAAE;QAC3B,OAAOR,MAAM,gMAACoB,aAAa,CAACZ,CAAC,CAACJ,MAAM,CAAC,EAAE,EAAE,IAAMJ,MAAM,gMAACgB,OAAO,CAACG,MAAM,CAAC,CAAC;IACtE,qCAAA;IACF,CAAC,MAAM,IAAIlB,WAAW,gMAACoB,YAAY,CAACb,CAAC,CAAC,EAAE;QACtC,OAAOR,MAAM,gMAACgB,OAAO,CAACP,UAAU,CAAC;IACnC,CAAC,MAAM,IAAIV,KAAK,gMAACuB,wBAAwB,CAACd,CAAC,CAAC,EAAE;QAC5C,OAAOR,MAAM,gMAACgB,OAAO,CAACJ,QAAQ,CAAC;IACjC;IACA,OAAOZ,MAAM,gMAACgB,OAAO,CAACG,MAAM,CAAC;AAC/B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3804, "column": 0}, "map": {"version":3,"file":"httpServerError.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpServerError.ts"],"sourcesContent":["import * as Cause from \"effect/Cause\"\nimport * as Effect from \"effect/Effect\"\nimport type * as Exit from \"effect/Exit\"\nimport * as FiberId from \"effect/FiberId\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Option from \"effect/Option\"\nimport * as Predicate from \"effect/Predicate\"\nimport type * as Error from \"../HttpServerError.js\"\nimport * as Respondable from \"../HttpServerRespondable.js\"\nimport type { HttpServerResponse } from \"../HttpServerResponse.js\"\nimport * as internalServerResponse from \"./httpServerResponse.js\"\n\n/** @internal */\nexport const TypeId: Error.TypeId = Symbol.for(\n  \"@effect/platform/HttpServerError\"\n) as Error.TypeId\n\n/** @internal */\nexport const isServerError = (u: unknown): u is Error.HttpServerError => Predicate.hasProperty(u, TypeId)\n\n/** @internal */\nexport const clientAbortFiberId = globalValue(\n  \"@effect/platform/HttpServerError/clientAbortFiberId\",\n  () => FiberId.runtime(-499, 0)\n)\n\n/** @internal */\nexport const causeResponse = <E>(\n  cause: Cause.Cause<E>\n): Effect.Effect<readonly [HttpServerResponse, Cause.Cause<E>]> => {\n  const [effect, stripped] = Cause.reduce(\n    cause,\n    [Effect.succeed(internalServerError), Cause.empty as Cause.Cause<E>] as const,\n    (acc, cause) => {\n      switch (cause._tag) {\n        case \"Empty\": {\n          return Option.some(acc)\n        }\n        case \"Fail\": {\n          return Option.some([Respondable.toResponseOrElse(cause.error, internalServerError), cause] as const)\n        }\n        case \"Die\": {\n          return Option.some([Respondable.toResponseOrElse(cause.defect, internalServerError), cause] as const)\n        }\n        case \"Interrupt\": {\n          if (acc[1]._tag !== \"Empty\") {\n            return Option.none()\n          }\n          const response = cause.fiberId === clientAbortFiberId ? clientAbortError : serverAbortError\n          return Option.some([Effect.succeed(response), cause] as const)\n        }\n        default: {\n          return Option.none()\n        }\n      }\n    }\n  )\n  return Effect.map(effect, (response) => {\n    if (Cause.isEmptyType(stripped)) {\n      return [response, Cause.die(response)] as const\n    }\n    return [response, Cause.sequential(stripped, Cause.die(response))] as const\n  })\n}\n\n/** @internal */\nexport const causeResponseStripped = <E>(\n  cause: Cause.Cause<E>\n): readonly [response: HttpServerResponse, cause: Option.Option<Cause.Cause<E>>] => {\n  let response: HttpServerResponse | undefined\n  const stripped = Cause.stripSomeDefects(cause, (defect) => {\n    if (internalServerResponse.isServerResponse(defect)) {\n      response = defect\n      return Option.some(Cause.empty)\n    }\n    return Option.none()\n  })\n  return [response ?? internalServerError, stripped]\n}\n\nconst internalServerError = internalServerResponse.empty({ status: 500 })\nconst clientAbortError = internalServerResponse.empty({ status: 499 })\nconst serverAbortError = internalServerResponse.empty({ status: 503 })\n\n/** @internal */\nexport const exitResponse = <E>(exit: Exit.Exit<HttpServerResponse, E>): HttpServerResponse => {\n  if (exit._tag === \"Success\") {\n    return exit.value\n  }\n  return causeResponseStripped(exit.cause)[0]\n}\n"],"names":["Cause","Effect","FiberId","globalValue","Option","Predicate","Respondable","internalServerResponse","TypeId","Symbol","for","isServerError","u","hasProperty","clientAbortFiberId","runtime","causeResponse","cause","effect","stripped","reduce","succeed","internalServerError","empty","acc","_tag","some","toResponseOrElse","error","defect","none","response","fiberId","clientAbortError","serverAbortError","map","isEmptyType","die","sequential","causeResponseStripped","stripSomeDefects","isServerResponse","status","exitResponse","exit","value"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3914, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3920, "column": 0}, "map": {"version":3,"file":"HttpServerError.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpServerError.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Cause from \"effect/Cause\"\nimport type * as Effect from \"effect/Effect\"\nimport type * as Exit from \"effect/Exit\"\nimport type * as FiberId from \"effect/FiberId\"\nimport type * as Option from \"effect/Option\"\nimport { TypeIdError } from \"./Error.js\"\nimport type * as ServerRequest from \"./HttpServerRequest.js\"\nimport * as Respondable from \"./HttpServerRespondable.js\"\nimport * as ServerResponse from \"./HttpServerResponse.js\"\nimport * as internal from \"./internal/httpServerError.js\"\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport type HttpServerError = RequestError | ResponseError | RouteNotFound | ServeError\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class RequestError extends TypeIdError(TypeId, \"RequestError\")<{\n  readonly request: ServerRequest.HttpServerRequest\n  readonly reason: \"Transport\" | \"Decode\"\n  readonly cause?: unknown\n  readonly description?: string\n}> implements Respondable.Respondable {\n  /**\n   * @since 1.0.0\n   */\n  [Respondable.symbol]() {\n    return ServerResponse.empty({ status: 400 })\n  }\n\n  get methodAndUrl() {\n    return `${this.request.method} ${this.request.url}`\n  }\n\n  get message() {\n    return this.description ?\n      `${this.reason}: ${this.description} (${this.methodAndUrl})` :\n      `${this.reason} error (${this.methodAndUrl})`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category predicates\n */\nexport const isServerError: (u: unknown) => u is HttpServerError = internal.isServerError\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class RouteNotFound extends TypeIdError(TypeId, \"RouteNotFound\")<{\n  readonly request: ServerRequest.HttpServerRequest\n}> {\n  constructor(options: { request: ServerRequest.HttpServerRequest }) {\n    super(options)\n    ;(this as any).stack = `${this.name}: ${this.message}`\n  }\n  /**\n   * @since 1.0.0\n   */\n  [Respondable.symbol]() {\n    return ServerResponse.empty({ status: 404 })\n  }\n  get message() {\n    return `${this.request.method} ${this.request.url} not found`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class ResponseError extends TypeIdError(TypeId, \"ResponseError\")<{\n  readonly request: ServerRequest.HttpServerRequest\n  readonly response: ServerResponse.HttpServerResponse\n  readonly reason: \"Decode\"\n  readonly cause?: unknown\n  readonly description?: string\n}> {\n  /**\n   * @since 1.0.0\n   */\n  [Respondable.symbol]() {\n    return ServerResponse.empty({ status: 500 })\n  }\n\n  get methodAndUrl() {\n    return `${this.request.method} ${this.request.url}`\n  }\n\n  get message() {\n    const info = `${this.response.status} ${this.methodAndUrl}`\n    return this.description ?\n      `${this.description} (${info})` :\n      `${this.reason} error (${info})`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class ServeError extends TypeIdError(TypeId, \"ServeError\")<{\n  readonly cause: unknown\n}> {}\n\n/**\n * @since 1.0.0\n */\nexport const clientAbortFiberId: FiberId.FiberId = internal.clientAbortFiberId\n\n/**\n * @since 1.0.0\n */\nexport const causeResponse: <E>(\n  cause: Cause.Cause<E>\n) => Effect.Effect<readonly [ServerResponse.HttpServerResponse, Cause.Cause<E>]> = internal.causeResponse\n\n/**\n * @since 1.0.0\n */\nexport const causeResponseStripped: <E>(\n  cause: Cause.Cause<E>\n) => readonly [response: ServerResponse.HttpServerResponse, cause: Option.Option<Cause.Cause<E>>] =\n  internal.causeResponseStripped\n\n/**\n * @since 1.0.0\n */\nexport const exitResponse: <E>(\n  exit: Exit.Exit<ServerResponse.HttpServerResponse, E>\n) => ServerResponse.HttpServerResponse = internal.exitResponse\n"],"names":["TypeIdError","Respondable","ServerResponse","internal","TypeId","RequestError","symbol","empty","status","methodAndUrl","request","method","url","message","description","reason","isServerError","RouteNotFound","constructor","options","stack","name","ResponseError","info","response","ServeError","clientAbortFiberId","causeResponse","causeResponseStripped","exitResponse"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3995, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4001, "column": 0}, "map": {"version":3,"file":"httpServerRequest.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpServerRequest.ts"],"sourcesContent":["import * as Channel from \"effect/Channel\"\nimport * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport type { ReadonlyRecord } from \"effect/Record\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport * as Stream from \"effect/Stream\"\nimport * as Cookies from \"../Cookies.js\"\nimport type * as FileSystem from \"../FileSystem.js\"\nimport * as Headers from \"../Headers.js\"\nimport * as IncomingMessage from \"../HttpIncomingMessage.js\"\nimport type { HttpMethod } from \"../HttpMethod.js\"\nimport * as Error from \"../HttpServerError.js\"\nimport type * as ServerRequest from \"../HttpServerRequest.js\"\nimport * as Multipart from \"../Multipart.js\"\nimport type * as Path from \"../Path.js\"\nimport * as Socket from \"../Socket.js\"\nimport * as UrlParams from \"../UrlParams.js\"\n\n/** @internal */\nexport const TypeId: ServerRequest.TypeId = Symbol.for(\"@effect/platform/HttpServerRequest\") as ServerRequest.TypeId\n\n/** @internal */\nexport const serverRequestTag = Context.GenericTag<ServerRequest.HttpServerRequest>(\n  \"@effect/platform/HttpServerRequest\"\n)\n\n/** @internal */\nexport const parsedSearchParamsTag = Context.GenericTag<\n  ServerRequest.ParsedSearchParams,\n  ReadonlyRecord<string, string | Array<string>>\n>(\"@effect/platform/HttpServerRequest/ParsedSearchParams\")\n\n/** @internal */\nexport const upgrade = Effect.flatMap(serverRequestTag, (request) => request.upgrade)\n\n/** @internal */\nexport const upgradeChannel = <IE = never>() => Channel.unwrap(Effect.map(upgrade, Socket.toChannelWith<IE>()))\n\n/** @internal */\nexport const multipartPersisted = Effect.flatMap(serverRequestTag, (request) => request.multipart)\n\n/** @internal */\nexport const searchParamsFromURL = (url: URL): ReadonlyRecord<string, string | Array<string>> => {\n  const out: Record<string, string | Array<string>> = {}\n  for (const [key, value] of url.searchParams.entries()) {\n    const entry = out[key]\n    if (entry !== undefined) {\n      if (Array.isArray(entry)) {\n        entry.push(value)\n      } else {\n        out[key] = [entry, value]\n      }\n    } else {\n      out[key] = value\n    }\n  }\n  return out\n}\n\n/** @internal */\nexport const schemaCookies = <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(serverRequestTag, (req) => parse(req.cookies))\n}\n\n/** @internal */\nexport const schemaHeaders = <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = IncomingMessage.schemaHeaders(schema, options)\n  return Effect.flatMap(serverRequestTag, parse)\n}\n\n/** @internal */\nexport const schemaSearchParams = <\n  A,\n  I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>,\n  R\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(parsedSearchParamsTag, parse)\n}\n\n/** @internal */\nexport const schemaBodyJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined) => {\n  const parse = IncomingMessage.schemaBodyJson(schema, options)\n  return Effect.flatMap(serverRequestTag, parse)\n}\n\nconst isMultipart = (request: ServerRequest.HttpServerRequest) =>\n  request.headers[\"content-type\"]?.toLowerCase().includes(\"multipart/form-data\")\n\n/** @internal */\nexport const schemaBodyForm = <A, I extends Partial<Multipart.Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parseMultipart = Multipart.schemaPersisted(schema, options)\n  const parseUrlParams = IncomingMessage.schemaBodyUrlParams(schema as Schema.Schema<A, any, R>, options)\n  return Effect.flatMap(serverRequestTag, (request): Effect.Effect<\n    A,\n    Multipart.MultipartError | ParseResult.ParseError | Error.RequestError,\n    R | ServerRequest.HttpServerRequest | Scope.Scope | FileSystem.FileSystem | Path.Path\n  > => {\n    if (isMultipart(request)) {\n      return Effect.flatMap(request.multipart, parseMultipart)\n    }\n    return parseUrlParams(request)\n  })\n}\n\n/** @internal */\nexport const schemaBodyUrlParams = <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = IncomingMessage.schemaBodyUrlParams(schema, options)\n  return Effect.flatMap(serverRequestTag, parse)\n}\n\n/** @internal */\nexport const schemaBodyMultipart = <A, I extends Partial<Multipart.Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Multipart.schemaPersisted(schema, options)\n  return Effect.flatMap(multipartPersisted, parse)\n}\n\n/** @internal */\nexport const schemaBodyFormJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined) => {\n  const parseMultipart = Multipart.schemaJson(schema, options)\n  const parseUrlParams = UrlParams.schemaJson(schema, options)\n  return (field: string) =>\n    Effect.flatMap(\n      serverRequestTag,\n      (\n        request\n      ): Effect.Effect<\n        A,\n        ParseResult.ParseError | Error.RequestError,\n        R | FileSystem.FileSystem | Path.Path | Scope.Scope | ServerRequest.HttpServerRequest\n      > => {\n        if (isMultipart(request)) {\n          return Effect.flatMap(\n            Effect.mapError(request.multipart, (cause) =>\n              new Error.RequestError({\n                request,\n                reason: \"Decode\",\n                cause\n              })),\n            parseMultipart(field)\n          )\n        }\n        return Effect.flatMap(request.urlParamsBody, parseUrlParams(field))\n      }\n    )\n}\n\n/** @internal */\nexport const fromWeb = (request: globalThis.Request): ServerRequest.HttpServerRequest =>\n  new ServerRequestImpl(request, removeHost(request.url))\n\nconst removeHost = (url: string) => {\n  if (url[0] === \"/\") {\n    return url\n  }\n  const index = url.indexOf(\"/\", url.indexOf(\"//\") + 2)\n  return index === -1 ? \"/\" : url.slice(index)\n}\n\nclass ServerRequestImpl extends Inspectable.Class implements ServerRequest.HttpServerRequest {\n  readonly [TypeId]: ServerRequest.TypeId\n  readonly [IncomingMessage.TypeId]: IncomingMessage.TypeId\n  constructor(\n    readonly source: Request,\n    readonly url: string,\n    public headersOverride?: Headers.Headers,\n    private remoteAddressOverride?: string\n  ) {\n    super()\n    this[TypeId] = TypeId\n    this[IncomingMessage.TypeId] = IncomingMessage.TypeId\n  }\n  toJSON(): unknown {\n    return IncomingMessage.inspect(this, {\n      _id: \"@effect/platform/HttpServerRequest\",\n      method: this.method,\n      url: this.originalUrl\n    })\n  }\n  modify(\n    options: {\n      readonly url?: string | undefined\n      readonly headers?: Headers.Headers | undefined\n      readonly remoteAddress?: string | undefined\n    }\n  ) {\n    return new ServerRequestImpl(\n      this.source,\n      options.url ?? this.url,\n      options.headers ?? this.headersOverride,\n      options.remoteAddress ?? this.remoteAddressOverride\n    )\n  }\n  get method(): HttpMethod {\n    return this.source.method.toUpperCase() as HttpMethod\n  }\n  get originalUrl() {\n    return this.source.url\n  }\n  get remoteAddress(): Option.Option<string> {\n    return this.remoteAddressOverride ? Option.some(this.remoteAddressOverride) : Option.none()\n  }\n  get headers(): Headers.Headers {\n    this.headersOverride ??= Headers.fromInput(this.source.headers)\n    return this.headersOverride\n  }\n\n  private cachedCookies: ReadonlyRecord<string, string> | undefined\n  get cookies() {\n    if (this.cachedCookies) {\n      return this.cachedCookies\n    }\n    return this.cachedCookies = Cookies.parseHeader(this.headers.cookie ?? \"\")\n  }\n\n  get stream(): Stream.Stream<Uint8Array, Error.RequestError> {\n    return this.source.body\n      ? Stream.fromReadableStream(() => this.source.body as any, (cause) =>\n        new Error.RequestError({\n          request: this,\n          reason: \"Decode\",\n          cause\n        }))\n      : Stream.fail(\n        new Error.RequestError({\n          request: this,\n          reason: \"Decode\",\n          description: \"can not create stream from empty body\"\n        })\n      )\n  }\n\n  private textEffect: Effect.Effect<string, Error.RequestError> | undefined\n  get text(): Effect.Effect<string, Error.RequestError> {\n    if (this.textEffect) {\n      return this.textEffect\n    }\n    this.textEffect = Effect.runSync(Effect.cached(\n      Effect.tryPromise({\n        try: () => this.source.text(),\n        catch: (cause) =>\n          new Error.RequestError({\n            request: this,\n            reason: \"Decode\",\n            cause\n          })\n      })\n    ))\n    return this.textEffect\n  }\n\n  get json(): Effect.Effect<unknown, Error.RequestError> {\n    return Effect.tryMap(this.text, {\n      try: (_) => JSON.parse(_) as unknown,\n      catch: (cause) =>\n        new Error.RequestError({\n          request: this,\n          reason: \"Decode\",\n          cause\n        })\n    })\n  }\n\n  get urlParamsBody(): Effect.Effect<UrlParams.UrlParams, Error.RequestError> {\n    return Effect.flatMap(this.text, (_) =>\n      Effect.try({\n        try: () => UrlParams.fromInput(new URLSearchParams(_)),\n        catch: (cause) =>\n          new Error.RequestError({\n            request: this,\n            reason: \"Decode\",\n            cause\n          })\n      }))\n  }\n\n  private multipartEffect:\n    | Effect.Effect<\n      Multipart.Persisted,\n      Multipart.MultipartError,\n      Scope.Scope | FileSystem.FileSystem | Path.Path\n    >\n    | undefined\n  get multipart(): Effect.Effect<\n    Multipart.Persisted,\n    Multipart.MultipartError,\n    Scope.Scope | FileSystem.FileSystem | Path.Path\n  > {\n    if (this.multipartEffect) {\n      return this.multipartEffect\n    }\n    this.multipartEffect = Effect.runSync(Effect.cached(\n      Multipart.toPersisted(this.multipartStream)\n    ))\n    return this.multipartEffect\n  }\n\n  get multipartStream(): Stream.Stream<Multipart.Part, Multipart.MultipartError> {\n    return Stream.pipeThroughChannel(\n      Stream.mapError(this.stream, (cause) => new Multipart.MultipartError({ reason: \"InternalError\", cause })),\n      Multipart.makeChannel(this.headers)\n    )\n  }\n\n  private arrayBufferEffect: Effect.Effect<ArrayBuffer, Error.RequestError> | undefined\n  get arrayBuffer(): Effect.Effect<ArrayBuffer, Error.RequestError> {\n    if (this.arrayBuffer) {\n      return this.arrayBuffer\n    }\n    this.arrayBufferEffect = Effect.runSync(Effect.cached(\n      Effect.tryPromise({\n        try: () => this.source.arrayBuffer(),\n        catch: (cause) =>\n          new Error.RequestError({\n            request: this,\n            reason: \"Decode\",\n            cause\n          })\n      })\n    ))\n    return this.arrayBufferEffect\n  }\n\n  get upgrade(): Effect.Effect<Socket.Socket, Error.RequestError> {\n    return Effect.fail(\n      new Error.RequestError({\n        request: this,\n        reason: \"Decode\",\n        description: \"Not an upgradeable ServerRequest\"\n      })\n    )\n  }\n}\n\n/** @internal */\nexport const toURL = (self: ServerRequest.HttpServerRequest): Option.Option<URL> => {\n  const host = self.headers.host ?? \"localhost\"\n  const protocol = self.headers[\"x-forwarded-proto\"] === \"https\" ? \"https\" : \"http\"\n  try {\n    return Option.some(new URL(self.url, `${protocol}://${host}`))\n  } catch (_) {\n    return Option.none()\n  }\n}\n"],"names":["Channel","Context","Effect","Inspectable","Option","Schema","Stream","Cookies","Headers","IncomingMessage","Error","Multipart","Socket","UrlParams","TypeId","Symbol","for","serverRequestTag","GenericTag","parsedSearchParamsTag","upgrade","flatMap","request","upgradeChannel","unwrap","map","toChannelWith","multipartPersisted","multipart","searchParamsFromURL","url","out","key","value","searchParams","entries","entry","undefined","Array","isArray","push","schemaCookies","schema","options","parse","decodeUnknown","req","cookies","schemaHeaders","schemaSearchParams","schemaBodyJson","isMultipart","headers","toLowerCase","includes","schemaBodyForm","parseMultipart","schemaPersisted","parseUrlParams","schemaBodyUrlParams","schemaBodyMultipart","schemaBodyFormJson","schemaJson","field","mapError","cause","RequestError","reason","urlParamsBody","fromWeb","ServerRequestImpl","removeHost","index","indexOf","slice","Class","source","headersOverride","remoteAddressOverride","constructor","toJSON","inspect","_id","method","originalUrl","modify","remoteAddress","toUpperCase","some","none","fromInput","cachedCookies","parseHeader","cookie","stream","body","fromReadableStream","fail","description","textEffect","text","runSync","cached","tryPromise","try","catch","json","tryMap","_","JSON","URLSearchParams","multipartEffect","toPersisted","multipartStream","pipeThroughChannel","MultipartError","makeChannel","arrayBufferEffect","arrayBuffer","toURL","self","host","protocol","URL"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4274, "column": 0}, "map": {"version":3,"file":"HttpServerRequest.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpServerRequest.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type { Channel } from \"effect/Channel\"\nimport type { Chunk } from \"effect/Chunk\"\nimport type * as Context from \"effect/Context\"\nimport type * as Effect from \"effect/Effect\"\nimport type { Option } from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport type { ReadonlyRecord } from \"effect/Record\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport type * as Stream from \"effect/Stream\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport type * as Headers from \"./Headers.js\"\nimport type * as IncomingMessage from \"./HttpIncomingMessage.js\"\nimport type { HttpMethod } from \"./HttpMethod.js\"\nimport type * as Error from \"./HttpServerError.js\"\nimport * as internal from \"./internal/httpServerRequest.js\"\nimport type * as Multipart from \"./Multipart.js\"\nimport type * as Path from \"./Path.js\"\nimport type * as Socket from \"./Socket.js\"\n\nexport {\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  maxBodySize\n} from \"./HttpIncomingMessage.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpServerRequest extends IncomingMessage.HttpIncomingMessage<Error.RequestError> {\n  readonly [TypeId]: TypeId\n  readonly source: unknown\n  readonly url: string\n  readonly originalUrl: string\n  readonly method: HttpMethod\n  readonly cookies: ReadonlyRecord<string, string>\n\n  readonly multipart: Effect.Effect<\n    Multipart.Persisted,\n    Multipart.MultipartError,\n    Scope.Scope | FileSystem.FileSystem | Path.Path\n  >\n  readonly multipartStream: Stream.Stream<Multipart.Part, Multipart.MultipartError>\n\n  readonly upgrade: Effect.Effect<Socket.Socket, Error.RequestError>\n\n  readonly modify: (\n    options: {\n      readonly url?: string\n      readonly headers?: Headers.Headers\n      readonly remoteAddress?: string\n    }\n  ) => HttpServerRequest\n}\n\n/**\n * @since 1.0.0\n * @category context\n */\nexport const HttpServerRequest: Context.Tag<HttpServerRequest, HttpServerRequest> = internal.serverRequestTag\n\n/**\n * @since 1.0.0\n * @category search params\n */\nexport interface ParsedSearchParams {\n  readonly _: unique symbol\n}\n\n/**\n * @since 1.0.0\n * @category search params\n */\nexport const ParsedSearchParams: Context.Tag<ParsedSearchParams, ReadonlyRecord<string, string | Array<string>>> =\n  internal.parsedSearchParamsTag\n\n/**\n * @since 1.0.0\n * @category search params\n */\nexport const searchParamsFromURL: (url: URL) => ReadonlyRecord<string, string | Array<string>> =\n  internal.searchParamsFromURL\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const persistedMultipart: Effect.Effect<\n  unknown,\n  Multipart.MultipartError,\n  Scope.Scope | FileSystem.FileSystem | Path.Path | HttpServerRequest\n> = internal.multipartPersisted\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const upgrade: Effect.Effect<Socket.Socket, Error.RequestError, HttpServerRequest> = internal.upgrade\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const upgradeChannel: <IE = never>() => Channel<\n  Chunk<Uint8Array>,\n  Chunk<Uint8Array | string | Socket.CloseEvent>,\n  Error.RequestError | IE | Socket.SocketError,\n  IE,\n  void,\n  unknown,\n  HttpServerRequest\n> = internal.upgradeChannel\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaCookies: <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError, HttpServerRequest | R> = internal.schemaCookies\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaHeaders: <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError, HttpServerRequest | R> = internal.schemaHeaders\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaSearchParams: <A, I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError, ParsedSearchParams | R> = internal.schemaSearchParams\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyJson: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, Error.RequestError | ParseResult.ParseError, HttpServerRequest | R> = internal.schemaBodyJson\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyForm: <A, I extends Partial<Multipart.Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<\n  A,\n  Multipart.MultipartError | ParseResult.ParseError | Error.RequestError,\n  R | HttpServerRequest | Scope.Scope | FileSystem.FileSystem | Path.Path\n> = internal.schemaBodyForm\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyUrlParams: <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError | Error.RequestError, R | HttpServerRequest> = internal.schemaBodyUrlParams\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyMultipart: <A, I extends Partial<Multipart.Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<\n  A,\n  Multipart.MultipartError | ParseResult.ParseError,\n  R | HttpServerRequest | Scope.Scope | FileSystem.FileSystem | Path.Path\n> = internal.schemaBodyMultipart\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyFormJson: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => (\n  field: string\n) => Effect.Effect<\n  A,\n  ParseResult.ParseError | Error.RequestError,\n  R | HttpServerRequest | FileSystem.FileSystem | Path.Path | Scope.Scope\n> = internal.schemaBodyFormJson\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const fromWeb: (request: Request) => HttpServerRequest = internal.fromWeb\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toURL: (self: HttpServerRequest) => Option<URL> = internal.toURL\n"],"names":["internal","maxBodySize","TypeId","HttpServerRequest","serverRequestTag","ParsedSearchParams","parsedSearchParamsTag","searchParamsFromURL","persistedMultipart","multipartPersisted","upgrade","upgradeChannel","schemaCookies","schemaHeaders","schemaSearchParams","schemaBodyJson","schemaBodyForm","schemaBodyUrlParams","schemaBodyMultipart","schemaBodyFormJson","fromWeb","toURL"],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,OAAO,KAAKA,QAAQ,MAAM,iCAAiC;;;AAiBpD,MAAME,MAAM,GAAkBF,QAAQ,wQAACE,MAAM;AA0C7C,MAAMC,iBAAiB,GAAsDH,QAAQ,wQAACI,gBAAgB;AActG,MAAMC,kBAAkB,GAC7BL,QAAQ,wQAACM,qBAAqB;AAMzB,MAAMC,mBAAmB,GAC9BP,QAAQ,wQAACO,mBAAmB;AAMvB,MAAMC,kBAAkB,GAI3BR,QAAQ,wQAACS,kBAAkB;AAMxB,MAAMC,OAAO,GAAwEV,QAAQ,wQAACU,OAAO;AAMrG,MAAMC,cAAc,GAQvBX,QAAQ,wQAACW,cAAc;AAMpB,MAAMC,aAAa,GAG6CZ,QAAQ,wQAACY,aAAa;AAMtF,MAAMC,aAAa,GAG6Cb,QAAQ,wQAACa,aAAa;AAMtF,MAAMC,kBAAkB,GAGyCd,QAAQ,wQAACc,kBAAkB;AAM5F,MAAMC,cAAc,GAGiEf,QAAQ,wQAACe,cAAc;AAM5G,MAAMC,cAAc,GAOvBhB,QAAQ,wQAACgB,cAAc;AAMpB,MAAMC,mBAAmB,GAG4DjB,QAAQ,wQAACiB,mBAAmB;AAMjH,MAAMC,mBAAmB,GAO5BlB,QAAQ,wQAACkB,mBAAmB;AAMzB,MAAMC,kBAAkB,GAS3BnB,QAAQ,wQAACmB,kBAAkB;AAMxB,MAAMC,OAAO,GAA4CpB,QAAQ,wQAACoB,OAAO;AAMzE,MAAMC,KAAK,GAA6CrB,QAAQ,wQAACqB,KAAK","ignoreList":[0]}},
    {"offset": {"line": 4313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4383, "column": 0}, "map": {"version":3,"file":"httpApp.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpApp.ts"],"sourcesContent":["import * as Effect from \"effect/Effect\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Option from \"effect/Option\"\nimport type { HttpApp, PreResponseHandler } from \"../HttpApp.js\"\n\n/** @internal */\nexport const currentPreResponseHandlers: FiberRef.FiberRef<Option.Option<PreResponseHandler>> = globalValue(\n  Symbol.for(\"@effect/platform/HttpApp/preResponseHandlers\"),\n  () => FiberRef.unsafeMake<Option.Option<PreResponseHandler>>(Option.none())\n)\n\n/** @internal */\nexport const appendPreResponseHandler: (handler: PreResponseHandler) => Effect.Effect<void> = (\n  handler: PreResponseHandler\n) =>\n  FiberRef.update(\n    currentPreResponseHandlers,\n    Option.match({\n      onNone: () => Option.some(handler),\n      onSome: (prev) =>\n        Option.some((request, response) =>\n          Effect.flatMap(prev(request, response), (response) => handler(request, response))\n        )\n    })\n  )\n\n/** @internal */\nexport const withPreResponseHandler = dual<\n  (handler: PreResponseHandler) => <A, E, R>(self: HttpApp<A, E, R>) => HttpApp<A, E, R>,\n  <A, E, R>(self: HttpApp<A, E, R>, handler: PreResponseHandler) => HttpApp<A, E, R>\n>(2, (self, handler) =>\n  Effect.locallyWith(\n    self,\n    currentPreResponseHandlers,\n    Option.match({\n      onNone: () => Option.some(handler),\n      onSome: (prev) =>\n        Option.some((request, response) =>\n          Effect.flatMap(prev(request, response), (response) => handler(request, response))\n        )\n    })\n  ))\n"],"names":["Effect","FiberRef","dual","globalValue","Option","currentPreResponseHandlers","Symbol","for","unsafeMake","none","appendPreResponseHandler","handler","update","match","onNone","some","onSome","prev","request","response","flatMap","withPreResponseHandler","self","locallyWith"],"mappings":";;;;;AAGA,SAASG,WAAW,QAAQ,oBAAoB;AAFhD,OAAO,KAAKF,QAAQ,MAAM,iBAAiB;AAG3C,OAAO,KAAKG,MAAM,MAAM,eAAe;AAJvC,OAAO,KAAKJ,MAAM,MAAM,eAAe;AAEvC,SAASE,IAAI,QAAQ,iBAAiB;;;;;;AAM/B,MAAMG,0BAA0B,GAAA,WAAA,kNAAyDF,cAAAA,AAAW,EAAA,WAAA,GACzGG,MAAM,CAACC,GAAG,CAAC,8CAA8C,CAAC,EAC1D,IAAMN,QAAQ,gMAACO,UAAU,CAAoCJ,MAAM,gMAACK,IAAI,EAAE,CAAC,CAC5E;AAGM,MAAMC,wBAAwB,IACnCC,OAA2B,GAE3BV,QAAQ,gMAACW,MAAM,CACbP,0BAA0B,EAC1BD,MAAM,gMAACS,KAAK,CAAC;QACXC,MAAM,EAAEA,CAAA,GAAMV,MAAM,gMAACW,IAAI,CAACJ,OAAO,CAAC;QAClCK,MAAM,GAAGC,IAAI,GACXb,MAAM,gMAACW,IAAI,CAAC,CAACG,OAAO,EAAEC,QAAQ,GAC5BnB,MAAM,gMAACoB,OAAO,CAACH,IAAI,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGA,QAAQ,GAAKR,OAAO,CAACO,OAAO,EAAEC,QAAQ,CAAC,CAAC;KAEtF,CAAC,CACH;AAGI,MAAME,sBAAsB,GAAA,WAAA,+MAAGnB,OAAAA,AAAI,EAGxC,CAAC,EAAE,CAACoB,IAAI,EAAEX,OAAO,GACjBX,MAAM,gMAACuB,WAAW,CAChBD,IAAI,EACJjB,0BAA0B,EAC1BD,MAAM,gMAACS,KAAK,CAAC;QACXC,MAAM,EAAEA,CAAA,GAAMV,MAAM,gMAACW,IAAI,CAACJ,OAAO,CAAC;QAClCK,MAAM,GAAGC,IAAI,GACXb,MAAM,gMAACW,IAAI,CAAC,CAACG,OAAO,EAAEC,QAAQ,GAC5BnB,MAAM,gMAACoB,OAAO,CAACH,IAAI,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGA,QAAQ,GAAKR,OAAO,CAACO,OAAO,EAAEC,QAAQ,CAAC,CAAC;KAEtF,CAAC,CACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4413, "column": 0}, "map": {"version":3,"file":"httpMiddleware.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpMiddleware.ts"],"sourcesContent":["import * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { constFalse, dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Layer from \"effect/Layer\"\nimport * as Option from \"effect/Option\"\nimport type * as Predicate from \"effect/Predicate\"\nimport type { ReadonlyRecord } from \"effect/Record\"\nimport * as Headers from \"../Headers.js\"\nimport type * as App from \"../HttpApp.js\"\nimport type * as Middleware from \"../HttpMiddleware.js\"\nimport * as ServerError from \"../HttpServerError.js\"\nimport * as ServerRequest from \"../HttpServerRequest.js\"\nimport * as ServerResponse from \"../HttpServerResponse.js\"\nimport type { HttpServerResponse } from \"../HttpServerResponse.js\"\nimport * as TraceContext from \"../HttpTraceContext.js\"\nimport * as internalHttpApp from \"./httpApp.js\"\n\n/** @internal */\nexport const make = <M extends Middleware.HttpMiddleware>(middleware: M): M => middleware\n\n/** @internal */\nexport const loggerDisabled = globalValue(\n  Symbol.for(\"@effect/platform/HttpMiddleware/loggerDisabled\"),\n  () => FiberRef.unsafeMake(false)\n)\n\n/** @internal */\nexport const withLoggerDisabled = <A, E, R>(self: Effect.Effect<A, E, R>): Effect.Effect<A, E, R> =>\n  Effect.zipRight(\n    FiberRef.set(loggerDisabled, true),\n    self\n  )\n\n/** @internal */\nexport const currentTracerDisabledWhen = globalValue(\n  Symbol.for(\"@effect/platform/HttpMiddleware/tracerDisabledWhen\"),\n  () => FiberRef.unsafeMake<Predicate.Predicate<ServerRequest.HttpServerRequest>>(constFalse)\n)\n\n/** @internal */\nexport const withTracerDisabledWhen = dual<\n  (\n    predicate: Predicate.Predicate<ServerRequest.HttpServerRequest>\n  ) => <A, E, R>(layer: Layer.Layer<A, E, R>) => Layer.Layer<A, E, R>,\n  <A, E, R>(\n    layer: Layer.Layer<A, E, R>,\n    predicate: Predicate.Predicate<ServerRequest.HttpServerRequest>\n  ) => Layer.Layer<A, E, R>\n>(2, (self, pred) => Layer.locally(self, currentTracerDisabledWhen, pred))\n\n/** @internal */\nexport const withTracerDisabledWhenEffect = dual<\n  (\n    predicate: Predicate.Predicate<ServerRequest.HttpServerRequest>\n  ) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(\n    effect: Effect.Effect<A, E, R>,\n    predicate: Predicate.Predicate<ServerRequest.HttpServerRequest>\n  ) => Effect.Effect<A, E, R>\n>(2, (self, pred) => Effect.locally(self, currentTracerDisabledWhen, pred))\n\n/** @internal */\nexport const withTracerDisabledForUrls = dual<\n  (\n    urls: ReadonlyArray<string>\n  ) => <A, E, R>(layer: Layer.Layer<A, E, R>) => Layer.Layer<A, E, R>,\n  <A, E, R>(\n    layer: Layer.Layer<A, E, R>,\n    urls: ReadonlyArray<string>\n  ) => Layer.Layer<A, E, R>\n>(2, (self, urls) => Layer.locally(self, currentTracerDisabledWhen, (req) => urls.includes(req.url)))\n\n/** @internal */\nexport const logger = make((httpApp) => {\n  let counter = 0\n  return Effect.withFiberRuntime((fiber) => {\n    const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n    return Effect.withLogSpan(\n      Effect.flatMap(Effect.exit(httpApp), (exit) => {\n        if (fiber.getFiberRef(loggerDisabled)) {\n          return exit\n        } else if (exit._tag === \"Failure\") {\n          const [response, cause] = ServerError.causeResponseStripped(exit.cause)\n          return Effect.zipRight(\n            Effect.annotateLogs(Effect.log(cause._tag === \"Some\" ? cause.value : \"Sent HTTP Response\"), {\n              \"http.method\": request.method,\n              \"http.url\": request.url,\n              \"http.status\": response.status\n            }),\n            exit\n          )\n        }\n        return Effect.zipRight(\n          Effect.annotateLogs(Effect.log(\"Sent HTTP response\"), {\n            \"http.method\": request.method,\n            \"http.url\": request.url,\n            \"http.status\": exit.value.status\n          }),\n          exit\n        )\n      }),\n      `http.span.${++counter}`\n    )\n  })\n})\n\n/** @internal */\nexport const tracer = make((httpApp) =>\n  Effect.withFiberRuntime((fiber) => {\n    const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n    const disabled = fiber.getFiberRef(currentTracerDisabledWhen)(request)\n    if (disabled) {\n      return httpApp\n    }\n    const url = Option.getOrUndefined(ServerRequest.toURL(request))\n    if (url !== undefined && (url.username !== \"\" || url.password !== \"\")) {\n      url.username = \"REDACTED\"\n      url.password = \"REDACTED\"\n    }\n    const redactedHeaderNames = fiber.getFiberRef(Headers.currentRedactedNames)\n    const redactedHeaders = Headers.redact(request.headers, redactedHeaderNames)\n    return Effect.useSpan(\n      `http.server ${request.method}`,\n      {\n        parent: Option.getOrUndefined(TraceContext.fromHeaders(request.headers)),\n        kind: \"server\",\n        captureStackTrace: false\n      },\n      (span) => {\n        span.attribute(\"http.request.method\", request.method)\n        if (url !== undefined) {\n          span.attribute(\"url.full\", url.toString())\n          span.attribute(\"url.path\", url.pathname)\n          const query = url.search.slice(1)\n          if (query !== \"\") {\n            span.attribute(\"url.query\", url.search.slice(1))\n          }\n          span.attribute(\"url.scheme\", url.protocol.slice(0, -1))\n        }\n        if (request.headers[\"user-agent\"] !== undefined) {\n          span.attribute(\"user_agent.original\", request.headers[\"user-agent\"])\n        }\n        for (const name in redactedHeaders) {\n          span.attribute(`http.request.header.${name}`, String(redactedHeaders[name]))\n        }\n        if (request.remoteAddress._tag === \"Some\") {\n          span.attribute(\"client.address\", request.remoteAddress.value)\n        }\n        return Effect.flatMap(\n          Effect.exit(Effect.withParentSpan(httpApp, span)),\n          (exit) => {\n            const response = ServerError.exitResponse(exit)\n            span.attribute(\"http.response.status_code\", response.status)\n            const redactedHeaders = Headers.redact(response.headers, redactedHeaderNames)\n            for (const name in redactedHeaders) {\n              span.attribute(`http.response.header.${name}`, String(redactedHeaders[name]))\n            }\n            return exit\n          }\n        )\n      }\n    )\n  })\n)\n\n/** @internal */\nexport const xForwardedHeaders = make((httpApp) =>\n  Effect.updateService(httpApp, ServerRequest.HttpServerRequest, (request) =>\n    request.headers[\"x-forwarded-host\"]\n      ? request.modify({\n        headers: Headers.set(\n          request.headers,\n          \"host\",\n          request.headers[\"x-forwarded-host\"]\n        ),\n        remoteAddress: request.headers[\"x-forwarded-for\"]?.split(\",\")[0].trim()\n      })\n      : request)\n)\n\n/** @internal */\nexport const searchParamsParser = <E, R>(httpApp: App.Default<E, R>) =>\n  Effect.withFiberRuntime<\n    HttpServerResponse,\n    E,\n    ServerRequest.HttpServerRequest | Exclude<R, ServerRequest.ParsedSearchParams>\n  >((fiber) => {\n    const context = fiber.currentContext\n    const request = Context.unsafeGet(context, ServerRequest.HttpServerRequest)\n    const params = ServerRequest.searchParamsFromURL(new URL(request.originalUrl))\n    return Effect.locally(\n      httpApp,\n      FiberRef.currentContext,\n      Context.add(context, ServerRequest.ParsedSearchParams, params)\n    ) as any\n  })\n\n/** @internal */\nexport const cors = (options?: {\n  readonly allowedOrigins?: ReadonlyArray<string> | undefined\n  readonly allowedMethods?: ReadonlyArray<string> | undefined\n  readonly allowedHeaders?: ReadonlyArray<string> | undefined\n  readonly exposedHeaders?: ReadonlyArray<string> | undefined\n  readonly maxAge?: number | undefined\n  readonly credentials?: boolean | undefined\n}) => {\n  const opts = {\n    allowedOrigins: [\"*\"],\n    allowedMethods: [\"GET\", \"HEAD\", \"PUT\", \"PATCH\", \"POST\", \"DELETE\"],\n    allowedHeaders: [],\n    exposedHeaders: [],\n    credentials: false,\n    ...options\n  }\n\n  const isAllowedOrigin = (origin: string) => opts.allowedOrigins.includes(origin)\n\n  const allowOrigin = (originHeader: string): ReadonlyRecord<string, string> | undefined => {\n    if (opts.allowedOrigins.length === 0) {\n      return { \"access-control-allow-origin\": \"*\" }\n    }\n\n    if (opts.allowedOrigins.length === 1) {\n      return {\n        \"access-control-allow-origin\": opts.allowedOrigins[0],\n        vary: \"Origin\"\n      }\n    }\n\n    if (isAllowedOrigin(originHeader)) {\n      return {\n        \"access-control-allow-origin\": originHeader,\n        vary: \"Origin\"\n      }\n    }\n\n    return undefined\n  }\n\n  const allowMethods = opts.allowedMethods.length > 0\n    ? { \"access-control-allow-methods\": opts.allowedMethods.join(\", \") }\n    : undefined\n\n  const allowCredentials = opts.credentials\n    ? { \"access-control-allow-credentials\": \"true\" }\n    : undefined\n\n  const allowHeaders = (\n    accessControlRequestHeaders: string | undefined\n  ): ReadonlyRecord<string, string> | undefined => {\n    if (opts.allowedHeaders.length === 0 && accessControlRequestHeaders) {\n      return {\n        vary: \"Access-Control-Request-Headers\",\n        \"access-control-allow-headers\": accessControlRequestHeaders\n      }\n    }\n\n    if (opts.allowedHeaders) {\n      return {\n        \"access-control-allow-headers\": opts.allowedHeaders.join(\",\")\n      }\n    }\n\n    return undefined\n  }\n\n  const exposeHeaders = opts.exposedHeaders.length > 0\n    ? { \"access-control-expose-headers\": opts.exposedHeaders.join(\",\") }\n    : undefined\n\n  const maxAge = opts.maxAge\n    ? { \"access-control-max-age\": opts.maxAge.toString() }\n    : undefined\n\n  const headersFromRequest = (request: ServerRequest.HttpServerRequest) => {\n    const origin = request.headers[\"origin\"]\n    return Headers.unsafeFromRecord({\n      ...allowOrigin(origin),\n      ...allowCredentials,\n      ...exposeHeaders\n    })\n  }\n\n  const headersFromRequestOptions = (request: ServerRequest.HttpServerRequest) => {\n    const origin = request.headers[\"origin\"]\n    const accessControlRequestHeaders = request.headers[\"access-control-request-headers\"]\n    return Headers.unsafeFromRecord({\n      ...allowOrigin(origin),\n      ...allowCredentials,\n      ...exposeHeaders,\n      ...allowMethods,\n      ...allowHeaders(accessControlRequestHeaders),\n      ...maxAge\n    })\n  }\n\n  const preResponseHandler = (request: ServerRequest.HttpServerRequest, response: HttpServerResponse) =>\n    Effect.succeed(ServerResponse.setHeaders(response, headersFromRequest(request)))\n\n  return <E, R>(httpApp: App.Default<E, R>): App.Default<E, R> =>\n    Effect.withFiberRuntime((fiber) => {\n      const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n      if (request.method === \"OPTIONS\") {\n        return Effect.succeed(ServerResponse.empty({\n          status: 204,\n          headers: headersFromRequestOptions(request)\n        }))\n      }\n      return Effect.zipRight(internalHttpApp.appendPreResponseHandler(preResponseHandler), httpApp)\n    })\n}\n"],"names":["Context","Effect","FiberRef","constFalse","dual","globalValue","Layer","Option","Headers","ServerError","ServerRequest","ServerResponse","TraceContext","internalHttpApp","make","middleware","loggerDisabled","Symbol","for","unsafeMake","withLoggerDisabled","self","zipRight","set","currentTracerDisabledWhen","withTracerDisabledWhen","pred","locally","withTracerDisabledWhenEffect","withTracerDisabledForUrls","urls","req","includes","url","logger","httpApp","counter","withFiberRuntime","fiber","request","unsafeGet","currentContext","HttpServerRequest","withLogSpan","flatMap","exit","getFiberRef","_tag","response","cause","causeResponseStripped","annotateLogs","log","value","method","status","tracer","disabled","getOrUndefined","toURL","undefined","username","password","redactedHeaderNames","currentRedactedNames","redactedHeaders","redact","headers","useSpan","parent","fromHeaders","kind","captureStackTrace","span","attribute","toString","pathname","query","search","slice","protocol","name","String","remoteAddress","withParentSpan","exitResponse","xForwardedHeaders","updateService","modify","split","trim","searchParamsParser","context","params","searchParamsFromURL","URL","originalUrl","add","ParsedSearchParams","cors","options","opts","allowedOrigins","allowedMethods","allowedHeaders","exposedHeaders","credentials","isAllowedOrigin","origin","allowOrigin","originHeader","length","vary","allowMethods","join","allowCredentials","allowHeaders","accessControlRequestHeaders","exposeHeaders","maxAge","headersFromRequest","unsafeFromRecord","headersFromRequestOptions","preResponseHandler","succeed","setHeaders","empty","appendPreResponseHandler"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4638, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4644, "column": 0}, "map": {"version":3,"file":"HttpApp.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpApp.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as Exit from \"effect/Exit\"\nimport type * as FiberRef from \"effect/FiberRef\"\nimport * as Layer from \"effect/Layer\"\nimport type * as Option from \"effect/Option\"\nimport * as Runtime from \"effect/Runtime\"\nimport * as Scope from \"effect/Scope\"\nimport { unify } from \"effect/Unify\"\nimport type { HttpMiddleware } from \"./HttpMiddleware.js\"\nimport * as ServerError from \"./HttpServerError.js\"\nimport * as ServerRequest from \"./HttpServerRequest.js\"\nimport * as ServerResponse from \"./HttpServerResponse.js\"\nimport * as internal from \"./internal/httpApp.js\"\nimport * as internalMiddleware from \"./internal/httpMiddleware.js\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type HttpApp<A = ServerResponse.HttpServerResponse, E = never, R = never> = Effect.Effect<\n  A,\n  E,\n  R | ServerRequest.HttpServerRequest\n>\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Default<E = never, R = never> = HttpApp<ServerResponse.HttpServerResponse, E, R>\n\nconst handledSymbol = Symbol.for(\"@effect/platform/HttpApp/handled\")\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toHandled = <E, R, _, EH, RH>(\n  self: Default<E, R>,\n  handleResponse: (\n    request: ServerRequest.HttpServerRequest,\n    response: ServerResponse.HttpServerResponse\n  ) => Effect.Effect<_, EH, RH>,\n  middleware?: HttpMiddleware | undefined\n): Effect.Effect<void, never, Exclude<R | RH | ServerRequest.HttpServerRequest, Scope.Scope>> => {\n  const responded = Effect.withFiberRuntime<\n    ServerResponse.HttpServerResponse,\n    E | EH | ServerError.ResponseError,\n    R | RH | ServerRequest.HttpServerRequest\n  >((fiber) =>\n    Effect.flatMap(self, (response) => {\n      const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n      const handler = fiber.getFiberRef(currentPreResponseHandlers)\n      if (handler._tag === \"None\") {\n        ;(request as any)[handledSymbol] = true\n        return Effect.as(handleResponse(request, response), response)\n      }\n      return Effect.tap(handler.value(request, response), (response) => {\n        ;(request as any)[handledSymbol] = true\n        return handleResponse(request, response)\n      })\n    })\n  )\n\n  const withErrorHandling = Effect.catchAllCause(\n    responded,\n    (cause) =>\n      Effect.withFiberRuntime<\n        ServerResponse.HttpServerResponse,\n        E | EH | ServerError.ResponseError,\n        ServerRequest.HttpServerRequest | RH\n      >((fiber) =>\n        Effect.flatMap(ServerError.causeResponse(cause), ([response, cause]) => {\n          const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n          const handler = fiber.getFiberRef(currentPreResponseHandlers)\n          if (handler._tag === \"None\") {\n            ;(request as any)[handledSymbol] = true\n            return Effect.zipRight(handleResponse(request, response), Effect.failCause(cause))\n          }\n          return Effect.zipRight(\n            Effect.tap(handler.value(request, response), (response) => {\n              ;(request as any)[handledSymbol] = true\n              return handleResponse(request, response)\n            }),\n            Effect.failCause(cause)\n          )\n        })\n      )\n  )\n\n  const withMiddleware = unify(\n    middleware === undefined ?\n      internalMiddleware.tracer(withErrorHandling) :\n      Effect.matchCauseEffect(middleware(internalMiddleware.tracer(withErrorHandling)), {\n        onFailure: (cause): Effect.Effect<void, EH, RH> =>\n          Effect.withFiberRuntime((fiber) => {\n            const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n            if (handledSymbol in request) {\n              return Effect.void\n            }\n            return Effect.matchCauseEffect(ServerError.causeResponse(cause), {\n              onFailure: (_cause) => handleResponse(request, ServerResponse.empty({ status: 500 })),\n              onSuccess: ([response]) => handleResponse(request, response)\n            })\n          }),\n        onSuccess: (response): Effect.Effect<void, EH, RH> =>\n          Effect.withFiberRuntime((fiber) => {\n            const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n            return handledSymbol in request ? Effect.void : handleResponse(request, response)\n          })\n      })\n  )\n\n  return Effect.uninterruptible(Effect.scoped(withMiddleware)) as any\n}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type PreResponseHandler = (\n  request: ServerRequest.HttpServerRequest,\n  response: ServerResponse.HttpServerResponse\n) => Effect.Effect<ServerResponse.HttpServerResponse, ServerError.ResponseError>\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const currentPreResponseHandlers: FiberRef.FiberRef<Option.Option<PreResponseHandler>> =\n  internal.currentPreResponseHandlers\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const appendPreResponseHandler: (handler: PreResponseHandler) => Effect.Effect<void> =\n  internal.appendPreResponseHandler\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withPreResponseHandler = internal.withPreResponseHandler\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toWebHandlerRuntime = <R>(runtime: Runtime.Runtime<R>) => {\n  const run = Runtime.runFork(runtime)\n  return <E>(self: Default<E, R | Scope.Scope>, middleware?: HttpMiddleware | undefined) => {\n    const resolveSymbol = Symbol.for(\"@effect/platform/HttpApp/resolve\")\n    const httpApp = toHandled(self, (request, response) => {\n      ;(request as any)[resolveSymbol](\n        ServerResponse.toWeb(response, { withoutBody: request.method === \"HEAD\", runtime })\n      )\n      return Effect.void\n    }, middleware)\n    return (request: Request): Promise<Response> =>\n      new Promise((resolve) => {\n        const httpServerRequest = ServerRequest.fromWeb(request)\n        ;(httpServerRequest as any)[resolveSymbol] = resolve\n        const fiber = run(Effect.provideService(httpApp, ServerRequest.HttpServerRequest, httpServerRequest))\n        request.signal?.addEventListener(\"abort\", () => {\n          fiber.unsafeInterruptAsFork(ServerError.clientAbortFiberId)\n        }, { once: true })\n      })\n  }\n}\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toWebHandler: <E>(\n  self: Default<E, Scope.Scope>,\n  middleware?: HttpMiddleware | undefined\n) => (request: Request) => Promise<Response> = toWebHandlerRuntime(Runtime.defaultRuntime)\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toWebHandlerLayer = <E, R, RE>(\n  self: Default<E, R | Scope.Scope>,\n  layer: Layer.Layer<R, RE>,\n  middleware?: HttpMiddleware | undefined\n): {\n  readonly close: () => Promise<void>\n  readonly handler: (request: Request) => Promise<Response>\n} => {\n  const scope = Effect.runSync(Scope.make())\n  const close = () => Effect.runPromise(Scope.close(scope, Exit.void))\n  const build = Effect.map(Layer.toRuntime(layer), (_) => toWebHandlerRuntime(_)(self, middleware))\n  const runner = Effect.runPromise(Scope.extend(build, scope))\n  const handler = (request: Request): Promise<Response> => runner.then((handler) => handler(request))\n  return { close, handler } as const\n}\n"],"names":["Context","Effect","Exit","Layer","Runtime","Scope","unify","ServerError","ServerRequest","ServerResponse","internal","internalMiddleware","handledSymbol","Symbol","for","toHandled","self","handleResponse","middleware","responded","withFiberRuntime","fiber","flatMap","response","request","unsafeGet","currentContext","HttpServerRequest","handler","getFiberRef","currentPreResponseHandlers","_tag","as","tap","value","withErrorHandling","catchAllCause","cause","causeResponse","zipRight","failCause","withMiddleware","undefined","tracer","matchCauseEffect","onFailure","void","_cause","empty","status","onSuccess","uninterruptible","scoped","appendPreResponseHandler","withPreResponseHandler","toWebHandlerRuntime","runtime","run","runFork","resolveSymbol","httpApp","toWeb","withoutBody","method","Promise","resolve","httpServerRequest","fromWeb","provideService","signal","addEventListener","unsafeInterruptAsFork","clientAbortFiberId","once","toWebHandler","defaultRuntime","toWebHandlerLayer","layer","scope","runSync","make","close","runPromise","build","map","toRuntime","_","runner","extend","then"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4804, "column": 0}, "map": {"version":3,"file":"httpRouter.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/internal/httpRouter.ts"],"sourcesContent":["import type * as Cause from \"effect/Cause\"\nimport * as Chunk from \"effect/Chunk\"\nimport * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as Effectable from \"effect/Effectable\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Layer from \"effect/Layer\"\nimport * as Option from \"effect/Option\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport * as Tracer from \"effect/Tracer\"\nimport type { Mutable } from \"effect/Types\"\nimport * as FindMyWay from \"find-my-way-ts\"\nimport type * as App from \"../HttpApp.js\"\nimport type * as Method from \"../HttpMethod.js\"\nimport type * as Router from \"../HttpRouter.js\"\nimport * as Error from \"../HttpServerError.js\"\nimport * as ServerRequest from \"../HttpServerRequest.js\"\nimport * as Respondable from \"../HttpServerRespondable.js\"\nimport type * as ServerResponse from \"../HttpServerResponse.js\"\n\n/** @internal */\nexport const TypeId: Router.TypeId = Symbol.for(\"@effect/platform/HttpRouter\") as Router.TypeId\n\n/** @internal */\nexport const RouteTypeId: Router.RouteTypeId = Symbol.for(\"@effect/platform/HttpRouter/Route\") as Router.RouteTypeId\n\n/** @internal */\nexport const RouteContextTypeId: Router.RouteContextTypeId = Symbol.for(\n  \"@effect/platform/HttpRouter/RouteContext\"\n) as Router.RouteContextTypeId\n\n/** @internal */\nexport const RouteContext = Context.GenericTag<Router.RouteContext>(\"@effect/platform/HttpRouter/RouteContext\")\n\nconst isRouter = (u: unknown): u is Router.HttpRouter<unknown, unknown> => Predicate.hasProperty(u, TypeId)\n\n/** @internal */\nexport const params = Effect.map(RouteContext, (_) => _.params)\n\n/** @internal */\nexport const schemaJson = <\n  R,\n  I extends Partial<{\n    readonly method: Method.HttpMethod\n    readonly url: string\n    readonly cookies: Readonly<Record<string, string | undefined>>\n    readonly headers: Readonly<Record<string, string | undefined>>\n    readonly pathParams: Readonly<Record<string, string | undefined>>\n    readonly searchParams: Readonly<Record<string, string | ReadonlyArray<string> | undefined>>\n    readonly body: any\n  }>,\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(\n    Effect.context<ServerRequest.HttpServerRequest | ServerRequest.ParsedSearchParams | Router.RouteContext>(),\n    (context) => {\n      const request = Context.get(context, ServerRequest.HttpServerRequest)\n      const searchParams = Context.get(context, ServerRequest.ParsedSearchParams)\n      const routeContext = Context.get(context, RouteContext)\n      return Effect.flatMap(request.json, (body) =>\n        parse({\n          method: request.method,\n          url: request.url,\n          headers: request.headers,\n          cookies: request.cookies,\n          pathParams: routeContext.params,\n          searchParams,\n          body\n        }))\n    }\n  )\n}\n\n/** @internal */\nexport const schemaNoBody = <\n  R,\n  I extends Partial<{\n    readonly method: Method.HttpMethod\n    readonly url: string\n    readonly cookies: Readonly<Record<string, string | undefined>>\n    readonly headers: Readonly<Record<string, string | undefined>>\n    readonly pathParams: Readonly<Record<string, string | undefined>>\n    readonly searchParams: Readonly<Record<string, string | ReadonlyArray<string> | undefined>>\n  }>,\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(\n    Effect.context<ServerRequest.HttpServerRequest | ServerRequest.ParsedSearchParams | Router.RouteContext>(),\n    (context) => {\n      const request = Context.get(context, ServerRequest.HttpServerRequest)\n      const searchParams = Context.get(context, ServerRequest.ParsedSearchParams)\n      const routeContext = Context.get(context, RouteContext)\n      return parse({\n        method: request.method,\n        url: request.url,\n        headers: request.headers,\n        cookies: request.cookies,\n        pathParams: routeContext.params,\n        searchParams\n      })\n    }\n  )\n}\n\n/** @internal */\nexport const schemaParams = <A, I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(\n    Effect.context<ServerRequest.ParsedSearchParams | Router.RouteContext>(),\n    (context) => {\n      const searchParams = Context.get(context, ServerRequest.ParsedSearchParams)\n      const routeContext = Context.get(context, RouteContext)\n      return parse({ ...searchParams, ...routeContext.params })\n    }\n  )\n}\n\n/** @internal */\nexport const schemaPathParams = <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(RouteContext, (_) => parse(_.params))\n}\n\n/** @internal */\nexport const currentRouterConfig = globalValue(\n  \"@effect/platform/HttpRouter/currentRouterConfig\",\n  () => FiberRef.unsafeMake<Partial<FindMyWay.RouterConfig>>({})\n)\n\n/** @internal */\nexport const withRouterConfig: {\n  (config: Partial<FindMyWay.RouterConfig>): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  <A, E, R>(effect: Effect.Effect<A, E, R>, config: Partial<FindMyWay.RouterConfig>): Effect.Effect<A, E, R>\n} = dual(\n  2,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, config: Partial<FindMyWay.RouterConfig>): Effect.Effect<A, E, R> =>\n    Effect.locally(effect, currentRouterConfig, config)\n)\n\n/** @internal */\nexport const setRouterConfig = (config: Partial<FindMyWay.RouterConfig>) =>\n  Layer.locallyScoped(currentRouterConfig, config)\n\nclass RouterImpl<E = never, R = never> extends Effectable.StructuralClass<\n  ServerResponse.HttpServerResponse,\n  E | Error.RouteNotFound,\n  Exclude<R, Router.RouteContext>\n> implements Router.HttpRouter<E, R> {\n  readonly [TypeId]: Router.TypeId\n  constructor(\n    readonly routes: Chunk.Chunk<Router.Route<E, R>>,\n    readonly mounts: Chunk.Chunk<\n      readonly [\n        prefix: string,\n        httpApp: App.Default<E, R>,\n        options?: { readonly includePrefix?: boolean | undefined } | undefined\n      ]\n    >\n  ) {\n    super()\n    this[TypeId] = TypeId\n    this.httpApp = FiberRef.get(currentRouterConfig).pipe(\n      Effect.flatMap((config) => this.httpApp = toHttpApp(this, config) as any)\n    ) as any\n  }\n  private httpApp: Effect.Effect<\n    ServerResponse.HttpServerResponse,\n    E | Error.RouteNotFound,\n    Exclude<R, Router.RouteContext>\n  >\n  commit() {\n    return this.httpApp\n  }\n  toJSON() {\n    return {\n      _id: \"Router\",\n      routes: this.routes.toJSON(),\n      mounts: this.mounts.toJSON()\n    }\n  }\n  toString() {\n    return Inspectable.format(this)\n  }\n  [Inspectable.NodeInspectSymbol]() {\n    return this.toJSON()\n  }\n}\n\nconst toHttpApp = <E, R>(\n  self: Router.HttpRouter<E, R>,\n  config: Partial<FindMyWay.RouterConfig>\n): App.Default<E | Error.RouteNotFound, R> => {\n  const router = FindMyWay.make<Router.Route<E, R>>(config)\n  const mounts = Chunk.toReadonlyArray(self.mounts).map(([path, app, options]) =>\n    [\n      path,\n      new RouteContextImpl(\n        new RouteImpl(\n          \"*\",\n          options?.includePrefix ? `${path}/*` as Router.PathInput : \"/*\",\n          app,\n          options?.includePrefix ? Option.none() : Option.some(path),\n          false\n        ),\n        {}\n      ),\n      options\n    ] as const\n  )\n  const mountsLen = mounts.length\n  Chunk.forEach(self.routes, (route) => {\n    if (route.method === \"*\") {\n      router.all(route.path, route)\n    } else {\n      router.on(route.method, route.path, route)\n    }\n  })\n  return Effect.withFiberRuntime<\n    ServerResponse.HttpServerResponse,\n    E | Error.RouteNotFound,\n    R | ServerRequest.HttpServerRequest\n  >((fiber) => {\n    const context = Context.unsafeMake(new Map(fiber.getFiberRef(FiberRef.currentContext).unsafeMap))\n    const request = Context.unsafeGet(context, ServerRequest.HttpServerRequest)\n    if (mountsLen > 0) {\n      for (let i = 0; i < mountsLen; i++) {\n        const [path, routeContext, options] = mounts[i]\n        if (request.url.startsWith(path)) {\n          context.unsafeMap.set(RouteContext.key, routeContext)\n          if (options?.includePrefix !== true) {\n            context.unsafeMap.set(ServerRequest.HttpServerRequest.key, sliceRequestUrl(request, path))\n          }\n          return Effect.locally(\n            Effect.flatMap(routeContext.route.handler, Respondable.toResponse) as App.Default<E, R>,\n            FiberRef.currentContext,\n            context\n          )\n        }\n      }\n    }\n\n    let result = router.find(request.method, request.url)\n    if (result === undefined && request.method === \"HEAD\") {\n      result = router.find(\"GET\", request.url)\n    }\n    if (result === undefined) {\n      return Effect.fail(new Error.RouteNotFound({ request }))\n    }\n    const route = result.handler\n    if (route.prefix._tag === \"Some\") {\n      context.unsafeMap.set(ServerRequest.HttpServerRequest.key, sliceRequestUrl(request, route.prefix.value))\n    }\n    context.unsafeMap.set(ServerRequest.ParsedSearchParams.key, result.searchParams)\n    context.unsafeMap.set(RouteContext.key, new RouteContextImpl(route, result.params))\n\n    const span = Context.getOption(context, Tracer.ParentSpan)\n    if (span._tag === \"Some\" && span.value._tag === \"Span\") {\n      span.value.attribute(\"http.route\", route.path)\n    }\n\n    const handlerResponse = Effect.flatMap(route.handler, Respondable.toResponse)\n    return Effect.locally(\n      (route.uninterruptible ?\n        handlerResponse :\n        Effect.interruptible(handlerResponse)) as Effect.Effect<\n          ServerResponse.HttpServerResponse,\n          E,\n          Router.HttpRouter.ExcludeProvided<R>\n        >,\n      FiberRef.currentContext,\n      context\n    )\n  })\n}\n\nfunction sliceRequestUrl(request: ServerRequest.HttpServerRequest, prefix: string) {\n  const prefexLen = prefix.length\n  return request.modify({ url: request.url.length <= prefexLen ? \"/\" : request.url.slice(prefexLen) })\n}\n\nclass RouteImpl<E = never, R = never> extends Inspectable.Class implements Router.Route<E, R> {\n  readonly [RouteTypeId]: Router.RouteTypeId\n  constructor(\n    readonly method: Method.HttpMethod | \"*\",\n    readonly path: Router.PathInput,\n    readonly handler: Router.Route.Handler<E, R>,\n    readonly prefix = Option.none<string>(),\n    readonly uninterruptible = false\n  ) {\n    super()\n    this[RouteTypeId] = RouteTypeId\n  }\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/HttpRouter/Route\",\n      method: this.method,\n      path: this.path,\n      prefix: this.prefix.toJSON()\n    }\n  }\n}\n\nclass RouteContextImpl implements Router.RouteContext {\n  readonly [RouteContextTypeId]: Router.RouteContextTypeId\n  constructor(\n    readonly route: Router.Route<unknown, unknown>,\n    readonly params: Readonly<Record<string, string | undefined>>\n  ) {\n    this[RouteContextTypeId] = RouteContextTypeId\n  }\n}\n\n/** @internal */\nexport const empty: Router.HttpRouter<never> = new RouterImpl(Chunk.empty(), Chunk.empty())\n\n/** @internal */\nexport const fromIterable = <R extends Router.Route<any, any>>(\n  routes: Iterable<R>\n): Router.HttpRouter<\n  R extends Router.Route<infer E, infer _> ? E : never,\n  R extends Router.Route<infer _, infer Env> ? Env : never\n> => new RouterImpl(Chunk.fromIterable(routes), Chunk.empty()) as any\n\n/** @internal */\nexport const makeRoute = <E, R>(\n  method: Method.HttpMethod,\n  path: Router.PathInput,\n  handler: Router.Route.Handler<E, R>,\n  options?: {\n    readonly prefix?: string | undefined\n    readonly uninterruptible?: boolean | undefined\n  } | undefined\n): Router.Route<E, Router.HttpRouter.ExcludeProvided<R>> =>\n  new RouteImpl(\n    method,\n    path,\n    handler,\n    options?.prefix ? Option.some(options.prefix) : Option.none(),\n    options?.uninterruptible ?? false\n  ) as any\n\n/** @internal */\nexport const append = dual<\n  <R1, E1>(\n    route: Router.Route<E1, R1>\n  ) => <E, R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>,\n  <E, R, E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    route: Router.Route<E1, R1>\n  ) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>\n>(2, (self, route) => new RouterImpl(Chunk.append(self.routes, route) as any, self.mounts))\n\n/** @internal */\nexport const concat = dual<\n  <R1, E1>(\n    that: Router.HttpRouter<E1, R1>\n  ) => <E, R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E | E1, R | R1>,\n  <E, R, E1, R1>(self: Router.HttpRouter<E, R>, that: Router.HttpRouter<E1, R1>) => Router.HttpRouter<E | E1, R | R1>\n>(2, (self, that) => concatAll(self, that))\n\n/** @internal */\nexport const concatAll = <Routers extends ReadonlyArray<Router.HttpRouter<E, R>>, E, R>(\n  ...routers: Routers\n) =>\n  new RouterImpl(\n    routers.reduce((cur, acc) => Chunk.appendAll(cur, acc.routes), Chunk.empty<Router.Route<E, R>>()),\n    routers.reduce(\n      (cur, acc) => Chunk.appendAll(cur, acc.mounts),\n      Chunk.empty<\n        readonly [\n          prefix: string,\n          httpApp: App.Default<E, R>,\n          options?: { readonly includePrefix?: boolean | undefined } | undefined\n        ]\n      >()\n    )\n  ) as any\n\nconst removeTrailingSlash = (\n  path: Router.PathInput\n): Router.PathInput => (path.endsWith(\"/\") ? path.slice(0, -1) : path) as any\n\n/** @internal */\nexport const prefixPath: {\n  (prefix: string): (self: string) => string\n  (self: string, prefix: string): string\n} = dual(2, (self, prefix) => {\n  prefix = removeTrailingSlash(prefix)\n  return self === \"/\" ? prefix : prefix + self\n})\n\n/** @internal */\nexport const prefixAll = dual<\n  (prefix: Router.PathInput) => <E, R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E, R>,\n  <E, R>(self: Router.HttpRouter<E, R>, prefix: Router.PathInput) => Router.HttpRouter<E, R>\n>(\n  2,\n  (self, prefix) => {\n    prefix = removeTrailingSlash(prefix)\n    return new RouterImpl(\n      Chunk.map(self.routes, (route) =>\n        new RouteImpl(\n          route.method,\n          route.path === \"/\" ? prefix : prefix + route.path as Router.PathInput,\n          route.handler,\n          Option.orElse(\n            Option.map(route.prefix, (_) => prefix + _),\n            () => Option.some(prefix)\n          ),\n          route.uninterruptible\n        )),\n      Chunk.map(self.mounts, ([path, app]) => [path === \"/\" ? prefix : prefix + path, app])\n    )\n  }\n)\n\n/** @internal */\nexport const mount = dual<\n  <R1, E1>(\n    path: `/${string}`,\n    that: Router.HttpRouter<E1, R1>\n  ) => <E, R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E | E1, R | R1>,\n  <E, R, E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    path: `/${string}`,\n    that: Router.HttpRouter<E1, R1>\n  ) => Router.HttpRouter<E | E1, R | R1>\n>(\n  3,\n  (self, path, that) => concat(self, prefixAll(that, path))\n)\n\n/** @internal */\nexport const mountApp = dual<\n  <R1, E1>(\n    path: `/${string}`,\n    that: App.Default<E1, R1>,\n    options?: {\n      readonly includePrefix?: boolean | undefined\n    } | undefined\n  ) => <E, R>(\n    self: Router.HttpRouter<E, R>\n  ) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>,\n  <E, R, E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    path: `/${string}`,\n    that: App.Default<E1, R1>,\n    options?: {\n      readonly includePrefix?: boolean | undefined\n    } | undefined\n  ) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>\n>(\n  (args) => Predicate.hasProperty(args[0], TypeId),\n  <E, R, E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    path: `/${string}`,\n    that: App.Default<E1, R1>,\n    options?: {\n      readonly includePrefix?: boolean | undefined\n    } | undefined\n  ): Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>> =>\n    new RouterImpl<any, any>(self.routes, Chunk.append(self.mounts, [removeTrailingSlash(path), that, options])) as any\n)\n\n/** @internal */\nexport const route = (method: Method.HttpMethod | \"*\"): {\n  <R1, E1>(\n    path: Router.PathInput,\n    handler: Router.Route.Handler<E1, R1>,\n    options?: {\n      readonly uninterruptible?: boolean | undefined\n    } | undefined\n  ): <E, R>(\n    self: Router.HttpRouter<E, R>\n  ) => Router.HttpRouter<E1 | E, R | Router.HttpRouter.ExcludeProvided<R1>>\n  <E, R, E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    path: Router.PathInput,\n    handler: Router.Route.Handler<E1, R1>,\n    options?: {\n      readonly uninterruptible?: boolean | undefined\n    } | undefined\n  ): Router.HttpRouter<E1 | E, R | Router.HttpRouter.ExcludeProvided<R1>>\n} =>\n  dual<\n    <R1, E1>(\n      path: Router.PathInput,\n      handler: Router.Route.Handler<R1, E1>\n    ) => <E, R>(\n      self: Router.HttpRouter<E, R>\n    ) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>,\n    <E, R, E1, R1>(\n      self: Router.HttpRouter<E, R>,\n      path: Router.PathInput,\n      handler: Router.Route.Handler<E1, R1>,\n      options?: {\n        readonly uninterruptible?: boolean | undefined\n      } | undefined\n    ) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>\n  >((args) => isRouter(args[0]), (self, path, handler, options) =>\n    new RouterImpl<any, any>(\n      Chunk.append(\n        self.routes,\n        new RouteImpl(\n          method,\n          path,\n          handler,\n          Option.none(),\n          options?.uninterruptible ?? false\n        )\n      ),\n      self.mounts\n    ))\n\n/** @internal */\nexport const all = route(\"*\")\n\n/** @internal */\nexport const get = route(\"GET\")\n\n/** @internal */\nexport const post = route(\"POST\")\n\n/** @internal */\nexport const put = route(\"PUT\")\n\n/** @internal */\nexport const patch = route(\"PATCH\")\n\n/** @internal */\nexport const del = route(\"DELETE\")\n\n/** @internal */\nexport const head = route(\"HEAD\")\n\n/** @internal */\nexport const options = route(\"OPTIONS\")\n\n/** @internal */\nexport const use = dual<\n  <E, R, R1, E1>(\n    f: (self: Router.Route.Middleware<E, R>) => App.Default<E1, R1>\n  ) => (self: Router.HttpRouter<E, R>) => Router.HttpRouter<E1, Router.HttpRouter.ExcludeProvided<R1>>,\n  <E, R, R1, E1>(\n    self: Router.HttpRouter<E, R>,\n    f: (self: Router.Route.Middleware<E, R>) => App.Default<E1, R1>\n  ) => Router.HttpRouter<E1, Router.HttpRouter.ExcludeProvided<R1>>\n>(2, (self, f) =>\n  new RouterImpl<any, any>(\n    Chunk.map(\n      self.routes,\n      (route) =>\n        new RouteImpl(\n          route.method,\n          route.path,\n          f(Effect.flatMap(route.handler, Respondable.toResponse)) as any,\n          route.prefix,\n          route.uninterruptible\n        )\n    ),\n    Chunk.map(\n      self.mounts,\n      ([path, app]) => [path, f(app as any)]\n    )\n  ))\n\n/** @internal */\nexport const transform = dual<\n  <E, R, R1, E1>(\n    f: (self: Router.Route.Handler<E, R>) => App.HttpApp<Respondable.Respondable, E1, R1>\n  ) => (self: Router.HttpRouter<E, R>) => Router.HttpRouter<E1, Router.HttpRouter.ExcludeProvided<R1>>,\n  <E, R, R1, E1>(\n    self: Router.HttpRouter<E, R>,\n    f: (self: Router.Route.Handler<E, R>) => App.HttpApp<Respondable.Respondable, E1, R1>\n  ) => Router.HttpRouter<E1, Router.HttpRouter.ExcludeProvided<R1>>\n>(2, (self, f) =>\n  new RouterImpl<any, any>(\n    Chunk.map(\n      self.routes,\n      (route) =>\n        new RouteImpl(\n          route.method,\n          route.path,\n          f(route.handler) as any,\n          route.prefix,\n          route.uninterruptible\n        )\n    ),\n    Chunk.map(\n      self.mounts,\n      ([path, app]) => [path, Effect.flatMap(f(app as any), Respondable.toResponse)]\n    )\n  ))\n\n/** @internal */\nexport const catchAll = dual<\n  <E, E2, R2>(\n    f: (e: E) => Router.Route.Handler<E2, R2>\n  ) => <R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E2, R | Router.HttpRouter.ExcludeProvided<R2>>,\n  <E, R, E2, R2>(\n    self: Router.HttpRouter<E, R>,\n    f: (e: E) => Router.Route.Handler<E2, R2>\n  ) => Router.HttpRouter<E2, R | Router.HttpRouter.ExcludeProvided<R2>>\n>(2, (self, f) => transform(self, Effect.catchAll(f)))\n\n/** @internal */\nexport const catchAllCause = dual<\n  <E, E2, R2>(\n    f: (e: Cause.Cause<E>) => Router.Route.Handler<E2, R2>\n  ) => <R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E2, R | Router.HttpRouter.ExcludeProvided<R2>>,\n  <E, R, E2, R2>(\n    self: Router.HttpRouter<E, R>,\n    f: (e: Cause.Cause<E>) => Router.Route.Handler<E2, R2>\n  ) => Router.HttpRouter<E2, R | Router.HttpRouter.ExcludeProvided<R2>>\n>(2, (self, f) => transform(self, Effect.catchAllCause(f)))\n\n/** @internal */\nexport const catchTag = dual<\n  <K extends (E extends { _tag: string } ? E[\"_tag\"] : never), E, E1, R1>(\n    k: K,\n    f: (e: Extract<E, { _tag: K }>) => Router.Route.Handler<E1, R1>\n  ) => <R>(\n    self: Router.HttpRouter<E, R>\n  ) => Router.HttpRouter<Exclude<E, { _tag: K }> | E1, R | Router.HttpRouter.ExcludeProvided<R1>>,\n  <E, R, K extends (E extends { _tag: string } ? E[\"_tag\"] : never), E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    k: K,\n    f: (e: Extract<E, { _tag: K }>) => Router.Route.Handler<E1, R1>\n  ) => Router.HttpRouter<Exclude<E, { _tag: K }> | E1, R | Router.HttpRouter.ExcludeProvided<R1>>\n>(3, (self, k, f) => transform(self, Effect.catchTag(k, f)))\n\n/** @internal */\nexport const catchTags: {\n  <\n    E,\n    Cases extends (E extends { _tag: string } ? {\n        [K in E[\"_tag\"]]+?: (error: Extract<E, { _tag: K }>) => Router.Route.Handler<any, any>\n      } :\n      {})\n  >(\n    cases: Cases\n  ): <R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends ((...args: Array<any>) => Effect.Effect<any, infer E, any>) ? E : never\n    }[keyof Cases],\n    | R\n    | Router.HttpRouter.ExcludeProvided<\n      {\n        [K in keyof Cases]: Cases[K] extends ((...args: Array<any>) => Effect.Effect<any, any, infer R>) ? R : never\n      }[keyof Cases]\n    >\n  >\n  <\n    R,\n    E,\n    Cases extends (E extends { _tag: string } ? {\n        [K in E[\"_tag\"]]+?: (error: Extract<E, { _tag: K }>) => Router.Route.Handler<any, any>\n      } :\n      {})\n  >(\n    self: Router.HttpRouter<E, R>,\n    cases: Cases\n  ): Router.HttpRouter<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends ((...args: Array<any>) => Effect.Effect<any, infer E, any>) ? E : never\n    }[keyof Cases],\n    | R\n    | Router.HttpRouter.ExcludeProvided<\n      {\n        [K in keyof Cases]: Cases[K] extends ((...args: Array<any>) => Effect.Effect<any, any, infer R>) ? R : never\n      }[keyof Cases]\n    >\n  >\n} = dual(2, (self: Router.HttpRouter<any, any>, cases: {}) => use(self, Effect.catchTags(cases)))\n\nexport const provideService = dual<\n  <T extends Context.Tag<any, any>>(\n    tag: T,\n    service: Context.Tag.Service<T>\n  ) => <E, R>(\n    self: Router.HttpRouter<E, R>\n  ) => Router.HttpRouter<E, Exclude<R, Context.Tag.Identifier<T>>>,\n  <E, R, T extends Context.Tag<any, any>>(\n    self: Router.HttpRouter<E, R>,\n    tag: T,\n    service: Context.Tag.Service<T>\n  ) => Router.HttpRouter<E, Exclude<R, Context.Tag.Identifier<T>>>\n>(3, <E, R, T extends Context.Tag<any, any>>(\n  self: Router.HttpRouter<E, R>,\n  tag: T,\n  service: Context.Tag.Service<T>\n): Router.HttpRouter<E, Exclude<R, Context.Tag.Identifier<T>>> => use(self, Effect.provideService(tag, service)))\n\n/* @internal */\nexport const provideServiceEffect = dual<\n  <T extends Context.Tag<any, any>, R1, E1>(\n    tag: T,\n    effect: Effect.Effect<Context.Tag.Service<T>, E1, R1>\n  ) => <E, R>(\n    self: Router.HttpRouter<E, R>\n  ) => Router.HttpRouter<\n    E | E1,\n    Exclude<\n      R | Router.HttpRouter.ExcludeProvided<R1>,\n      Context.Tag.Identifier<T>\n    >\n  >,\n  <E, R, T extends Context.Tag<any, any>, R1, E1>(\n    self: Router.HttpRouter<E, R>,\n    tag: T,\n    effect: Effect.Effect<Context.Tag.Service<T>, E1, R1>\n  ) => Router.HttpRouter<\n    E | E1,\n    Exclude<\n      R | Router.HttpRouter.ExcludeProvided<R1>,\n      Context.Tag.Identifier<T>\n    >\n  >\n>(3, <E, R, T extends Context.Tag<any, any>, R1, E1>(\n  self: Router.HttpRouter<E, R>,\n  tag: T,\n  effect: Effect.Effect<Context.Tag.Service<T>, E1, R1>\n): Router.HttpRouter<\n  E | E1,\n  Exclude<\n    R | Router.HttpRouter.ExcludeProvided<R1>,\n    Context.Tag.Identifier<T>\n  >\n> => use(self, Effect.provideServiceEffect(tag, effect)) as any)\n\nconst makeService = <E, R>(): Router.HttpRouter.Service<E, R> => {\n  let router = empty as Router.HttpRouter<E, R>\n  return {\n    addRoute(route) {\n      return Effect.sync(() => {\n        router = append(router, route)\n      })\n    },\n    all(path, handler, options) {\n      return Effect.sync(() => {\n        router = all(router, path, handler, options)\n      })\n    },\n    get(path, handler, options) {\n      return Effect.sync(() => {\n        router = get(router, path, handler, options)\n      })\n    },\n    post(path, handler, options) {\n      return Effect.sync(() => {\n        router = post(router, path, handler, options)\n      })\n    },\n    put(path, handler, options) {\n      return Effect.sync(() => {\n        router = put(router, path, handler, options)\n      })\n    },\n    patch(path, handler, options) {\n      return Effect.sync(() => {\n        router = patch(router, path, handler, options)\n      })\n    },\n    del(path, handler, options) {\n      return Effect.sync(() => {\n        router = del(router, path, handler, options)\n      })\n    },\n    head(path, handler, options) {\n      return Effect.sync(() => {\n        router = head(router, path, handler, options)\n      })\n    },\n    options(path, handler, opts) {\n      return Effect.sync(() => {\n        router = options(router, path, handler, opts)\n      })\n    },\n    router: Effect.sync(() => router),\n    mount(path, that) {\n      return Effect.sync(() => {\n        router = mount(router, path, that)\n      })\n    },\n    mountApp(path, app, options) {\n      return Effect.sync(() => {\n        router = mountApp(router, path, app, options)\n      })\n    },\n    concat(that) {\n      return Effect.sync(() => {\n        router = concat(router, that)\n      })\n    }\n  }\n}\n\n/* @internal */\nexport const Tag =\n  <const Name extends string>(id: Name) =>\n  <Self, R = never, E = unknown>(): Router.HttpRouter.TagClass<\n    Self,\n    Name,\n    E,\n    R | Router.HttpRouter.DefaultServices\n  > => {\n    const Err = globalThis.Error as any\n    const limit = Err.stackTraceLimit\n    Err.stackTraceLimit = 2\n    const creationError = new Err()\n    Err.stackTraceLimit = limit\n\n    function TagClass() {}\n    const TagClass_ = TagClass as any as Mutable<Router.HttpRouter.TagClass<Self, Name, E, R>>\n    Object.setPrototypeOf(TagClass, Object.getPrototypeOf(Context.GenericTag<Self, any>(id)))\n    TagClass.key = id\n    Object.defineProperty(TagClass, \"stack\", {\n      get() {\n        return creationError.stack\n      }\n    })\n    TagClass_.Live = Layer.sync(TagClass_, makeService)\n    TagClass_.router = Effect.flatMap(TagClass_, (_) => _.router)\n    TagClass_.use = (f) =>\n      Layer.effectDiscard(Effect.flatMap(TagClass_, f)).pipe(\n        Layer.provide(TagClass_.Live)\n      )\n    TagClass_.useScoped = (f) =>\n      TagClass_.pipe(\n        Effect.flatMap(f),\n        Layer.scopedDiscard,\n        Layer.provide(TagClass_.Live)\n      )\n    TagClass_.unwrap = (f) =>\n      TagClass_.pipe(\n        Effect.flatMap((_) => _.router),\n        Effect.map(f),\n        Layer.unwrapEffect,\n        Layer.provide(TagClass_.Live)\n      )\n    return TagClass as any\n  }\n"],"names":["Chunk","Context","Effect","Effectable","FiberRef","dual","globalValue","Inspectable","Layer","Option","Predicate","Schema","Tracer","FindMyWay","Error","ServerRequest","Respondable","TypeId","Symbol","for","RouteTypeId","RouteContextTypeId","RouteContext","GenericTag","isRouter","u","hasProperty","params","map","_","schemaJson","schema","options","parse","decodeUnknown","flatMap","context","request","get","HttpServerRequest","searchParams","ParsedSearchParams","routeContext","json","body","method","url","headers","cookies","pathParams","schemaNoBody","schemaParams","schemaPathParams","currentRouterConfig","unsafeMake","withRouterConfig","effect","config","locally","setRouterConfig","locallyScoped","RouterImpl","StructuralClass","routes","mounts","constructor","httpApp","pipe","toHttpApp","commit","toJSON","_id","toString","format","NodeInspectSymbol","self","router","make","toReadonlyArray","path","app","RouteContextImpl","RouteImpl","includePrefix","none","some","mountsLen","length","forEach","route","all","on","withFiberRuntime","fiber","Map","getFiberRef","currentContext","unsafeMap","unsafeGet","i","startsWith","set","key","sliceRequestUrl","handler","toResponse","result","find","undefined","fail","RouteNotFound","prefix","_tag","value","span","getOption","ParentSpan","attribute","handlerResponse","uninterruptible","interruptible","prefexLen","modify","slice","Class","empty","fromIterable","makeRoute","append","concat","that","concatAll","routers","reduce","cur","acc","appendAll","removeTrailingSlash","endsWith","prefixPath","prefixAll","orElse","mount","mountApp","args","post","put","patch","del","head","use","f","transform","catchAll","catchAllCause","catchTag","k","catchTags","cases","provideService","tag","service","provideServiceEffect","makeService","addRoute","sync","opts","Tag","id","Err","globalThis","limit","stackTraceLimit","creationError","TagClass","TagClass_","Object","setPrototypeOf","getPrototypeOf","defineProperty","stack","Live","effectDiscard","provide","useScoped","scopedDiscard","unwrap","unwrapEffect"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5201, "column": 0}, "map": {"version":3,"file":"HttpRouter.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpRouter.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Cause from \"effect/Cause\"\nimport type * as Chunk from \"effect/Chunk\"\nimport type * as Context from \"effect/Context\"\nimport type * as Effect from \"effect/Effect\"\nimport type { FiberRef } from \"effect/FiberRef\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type * as Layer from \"effect/Layer\"\nimport type * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport type { RouterConfig } from \"find-my-way-ts\"\nimport type * as Etag from \"./Etag.js\"\nimport type { FileSystem } from \"./FileSystem.js\"\nimport type * as App from \"./HttpApp.js\"\nimport type * as Method from \"./HttpMethod.js\"\nimport type * as Platform from \"./HttpPlatform.js\"\nimport type * as Error from \"./HttpServerError.js\"\nimport type * as ServerRequest from \"./HttpServerRequest.js\"\nimport type * as Respondable from \"./HttpServerRespondable.js\"\nimport type * as ServerResponse from \"./HttpServerResponse.js\"\nimport * as internal from \"./internal/httpRouter.js\"\nimport type { Path } from \"./Path.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpRouter<E = never, R = never>\n  extends App.Default<E | Error.RouteNotFound, Exclude<R, RouteContext>>, Inspectable\n{\n  readonly [TypeId]: TypeId\n  readonly routes: Chunk.Chunk<Route<E, R>>\n  readonly mounts: Chunk.Chunk<\n    readonly [\n      prefix: string,\n      httpApp: App.Default<E, R>,\n      options?: { readonly includePrefix?: boolean | undefined } | undefined\n    ]\n  >\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace HttpRouter {\n  /**\n   * @since 1.0.0\n   */\n  export type Provided = RouteContext | ServerRequest.HttpServerRequest | ServerRequest.ParsedSearchParams | Scope.Scope\n\n  /**\n   * @since 1.0.0\n   */\n  export type ExcludeProvided<A> = Exclude<A, Provided>\n\n  /**\n   * @since 1.0.0\n   */\n  export interface Service<E, R> {\n    readonly router: Effect.Effect<HttpRouter<E, R>>\n    readonly addRoute: (route: Route<E, R>) => Effect.Effect<void>\n    readonly all: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly get: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly post: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly put: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly patch: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly del: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly head: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly options: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly mount: (\n      path: `/${string}`,\n      router: HttpRouter<E, R>\n    ) => Effect.Effect<void>\n    readonly mountApp: (\n      path: `/${string}`,\n      router: App.Default<E, R>,\n      options?: { readonly includePrefix?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly concat: (router: HttpRouter<E, R>) => Effect.Effect<void>\n  }\n\n  /**\n   * @since 1.0.0\n   */\n  export type DefaultServices = Platform.HttpPlatform | Etag.Generator | FileSystem | Path\n\n  /**\n   * @since 1.0.0\n   */\n  export interface TagClass<Self, Name extends string, E, R> extends Context.Tag<Self, Service<E, R>> {\n    new(_: never): Context.TagClassShape<Name, Service<E, R>>\n    readonly Live: Layer.Layer<Self>\n    readonly router: Effect.Effect<HttpRouter<E, R>, never, Self>\n    readonly use: <XA, XE, XR>(f: (router: Service<E, R>) => Effect.Effect<XA, XE, XR>) => Layer.Layer<never, XE, XR>\n    readonly useScoped: <XA, XE, XR>(\n      f: (router: Service<E, R>) => Effect.Effect<XA, XE, XR>\n    ) => Layer.Layer<never, XE, Exclude<XR, Scope.Scope>>\n    readonly unwrap: <XA, XE, XR>(f: (router: HttpRouter<E, R>) => Layer.Layer<XA, XE, XR>) => Layer.Layer<XA, XE, XR>\n  }\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const RouteTypeId: unique symbol = internal.RouteTypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type RouteTypeId = typeof RouteTypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type PathInput = `/${string}` | \"*\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Route<E = never, R = never> extends Inspectable {\n  readonly [RouteTypeId]: RouteTypeId\n  readonly method: Method.HttpMethod | \"*\"\n  readonly path: PathInput\n  readonly handler: Route.Handler<E, R>\n  readonly prefix: Option.Option<string>\n  readonly uninterruptible: boolean\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace Route {\n  /**\n   * @since 1.0.0\n   */\n  export type Handler<E, R> = App.HttpApp<\n    Respondable.Respondable,\n    E,\n    R | RouteContext | ServerRequest.ParsedSearchParams\n  >\n\n  /**\n   * @since 1.0.0\n   */\n  export type Middleware<E, R> = App.HttpApp<\n    ServerResponse.HttpServerResponse,\n    E,\n    R | RouteContext | ServerRequest.ParsedSearchParams\n  >\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const RouteContextTypeId: unique symbol = internal.RouteContextTypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type RouteContextTypeId = typeof RouteContextTypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface RouteContext {\n  readonly [RouteContextTypeId]: RouteContextTypeId\n  readonly params: Readonly<Record<string, string | undefined>>\n  readonly route: Route<unknown, unknown>\n}\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const RouteContext: Context.Tag<RouteContext, RouteContext> = internal.RouteContext\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const params: Effect.Effect<\n  Readonly<Record<string, string | undefined>>,\n  never,\n  RouteContext\n> = internal.params\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const schemaJson: <\n  R,\n  I extends Partial<{\n    readonly method: Method.HttpMethod\n    readonly url: string\n    readonly cookies: Readonly<Record<string, string | undefined>>\n    readonly headers: Readonly<Record<string, string | undefined>>\n    readonly pathParams: Readonly<Record<string, string | undefined>>\n    readonly searchParams: Readonly<Record<string, string | ReadonlyArray<string> | undefined>>\n    readonly body: any\n  }>,\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<\n  A,\n  Error.RequestError | ParseResult.ParseError,\n  RouteContext | R | ServerRequest.HttpServerRequest | ServerRequest.ParsedSearchParams\n> = internal.schemaJson\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const schemaNoBody: <\n  R,\n  I extends Partial<\n    {\n      readonly method: Method.HttpMethod\n      readonly url: string\n      readonly cookies: Readonly<Record<string, string | undefined>>\n      readonly headers: Readonly<Record<string, string | undefined>>\n      readonly pathParams: Readonly<Record<string, string | undefined>>\n      readonly searchParams: Readonly<Record<string, string | ReadonlyArray<string> | undefined>>\n    }\n  >,\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<\n  A,\n  ParseResult.ParseError,\n  R | RouteContext | ServerRequest.HttpServerRequest | ServerRequest.ParsedSearchParams\n> = internal.schemaNoBody\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const schemaParams: <A, I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError, R | RouteContext | ServerRequest.ParsedSearchParams> =\n  internal.schemaParams\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const schemaPathParams: <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError, R | RouteContext> = internal.schemaPathParams\n\n/**\n * @since 1.0.0\n * @category router config\n */\nexport const currentRouterConfig: FiberRef<Partial<RouterConfig>> = internal.currentRouterConfig\n\n/**\n * @since 1.0.0\n * @category router config\n */\nexport const withRouterConfig: {\n  /**\n   * @since 1.0.0\n   * @category router config\n   */\n  (config: Partial<RouterConfig>): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * @since 1.0.0\n   * @category router config\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, config: Partial<RouterConfig>): Effect.Effect<A, E, R>\n} = internal.withRouterConfig\n\n/**\n * @since 1.0.0\n * @category router config\n */\nexport const setRouterConfig: (config: Partial<RouterConfig>) => Layer.Layer<never> = internal.setRouterConfig\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: HttpRouter = internal.empty\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromIterable: <R extends Route<any, any>>(\n  routes: Iterable<R>\n) => HttpRouter<R extends Route<infer E, infer _> ? E : never, R extends Route<infer _, infer Env> ? Env : never> =\n  internal.fromIterable\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeRoute: <E, R>(\n  method: Method.HttpMethod,\n  path: PathInput,\n  handler: Route.Handler<E, R>,\n  options?: { readonly prefix?: string | undefined; readonly uninterruptible?: boolean | undefined } | undefined\n) => Route<E, HttpRouter.ExcludeProvided<R>> = internal.makeRoute\n\n/**\n * @since 1.0.0\n * @category utils\n */\nexport const prefixPath: {\n  /**\n   * @since 1.0.0\n   * @category utils\n   */\n  (prefix: string): (self: string) => string\n  /**\n   * @since 1.0.0\n   * @category utils\n   */\n  (self: string, prefix: string): string\n} = internal.prefixPath\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const prefixAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (prefix: PathInput): <E, R>(self: HttpRouter<E, R>) => HttpRouter<E, R>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R>(self: HttpRouter<E, R>, prefix: PathInput): HttpRouter<E, R>\n} = internal.prefixAll\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const append: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <R1, E1>(route: Route<E1, R1>): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<\n    E1 | E,\n    R | HttpRouter.ExcludeProvided<R1>\n  >\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, E1, R1>(self: HttpRouter<E, R>, route: Route<E1, R1>): HttpRouter<\n    E | E1,\n    R | HttpRouter.ExcludeProvided<R1>\n  >\n} = internal.append\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const concat: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <R1, E1>(that: HttpRouter<E1, R1>): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R1 | R>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, R1, E1>(self: HttpRouter<E, R>, that: HttpRouter<E1, R1>): HttpRouter<\n    E | E1,\n    R | R1\n  >\n} = internal.concat\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const concatAll: <Routers extends ReadonlyArray<HttpRouter<unknown, unknown>>>(\n  ...routers: Routers\n) => [Routers[number]] extends [HttpRouter<infer E, infer R>] ? HttpRouter<E, R> : never = internal.concatAll\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const mount: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(path: `/${string}`, that: HttpRouter<E1, R1>): <E, R>(self: HttpRouter<E, R>) => HttpRouter<E1 | E, R1 | R>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(self: HttpRouter<E, R>, path: `/${string}`, that: HttpRouter<E1, R1>): HttpRouter<E | E1, R | R1>\n} = internal.mount\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const mountApp: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: `/${string}`,\n    that: App.Default<E1, R1>,\n    options?: { readonly includePrefix?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<\n    E1 | E,\n    | HttpRouter.ExcludeProvided<R1>\n    | HttpRouter.ExcludeProvided<R>\n  >\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: `/${string}`,\n    that: App.Default<E1, R1>,\n    options?: { readonly includePrefix?: boolean | undefined } | undefined\n  ): HttpRouter<\n    E | E1,\n    | HttpRouter.ExcludeProvided<R>\n    | HttpRouter.ExcludeProvided<R1>\n  >\n} = internal.mountApp\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const route: (\n  method: Method.HttpMethod | \"*\"\n) => {\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | Exclude<R1, ServerRequest.HttpServerRequest | RouteContext | Scope.Scope>>\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | Exclude<R1, ServerRequest.HttpServerRequest | RouteContext | Scope.Scope>>\n} = internal.route\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const all: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<\n    E1 | E,\n    R | HttpRouter.ExcludeProvided<R1>\n  >\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<\n    E | E1,\n    R | HttpRouter.ExcludeProvided<R1>\n  >\n} = internal.all\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const get: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.get\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const post: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.post\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const patch: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.patch\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const put: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.put\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const del: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.del\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const head: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.head\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const options: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.options\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const use: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, R1, E1>(\n    f: (self: Route.Middleware<E, R>) => App.Default<E1, R1>\n  ): (self: HttpRouter<E, R>) => HttpRouter<E1, HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, R1, E1>(\n    self: HttpRouter<E, R>,\n    f: (self: Route.Middleware<E, R>) => App.Default<E1, R1>\n  ): HttpRouter<E1, HttpRouter.ExcludeProvided<R1>>\n} = internal.use\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const transform: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, R1, E1>(\n    f: (self: Route.Handler<E, R>) => App.HttpApp<Respondable.Respondable, E1, R1>\n  ): (self: HttpRouter<E, R>) => HttpRouter<E1, HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, R1, E1>(\n    self: HttpRouter<E, R>,\n    f: (self: Route.Handler<E, R>) => App.HttpApp<Respondable.Respondable, E1, R1>\n  ): HttpRouter<E1, HttpRouter.ExcludeProvided<R1>>\n} = internal.transform\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const catchAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, E2, R2>(\n    f: (e: E) => Route.Handler<E2, R2>\n  ): <R>(self: HttpRouter<E, R>) => HttpRouter<E2, R | HttpRouter.ExcludeProvided<R2>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, E2, R2>(\n    self: HttpRouter<E, R>,\n    f: (e: E) => Route.Handler<E2, R2>\n  ): HttpRouter<E2, R | HttpRouter.ExcludeProvided<R2>>\n} = internal.catchAll\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const catchAllCause: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, E2, R2>(\n    f: (e: Cause.Cause<E>) => Route.Handler<E2, R2>\n  ): <R>(self: HttpRouter<E, R>) => HttpRouter<E2, R | HttpRouter.ExcludeProvided<R2>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, E2, R2>(\n    self: HttpRouter<E, R>,\n    f: (e: Cause.Cause<E>) => Route.Handler<E2, R2>\n  ): HttpRouter<E2, R | HttpRouter.ExcludeProvided<R2>>\n} = internal.catchAllCause\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const catchTag: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <K extends E extends { _tag: string } ? E[\"_tag\"] : never, E, E1, R1>(\n    k: K,\n    f: (e: Extract<E, { _tag: K }>) => Route.Handler<E1, R1>\n  ): <R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | Exclude<E, { _tag: K }>, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, K extends E extends { _tag: string } ? E[\"_tag\"] : never, E1, R1>(\n    self: HttpRouter<E, R>,\n    k: K,\n    f: (e: Extract<E, { _tag: K }>) => Route.Handler<E1, R1>\n  ): HttpRouter<E1 | Exclude<E, { _tag: K }>, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.catchTag\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const catchTags: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <\n    E,\n    Cases extends E extends { _tag: string }\n      ? { [K in E[\"_tag\"]]+?: ((error: Extract<E, { _tag: K }>) => Route.Handler<any, any>) | undefined }\n      : {}\n  >(cases: Cases): <R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, infer E, any> ? E : never\n    }[keyof Cases],\n    | R\n    | HttpRouter.ExcludeProvided<\n      {\n        [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, any, infer R> ? R : never\n      }[keyof Cases]\n    >\n  >\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <\n    R,\n    E,\n    Cases extends E extends { _tag: string }\n      ? { [K in E[\"_tag\"]]+?: ((error: Extract<E, { _tag: K }>) => Route.Handler<any, any>) | undefined } :\n      {}\n  >(self: HttpRouter<E, R>, cases: Cases): HttpRouter<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, infer E, any> ? E : never\n    }[keyof Cases],\n    | R\n    | HttpRouter.ExcludeProvided<\n      {\n        [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, any, infer R> ? R : never\n      }[keyof Cases]\n    >\n  >\n} = internal.catchTags\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const provideService: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <T extends Context.Tag<any, any>>(\n    tag: T,\n    service: Context.Tag.Service<T>\n  ): <E, R>(self: HttpRouter<E, R>) => HttpRouter<E, Exclude<R, Context.Tag.Identifier<T>>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, T extends Context.Tag<any, any>>(\n    self: HttpRouter<E, R>,\n    tag: T,\n    service: Context.Tag.Service<T>\n  ): HttpRouter<E, Exclude<R, Context.Tag.Identifier<T>>>\n} = internal.provideService\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const provideServiceEffect: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <T extends Context.Tag<any, any>, R1, E1>(tag: T, effect: Effect.Effect<Context.Tag.Service<T>, E1, R1>): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<\n    E1 | E,\n    | Exclude<R, Context.Tag.Identifier<T>>\n    | Exclude<HttpRouter.ExcludeProvided<R1>, Context.Tag.Identifier<T>>\n  >\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, T extends Context.Tag<any, any>, R1, E1>(\n    self: HttpRouter<E, R>,\n    tag: T,\n    effect: Effect.Effect<Context.Tag.Service<T>, E1, R1>\n  ): HttpRouter<\n    E | E1,\n    | Exclude<R, Context.Tag.Identifier<T>>\n    | Exclude<HttpRouter.ExcludeProvided<R1>, Context.Tag.Identifier<T>>\n  >\n} = internal.provideServiceEffect\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const Tag: <const Name extends string>(\n  id: Name\n) => <Self, R = never, E = unknown>() => HttpRouter.TagClass<Self, Name, E, R | HttpRouter.DefaultServices> =\n  internal.Tag\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport class Default extends Tag(\"@effect/platform/HttpRouter/Default\")<Default>() {}\n"],"names":["internal","TypeId","RouteTypeId","RouteContextTypeId","RouteContext","params","schemaJson","schemaNoBody","schemaParams","schemaPathParams","currentRouterConfig","withRouterConfig","setRouterConfig","empty","fromIterable","makeRoute","prefixPath","prefixAll","append","concat","concatAll","mount","mountApp","route","all","get","post","patch","put","del","head","options","use","transform","catchAll","catchAllCause","catchTag","catchTags","provideService","provideServiceEffect","Tag","Default"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAO,KAAKA,QAAQ,MAAM,0BAA0B;;AAO7C,MAAMC,MAAM,GAAkBD,QAAQ,iQAACC,MAAM;AA0H7C,MAAMC,WAAW,GAAkBF,QAAQ,iQAACE,WAAW;AAsDvD,MAAMC,kBAAkB,GAAkBH,QAAQ,iQAACG,kBAAkB;AAsBrE,MAAMC,YAAY,GAA4CJ,QAAQ,iQAACI,YAAY;AAMnF,MAAMC,MAAM,GAIfL,QAAQ,iQAACK,MAAM;AAMZ,MAAMC,UAAU,GAmBnBN,QAAQ,iQAACM,UAAU;AAMhB,MAAMC,YAAY,GAoBrBP,QAAQ,iQAACO,YAAY;AAMlB,MAAMC,YAAY,GAIvBR,QAAQ,iQAACQ,YAAY;AAMhB,MAAMC,gBAAgB,GAGqCT,QAAQ,iQAACS,gBAAgB;AAMpF,MAAMC,mBAAmB,GAAoCV,QAAQ,iQAACU,mBAAmB;AAMzF,MAAMC,gBAAgB,GAWzBX,QAAQ,iQAACW,gBAAgB;AAMtB,MAAMC,eAAe,GAA0DZ,QAAQ,iQAACY,eAAe;AAMvG,MAAMC,KAAK,GAAeb,QAAQ,iQAACa,KAAK;AAMxC,MAAMC,YAAY,GAGvBd,QAAQ,iQAACc,YAAY;AAMhB,MAAMC,SAAS,GAKyBf,QAAQ,iQAACe,SAAS;AAM1D,MAAMC,UAAU,GAWnBhB,QAAQ,iQAACgB,UAAU;AAMhB,MAAMC,SAAS,GAWlBjB,QAAQ,iQAACiB,SAAS;AAMf,MAAMC,MAAM,GAmBflB,QAAQ,iQAACkB,MAAM;AAMZ,MAAMC,MAAM,GAgBfnB,QAAQ,iQAACmB,MAAM;AAMZ,MAAMC,SAAS,GAEqEpB,QAAQ,iQAACoB,SAAS;AAMtG,MAAMC,KAAK,GAWdrB,QAAQ,iQAACqB,KAAK;AAMX,MAAMC,QAAQ,GA8BjBtB,QAAQ,iQAACsB,QAAQ;AAMd,MAAMC,KAAK,GAgBdvB,QAAQ,iQAACuB,KAAK;AAMX,MAAMC,GAAG,GA4BZxB,QAAQ,iQAACwB,GAAG;AAMT,MAAMC,GAAG,GAsBZzB,QAAQ,iQAACyB,GAAG;AAMT,MAAMC,IAAI,GAsBb1B,QAAQ,iQAAC0B,IAAI;AAMV,MAAMC,KAAK,GAsBd3B,QAAQ,iQAAC2B,KAAK;AAMX,MAAMC,GAAG,GAsBZ5B,QAAQ,iQAAC4B,GAAG;AAMT,MAAMC,GAAG,GAsBZ7B,QAAQ,iQAAC6B,GAAG;AAMT,MAAMC,IAAI,GAsBb9B,QAAQ,iQAAC8B,IAAI;AAMV,MAAMC,OAAO,GAsBhB/B,QAAQ,iQAAC+B,OAAO;AAMb,MAAMC,GAAG,GAgBZhC,QAAQ,iQAACgC,GAAG;AAMT,MAAMC,SAAS,GAgBlBjC,QAAQ,iQAACiC,SAAS;AAMf,MAAMC,QAAQ,GAgBjBlC,QAAQ,iQAACkC,QAAQ;AAMd,MAAMC,aAAa,GAgBtBnC,QAAQ,iQAACmC,aAAa;AAMnB,MAAMC,QAAQ,GAoBjBpC,QAAQ,iQAACoC,QAAQ;AAMd,MAAMC,SAAS,GA8ClBrC,QAAQ,iQAACqC,SAAS;AAMf,MAAMC,cAAc,GAkBvBtC,QAAQ,iQAACsC,cAAc;AAMpB,MAAMC,oBAAoB,GAyB7BvC,QAAQ,iQAACuC,oBAAoB;AAM1B,MAAMC,GAAG,GAGdxC,QAAQ,iQAACwC,GAAG;AAMR,MAAOC,OAAQ,SAAA,WAAA,GAAQD,GAAG,CAAC,qCAAqC,CAAC,EAAW;AAAA","ignoreList":[0]}},
    {"offset": {"line": 5288, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5304, "column": 0}, "map": {"version":3,"file":"HttpClient.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpClient.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Context from \"effect/Context\"\nimport type * as Effect from \"effect/Effect\"\nimport type { RuntimeFiber } from \"effect/Fiber\"\nimport type * as FiberRef from \"effect/FiberRef\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type { Layer } from \"effect/Layer\"\nimport type { Pipeable } from \"effect/Pipeable\"\nimport type * as Predicate from \"effect/Predicate\"\nimport type { Ref } from \"effect/Ref\"\nimport type * as Schedule from \"effect/Schedule\"\nimport type * as Scope from \"effect/Scope\"\nimport type { Cookies } from \"./Cookies.js\"\nimport type * as Error from \"./HttpClientError.js\"\nimport type * as ClientRequest from \"./HttpClientRequest.js\"\nimport type * as ClientResponse from \"./HttpClientResponse.js\"\nimport * as internal from \"./internal/httpClient.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpClient<E = Error.HttpClientError, R = Scope.Scope> extends Pipeable, Inspectable {\n  readonly [TypeId]: TypeId\n  readonly execute: (request: ClientRequest.HttpClientRequest) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n\n  readonly get: (\n    url: string | URL,\n    options?: ClientRequest.Options.NoBody\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n  readonly head: (\n    url: string | URL,\n    options?: ClientRequest.Options.NoBody\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n  readonly post: (\n    url: string | URL,\n    options?: ClientRequest.Options.NoUrl\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n  readonly patch: (\n    url: string | URL,\n    options?: ClientRequest.Options.NoUrl\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n  readonly put: (\n    url: string | URL,\n    options?: ClientRequest.Options.NoUrl\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n  readonly del: (\n    url: string | URL,\n    options?: ClientRequest.Options.NoUrl\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n  readonly options: (\n    url: string | URL,\n    options?: ClientRequest.Options.NoUrl\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace HttpClient {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export type Preprocess<E, R> = (\n    request: ClientRequest.HttpClientRequest\n  ) => Effect.Effect<ClientRequest.HttpClientRequest, E, R>\n\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export type Postprocess<E = never, R = never> = (\n    request: Effect.Effect<ClientRequest.HttpClientRequest, E, R>\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n}\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const HttpClient: Context.Tag<HttpClient, HttpClient> = internal.tag\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const execute: (\n  request: ClientRequest.HttpClientRequest\n) => Effect.Effect<ClientResponse.HttpClientResponse, Error.HttpClientError, Scope.Scope | HttpClient> =\n  internal.execute\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const get: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoBody | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  Scope.Scope | HttpClient\n> = internal.get\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const head: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoBody | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  Scope.Scope | HttpClient\n> = internal.head\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const post: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoUrl | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  Scope.Scope | HttpClient\n> = internal.post\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const patch: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoUrl | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  Scope.Scope | HttpClient\n> = internal.patch\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const put: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoUrl | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  Scope.Scope | HttpClient\n> = internal.put\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const del: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoUrl | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  Scope.Scope | HttpClient\n> = internal.del\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const options: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoUrl | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  Scope.Scope | HttpClient\n> = internal.options\n\n/**\n * @since 1.0.0\n * @category error handling\n */\nexport const catchAll: {\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, E2, R2>(\n    f: (e: E) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): <R>(self: HttpClient<E, R>) => HttpClient<E2, R2 | R>\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, R, A2, E2, R2>(self: HttpClient<E, R>, f: (e: E) => Effect.Effect<A2, E2, R2>): HttpClient<E2, R | R2>\n} = internal.catchAll\n\n/**\n * @since 1.0.0\n * @category error handling\n */\nexport const catchTag: {\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <K extends E extends { _tag: string } ? E[\"_tag\"] : never, E, E1, R1>(\n    tag: K,\n    f: (e: Extract<E, { _tag: K }>) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): <R>(self: HttpClient<E, R>) => HttpClient<E1 | Exclude<E, { _tag: K }>, R1 | R>\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <R, E, K extends E extends { _tag: string } ? E[\"_tag\"] : never, R1, E1>(\n    self: HttpClient<E, R>,\n    tag: K,\n    f: (e: Extract<E, { _tag: K }>) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): HttpClient<E1 | Exclude<E, { _tag: K }>, R1 | R>\n} = internal.catchTag\n\n/**\n * @since 1.0.0\n * @category error handling\n */\nexport const catchTags: {\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <\n    E,\n    Cases extends\n      & {\n        [K in Extract<E, { _tag: string }>[\"_tag\"]]+?: (\n          error: Extract<E, { _tag: K }>\n        ) => Effect.Effect<ClientResponse.HttpClientResponse, any, any>\n      }\n      & (unknown extends E ? {} : { [K in Exclude<keyof Cases, Extract<E, { _tag: string }>[\"_tag\"]>]: never })\n  >(cases: Cases): <R>(\n    self: HttpClient<E, R>\n  ) => HttpClient<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, infer E, any> ? E : never\n    }[keyof Cases],\n    | R\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, any, infer R> ? R : never\n    }[keyof Cases]\n  >\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <\n    E extends { _tag: string },\n    R,\n    Cases extends\n      & {\n        [K in Extract<E, { _tag: string }>[\"_tag\"]]+?: (\n          error: Extract<E, { _tag: K }>\n        ) => Effect.Effect<ClientResponse.HttpClientResponse, any, any>\n      }\n      & (unknown extends E ? {} : { [K in Exclude<keyof Cases, Extract<E, { _tag: string }>[\"_tag\"]>]: never })\n  >(self: HttpClient<E, R>, cases: Cases): HttpClient<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, infer E, any> ? E : never\n    }[keyof Cases],\n    | R\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, any, infer R> ? R : never\n    }[keyof Cases]\n  >\n} = internal.catchTags\n\n/**\n * Filters the result of a response, or runs an alternative effect if the predicate fails.\n *\n * @since 1.0.0\n * @category filters\n */\nexport const filterOrElse: {\n  /**\n   * Filters the result of a response, or runs an alternative effect if the predicate fails.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  <E2, R2>(\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orElse: (response: ClientResponse.HttpClientResponse) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): <E, R>(self: HttpClient<E, R>) => HttpClient<E2 | E, R2 | R>\n  /**\n   * Filters the result of a response, or runs an alternative effect if the predicate fails.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  <E, R, E2, R2>(\n    self: HttpClient<E, R>,\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orElse: (response: ClientResponse.HttpClientResponse) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): HttpClient<E2 | E, R2 | R>\n} = internal.filterOrElse\n\n/**\n * Filters the result of a response, or throws an error if the predicate fails.\n *\n * @since 1.0.0\n * @category filters\n */\nexport const filterOrFail: {\n  /**\n   * Filters the result of a response, or throws an error if the predicate fails.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  <E2>(\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orFailWith: (response: ClientResponse.HttpClientResponse) => E2\n  ): <E, R>(self: HttpClient<E, R>) => HttpClient<E2 | E, R>\n  /**\n   * Filters the result of a response, or throws an error if the predicate fails.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  <E, R, E2>(\n    self: HttpClient<E, R>,\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orFailWith: (response: ClientResponse.HttpClientResponse) => E2\n  ): HttpClient<E2 | E, R>\n} = internal.filterOrFail\n\n/**\n * Filters responses by HTTP status code.\n *\n * @since 1.0.0\n * @category filters\n */\nexport const filterStatus: {\n  /**\n   * Filters responses by HTTP status code.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  (f: (status: number) => boolean): <E, R>(self: HttpClient<E, R>) => HttpClient<E | Error.ResponseError, R>\n  /**\n   * Filters responses by HTTP status code.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  <E, R>(self: HttpClient<E, R>, f: (status: number) => boolean): HttpClient<E | Error.ResponseError, R>\n} = internal.filterStatus\n\n/**\n * Filters responses that return a 2xx status code.\n *\n * @since 1.0.0\n * @category filters\n */\nexport const filterStatusOk: <E, R>(self: HttpClient<E, R>) => HttpClient<E | Error.ResponseError, R> =\n  internal.filterStatusOk\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeWith: <E2, R2, E, R>(\n  postprocess: (\n    request: Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n  preprocess: HttpClient.Preprocess<E2, R2>\n) => HttpClient<E, R> = internal.makeWith\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const make: (\n  f: (\n    request: ClientRequest.HttpClientRequest,\n    url: URL,\n    signal: AbortSignal,\n    fiber: RuntimeFiber<ClientResponse.HttpClientResponse, Error.HttpClientError>\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, Error.HttpClientError, Scope.Scope>\n) => HttpClient = internal.make\n\n/**\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const transform: {\n  /**\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E1, R1>(\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n      request: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): (self: HttpClient<E, R>) => HttpClient<E | E1, R | R1>\n  /**\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E1, R1>(\n    self: HttpClient<E, R>,\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n      request: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): HttpClient<E | E1, R | R1>\n} = internal.transform\n\n/**\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const transformResponse: {\n  /**\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E1, R1>(\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): (self: HttpClient<E, R>) => HttpClient<E1, R1>\n  /**\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E1, R1>(\n    self: HttpClient<E, R>,\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): HttpClient<E1, R1>\n} = internal.transformResponse\n\n/**\n * Appends a transformation of the request object before sending it.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const mapRequest: {\n  /**\n   * Appends a transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  (\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ): <E, R>(self: HttpClient<E, R>) => HttpClient<E, R>\n  /**\n   * Appends a transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R>(\n    self: HttpClient<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ): HttpClient<E, R>\n} = internal.mapRequest\n\n/**\n * Appends an effectful transformation of the request object before sending it.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const mapRequestEffect: {\n  /**\n   * Appends an effectful transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E2, R2>(\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ): <E, R>(self: HttpClient<E, R>) => HttpClient<E | E2, R | R2>\n  /**\n   * Appends an effectful transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E2, R2>(\n    self: HttpClient<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ): HttpClient<E | E2, R | R2>\n} = internal.mapRequestEffect\n\n/**\n * Prepends a transformation of the request object before sending it.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const mapRequestInput: {\n  /**\n   * Prepends a transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  (\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ): <E, R>(self: HttpClient<E, R>) => HttpClient<E, R>\n  /**\n   * Prepends a transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R>(\n    self: HttpClient<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ): HttpClient<E, R>\n} = internal.mapRequestInput\n\n/**\n * Prepends an effectful transformation of the request object before sending it.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const mapRequestInputEffect: {\n  /**\n   * Prepends an effectful transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E2, R2>(\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ): <E, R>(self: HttpClient<E, R>) => HttpClient<E | E2, R | R2>\n  /**\n   * Prepends an effectful transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E2, R2>(\n    self: HttpClient<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ): HttpClient<E | E2, R | R2>\n} = internal.mapRequestInputEffect\n\n/**\n * @since 1.0.0\n * @category error handling\n */\nexport declare namespace Retry {\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  export type Return<R, E, O extends Effect.Retry.Options<E>> = HttpClient<\n    | (O extends { schedule: Schedule.Schedule<infer _O, infer _I, infer _R> } ? E\n      : O extends { until: Predicate.Refinement<E, infer E2> } ? E2\n      : E)\n    | (O extends { while: (...args: Array<any>) => Effect.Effect<infer _A, infer E, infer _R> } ? E : never)\n    | (O extends { until: (...args: Array<any>) => Effect.Effect<infer _A, infer E, infer _R> } ? E : never),\n    | R\n    | (O extends { schedule: Schedule.Schedule<infer _O, infer _I, infer R> } ? R : never)\n    | (O extends { while: (...args: Array<any>) => Effect.Effect<infer _A, infer _E, infer R> } ? R : never)\n    | (O extends { until: (...args: Array<any>) => Effect.Effect<infer _A, infer _E, infer R> } ? R : never)\n  > extends infer Z ? Z : never\n}\n\n/**\n * Retries the request based on a provided schedule or policy.\n *\n * @since 1.0.0\n * @category error handling\n */\nexport const retry: {\n  /**\n   * Retries the request based on a provided schedule or policy.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, O extends Effect.Retry.Options<E>>(options: O): <R>(self: HttpClient<E, R>) => Retry.Return<R, E, O>\n  /**\n   * Retries the request based on a provided schedule or policy.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <B, E, R1>(policy: Schedule.Schedule<B, NoInfer<E>, R1>): <R>(self: HttpClient<E, R>) => HttpClient<E, R1 | R>\n  /**\n   * Retries the request based on a provided schedule or policy.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, R, O extends Effect.Retry.Options<E>>(self: HttpClient<E, R>, options: O): Retry.Return<R, E, O>\n  /**\n   * Retries the request based on a provided schedule or policy.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, R, B, R1>(self: HttpClient<E, R>, policy: Schedule.Schedule<B, E, R1>): HttpClient<E, R1 | R>\n} = internal.retry\n\n/**\n * Retries common transient errors, such as rate limiting or network issues.\n *\n * @since 1.0.0\n * @category error handling\n */\nexport const retryTransient: {\n  /**\n   * Retries common transient errors, such as rate limiting or network issues.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <B, E, R1 = never>(\n    options:\n      | { readonly schedule?: Schedule.Schedule<B, NoInfer<E>, R1>; readonly times?: number }\n      | Schedule.Schedule<B, NoInfer<E>, R1>\n  ): <R>(self: HttpClient<E, R>) => HttpClient<E, R1 | R>\n  /**\n   * Retries common transient errors, such as rate limiting or network issues.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, R, B, R1 = never>(\n    self: HttpClient<E, R>,\n    options:\n      | { readonly schedule?: Schedule.Schedule<B, NoInfer<E>, R1>; readonly times?: number }\n      | Schedule.Schedule<B, NoInfer<E>, R1>\n  ): HttpClient<E, R1 | R>\n} = internal.retryTransient\n\n/**\n * Performs an additional effect after a successful request.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const tap: {\n  /**\n   * Performs an additional effect after a successful request.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <_, E2, R2>(\n    f: (response: ClientResponse.HttpClientResponse) => Effect.Effect<_, E2, R2>\n  ): <E, R>(self: HttpClient<E, R>) => HttpClient<E | E2, R | R2>\n  /**\n   * Performs an additional effect after a successful request.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, _, E2, R2>(\n    self: HttpClient<E, R>,\n    f: (response: ClientResponse.HttpClientResponse) => Effect.Effect<_, E2, R2>\n  ): HttpClient<E | E2, R | R2>\n} = internal.tap\n\n/**\n * Performs an additional effect on the request before sending it.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const tapRequest: {\n  /**\n   * Performs an additional effect on the request before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <_, E2, R2>(\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<_, E2, R2>\n  ): <E, R>(self: HttpClient<E, R>) => HttpClient<E | E2, R | R2>\n  /**\n   * Performs an additional effect on the request before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, _, E2, R2>(\n    self: HttpClient<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<_, E2, R2>\n  ): HttpClient<E | E2, R | R2>\n} = internal.tapRequest\n\n/**\n * Associates a `Ref` of cookies with the client for handling cookies across requests.\n *\n * @since 1.0.0\n * @category cookies\n */\nexport const withCookiesRef: {\n  /**\n   * Associates a `Ref` of cookies with the client for handling cookies across requests.\n   *\n   * @since 1.0.0\n   * @category cookies\n   */\n  (ref: Ref<Cookies>): <E, R>(self: HttpClient<E, R>) => HttpClient<E, R>\n  /**\n   * Associates a `Ref` of cookies with the client for handling cookies across requests.\n   *\n   * @since 1.0.0\n   * @category cookies\n   */\n  <E, R>(self: HttpClient<E, R>, ref: Ref<Cookies>): HttpClient<E, R>\n} = internal.withCookiesRef\n\n/**\n * Follows HTTP redirects up to a specified number of times.\n *\n * @since 1.0.0\n * @category redirects\n */\nexport const followRedirects: {\n  /**\n   * Follows HTTP redirects up to a specified number of times.\n   *\n   * @since 1.0.0\n   * @category redirects\n   */\n  (maxRedirects?: number | undefined): <E, R>(self: HttpClient<E, R>) => HttpClient<E, R>\n  /**\n   * Follows HTTP redirects up to a specified number of times.\n   *\n   * @since 1.0.0\n   * @category redirects\n   */\n  <E, R>(self: HttpClient<E, R>, maxRedirects?: number | undefined): HttpClient<E, R>\n} = internal.followRedirects\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const currentTracerDisabledWhen: FiberRef.FiberRef<Predicate.Predicate<ClientRequest.HttpClientRequest>> =\n  internal.currentTracerDisabledWhen\n\n/**\n * Disables tracing for specific requests based on a provided predicate.\n *\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withTracerDisabledWhen: {\n  /**\n   * Disables tracing for specific requests based on a provided predicate.\n   *\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (\n    predicate: Predicate.Predicate<ClientRequest.HttpClientRequest>\n  ): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * Disables tracing for specific requests based on a provided predicate.\n   *\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(\n    effect: Effect.Effect<A, E, R>,\n    predicate: Predicate.Predicate<ClientRequest.HttpClientRequest>\n  ): Effect.Effect<A, E, R>\n} = internal.withTracerDisabledWhen\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const currentTracerPropagation: FiberRef.FiberRef<boolean> = internal.currentTracerPropagation\n\n/**\n * Enables or disables tracing propagation for the request.\n *\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withTracerPropagation: {\n  /**\n   * Enables or disables tracing propagation for the request.\n   *\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (enabled: boolean): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * Enables or disables tracing propagation for the request.\n   *\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, enabled: boolean): Effect.Effect<A, E, R>\n} = internal.withTracerPropagation\n\n/**\n * @since 1.0.0\n */\nexport const layerMergedContext: <E, R>(\n  effect: Effect.Effect<HttpClient, E, R>\n) => Layer<HttpClient, E, R> = internal.layerMergedContext\n"],"names":["internal","TypeId","HttpClient","tag","execute","get","head","post","patch","put","del","options","catchAll","catchTag","catchTags","filterOrElse","filterOrFail","filterStatus","filterStatusOk","makeWith","make","transform","transformResponse","mapRequest","mapRequestEffect","mapRequestInput","mapRequestInputEffect","retry","retryTransient","tap","tapRequest","withCookiesRef","followRedirects","currentTracerDisabledWhen","withTracerDisabledWhen","currentTracerPropagation","withTracerPropagation","layerMergedContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,OAAO,KAAKA,QAAQ,MAAM,0BAA0B;;AAM7C,MAAMC,MAAM,GAAkBD,QAAQ,iQAACC,MAAM;AAuE7C,MAAMC,UAAU,GAAwCF,QAAQ,iQAACG,GAAG;AAMpE,MAAMC,OAAO,GAGlBJ,QAAQ,iQAACI,OAAO;AAMX,MAAMC,GAAG,GAOZL,QAAQ,iQAACK,GAAG;AAMT,MAAMC,IAAI,GAObN,QAAQ,iQAACM,IAAI;AAMV,MAAMC,IAAI,GAObP,QAAQ,iQAACO,IAAI;AAMV,MAAMC,KAAK,GAOdR,QAAQ,iQAACQ,KAAK;AAMX,MAAMC,GAAG,GAOZT,QAAQ,iQAACS,GAAG;AAMT,MAAMC,GAAG,GAOZV,QAAQ,iQAACU,GAAG;AAMT,MAAMC,OAAO,GAOhBX,QAAQ,iQAACW,OAAO;AAMb,MAAMC,QAAQ,GAajBZ,QAAQ,iQAACY,QAAQ;AAMd,MAAMC,QAAQ,GAkBjBb,QAAQ,iQAACa,QAAQ;AAMd,MAAMC,SAAS,GAkDlBd,QAAQ,iQAACc,SAAS;AAQf,MAAMC,YAAY,GAsBrBf,QAAQ,iQAACe,YAAY;AAQlB,MAAMC,YAAY,GAsBrBhB,QAAQ,iQAACgB,YAAY;AAQlB,MAAMC,YAAY,GAerBjB,QAAQ,iQAACiB,YAAY;AAQlB,MAAMC,cAAc,GACzBlB,QAAQ,iQAACkB,cAAc;AAMlB,MAAMC,QAAQ,GAKGnB,QAAQ,iQAACmB,QAAQ;AAMlC,MAAMC,IAAI,GAOCpB,QAAQ,iQAACoB,IAAI;AAMxB,MAAMC,SAAS,GAsBlBrB,QAAQ,iQAACqB,SAAS;AAMf,MAAMC,iBAAiB,GAoB1BtB,QAAQ,iQAACsB,iBAAiB;AAQvB,MAAMC,UAAU,GAoBnBvB,QAAQ,iQAACuB,UAAU;AAQhB,MAAMC,gBAAgB,GAoBzBxB,QAAQ,iQAACwB,gBAAgB;AAQtB,MAAMC,eAAe,GAoBxBzB,QAAQ,iQAACyB,eAAe;AAQrB,MAAMC,qBAAqB,GAoB9B1B,QAAQ,iQAAC0B,qBAAqB;AA8B3B,MAAMC,KAAK,GA6Bd3B,QAAQ,iQAAC2B,KAAK;AAQX,MAAMC,cAAc,GAwBvB5B,QAAQ,iQAAC4B,cAAc;AAQpB,MAAMC,GAAG,GAoBZ7B,QAAQ,iQAAC6B,GAAG;AAQT,MAAMC,UAAU,GAoBnB9B,QAAQ,iQAAC8B,UAAU;AAQhB,MAAMC,cAAc,GAevB/B,QAAQ,iQAAC+B,cAAc;AAQpB,MAAMC,eAAe,GAexBhC,QAAQ,iQAACgC,eAAe;AAMrB,MAAMC,yBAAyB,GACpCjC,QAAQ,iQAACiC,yBAAyB;AAQ7B,MAAMC,sBAAsB,GAoB/BlC,QAAQ,iQAACkC,sBAAsB;AAM5B,MAAMC,wBAAwB,GAA+BnC,QAAQ,iQAACmC,wBAAwB;AAQ9F,MAAMC,qBAAqB,GAe9BpC,QAAQ,iQAACoC,qBAAqB;AAK3B,MAAMC,kBAAkB,GAEArC,QAAQ,iQAACqC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 5380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5396, "column": 0}, "map": {"version":3,"file":"HttpClientRequest.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpClientRequest.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Effect from \"effect/Effect\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type * as Option from \"effect/Option\"\nimport type { Pipeable } from \"effect/Pipeable\"\nimport type { Redacted } from \"effect/Redacted\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Stream from \"effect/Stream\"\nimport type * as PlatformError from \"./Error.js\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport type * as Headers from \"./Headers.js\"\nimport type * as Body from \"./HttpBody.js\"\nimport type { HttpMethod } from \"./HttpMethod.js\"\nimport * as internal from \"./internal/httpClientRequest.js\"\nimport type * as UrlParams from \"./UrlParams.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"@effect/platform/HttpClientRequest\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpClientRequest extends Inspectable, Pipeable {\n  readonly [TypeId]: TypeId\n  readonly method: HttpMethod\n  readonly url: string\n  readonly urlParams: UrlParams.UrlParams\n  readonly hash: Option.Option<string>\n  readonly headers: Headers.Headers\n  readonly body: Body.HttpBody\n}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Options {\n  readonly method?: HttpMethod | undefined\n  readonly url?: string | URL | undefined\n  readonly urlParams?: UrlParams.Input | undefined\n  readonly hash?: string | undefined\n  readonly headers?: Headers.Input | undefined\n  readonly body?: Body.HttpBody | undefined\n  readonly accept?: string | undefined\n  readonly acceptJson?: boolean | undefined\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace Options {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface NoBody extends Omit<Options, \"method\" | \"url\" | \"body\"> {}\n\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface NoUrl extends Omit<Options, \"method\" | \"url\"> {}\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const make: <M extends HttpMethod>(\n  method: M\n) => (\n  url: string | URL,\n  options?: (M extends \"GET\" | \"HEAD\" ? Options.NoBody : Options.NoUrl) | undefined\n) => HttpClientRequest = internal.make\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const get: (url: string | URL, options?: Options.NoBody) => HttpClientRequest = internal.get\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const post: (url: string | URL, options?: Options.NoUrl) => HttpClientRequest = internal.post\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const patch: (url: string | URL, options?: Options.NoUrl) => HttpClientRequest = internal.patch\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const put: (url: string | URL, options?: Options.NoUrl) => HttpClientRequest = internal.put\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const del: (url: string | URL, options?: Options.NoUrl) => HttpClientRequest = internal.del\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const head: (url: string | URL, options?: Options.NoBody) => HttpClientRequest = internal.head\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const options: (url: string | URL, options?: Options.NoUrl) => HttpClientRequest = internal.options\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const modify: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (options: Options): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, options: Options): HttpClientRequest\n} = internal.modify\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setMethod: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (method: HttpMethod): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, method: HttpMethod): HttpClientRequest\n} = internal.setMethod\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setHeader: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, key: string, value: string): HttpClientRequest\n} = internal.setHeader\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setHeaders: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: Headers.Input): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, input: Headers.Input): HttpClientRequest\n} = internal.setHeaders\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const basicAuth: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (username: string | Redacted, password: string | Redacted): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpClientRequest,\n    username: string | Redacted,\n    password: string | Redacted\n  ): HttpClientRequest\n} = internal.basicAuth\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bearerToken: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (token: string | Redacted): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, token: string | Redacted): HttpClientRequest\n} = internal.bearerToken\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const accept: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (mediaType: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, mediaType: string): HttpClientRequest\n} = internal.accept\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const acceptJson: (self: HttpClientRequest) => HttpClientRequest = internal.acceptJson\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setUrl: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (url: string | URL): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, url: string | URL): HttpClientRequest\n} = internal.setUrl\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const prependUrl: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (path: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, path: string): HttpClientRequest\n} = internal.prependUrl\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const appendUrl: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (path: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, path: string): HttpClientRequest\n} = internal.appendUrl\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const updateUrl: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (f: (url: string) => string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, f: (url: string) => string): HttpClientRequest\n} = internal.updateUrl\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setUrlParam: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, key: string, value: string): HttpClientRequest\n} = internal.setUrlParam\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setUrlParams: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: UrlParams.Input): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, input: UrlParams.Input): HttpClientRequest\n} = internal.setUrlParams\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const appendUrlParam: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, key: string, value: string): HttpClientRequest\n} = internal.appendUrlParam\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const appendUrlParams: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: UrlParams.Input): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, input: UrlParams.Input): HttpClientRequest\n} = internal.appendUrlParams\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setHash: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (hash: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, hash: string): HttpClientRequest\n} = internal.setHash\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const removeHash: (self: HttpClientRequest) => HttpClientRequest = internal.removeHash\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setBody: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: Body.HttpBody): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: Body.HttpBody): HttpClientRequest\n} = internal.setBody\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyUint8Array: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: Uint8Array, contentType?: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: Uint8Array, contentType?: string): HttpClientRequest\n} = internal.bodyUint8Array\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyText: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: string, contentType?: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: string, contentType?: string): HttpClientRequest\n} = internal.bodyText\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyJson: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: unknown): (self: HttpClientRequest) => Effect.Effect<HttpClientRequest, Body.HttpBodyError>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: unknown): Effect.Effect<HttpClientRequest, Body.HttpBodyError>\n} = internal.bodyJson\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyUnsafeJson: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: unknown): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: unknown): HttpClientRequest\n} = internal.bodyUnsafeJson\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const schemaBodyJson: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  (body: A): (self: HttpClientRequest) => Effect.Effect<HttpClientRequest, Body.HttpBodyError, R>\n  (self: HttpClientRequest, body: A): Effect.Effect<HttpClientRequest, Body.HttpBodyError, R>\n} = internal.schemaBodyJson\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyUrlParams: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: UrlParams.Input): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, input: UrlParams.Input): HttpClientRequest\n} = internal.bodyUrlParams\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyFormData: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: FormData): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: FormData): HttpClientRequest\n} = internal.bodyFormData\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyStream: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    body: Stream.Stream<Uint8Array, unknown>,\n    options?: { readonly contentType?: string | undefined; readonly contentLength?: number | undefined } | undefined\n  ): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpClientRequest,\n    body: Stream.Stream<Uint8Array, unknown>,\n    options?: { readonly contentType?: string | undefined; readonly contentLength?: number | undefined } | undefined\n  ): HttpClientRequest\n} = internal.bodyStream\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyFile: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    path: string,\n    options?: FileSystem.StreamOptions & { readonly contentType?: string }\n  ): (self: HttpClientRequest) => Effect.Effect<HttpClientRequest, PlatformError.PlatformError, FileSystem.FileSystem>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpClientRequest,\n    path: string,\n    options?: FileSystem.StreamOptions & { readonly contentType?: string }\n  ): Effect.Effect<HttpClientRequest, PlatformError.PlatformError, FileSystem.FileSystem>\n} = internal.bodyFile\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyFileWeb: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (file: Body.HttpBody.FileLike): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, file: Body.HttpBody.FileLike): HttpClientRequest\n} = internal.bodyFileWeb\n"],"names":["internal","TypeId","Symbol","for","make","get","post","patch","put","del","head","options","modify","setMethod","setHeader","setHeaders","basicAuth","bearerToken","accept","acceptJson","setUrl","prependUrl","appendUrl","updateUrl","setUrlParam","setUrlParams","appendUrlParam","appendUrlParams","setHash","removeHash","setBody","bodyUint8Array","bodyText","bodyJson","bodyUnsafeJson","schemaBodyJson","bodyUrlParams","bodyFormData","bodyStream","bodyFile","bodyFileWeb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,QAAQ,MAAM,iCAAiC;;AAOpD,MAAMC,MAAM,GAAA,WAAA,GAAkBC,MAAM,CAACC,GAAG,CAAC,oCAAoC,CAAC;AA0D9E,MAAMC,IAAI,GAKQJ,QAAQ,wQAACI,IAAI;AAM/B,MAAMC,GAAG,GAAuEL,QAAQ,wQAACK,GAAG;AAM5F,MAAMC,IAAI,GAAsEN,QAAQ,wQAACM,IAAI;AAM7F,MAAMC,KAAK,GAAsEP,QAAQ,wQAACO,KAAK;AAM/F,MAAMC,GAAG,GAAsER,QAAQ,wQAACQ,GAAG;AAM3F,MAAMC,GAAG,GAAsET,QAAQ,wQAACS,GAAG;AAM3F,MAAMC,IAAI,GAAuEV,QAAQ,wQAACU,IAAI;AAM9F,MAAMC,OAAO,GAAsEX,QAAQ,wQAACW,OAAO;AAMnG,MAAMC,MAAM,GAWfZ,QAAQ,wQAACY,MAAM;AAMZ,MAAMC,SAAS,GAWlBb,QAAQ,wQAACa,SAAS;AAMf,MAAMC,SAAS,GAWlBd,QAAQ,wQAACc,SAAS;AAMf,MAAMC,UAAU,GAWnBf,QAAQ,wQAACe,UAAU;AAMhB,MAAMC,SAAS,GAelBhB,QAAQ,wQAACgB,SAAS;AAMf,MAAMC,WAAW,GAWpBjB,QAAQ,wQAACiB,WAAW;AAMjB,MAAMC,MAAM,GAWflB,QAAQ,wQAACkB,MAAM;AAMZ,MAAMC,UAAU,GAAmDnB,QAAQ,wQAACmB,UAAU;AAMtF,MAAMC,MAAM,GAWfpB,QAAQ,wQAACoB,MAAM;AAMZ,MAAMC,UAAU,GAWnBrB,QAAQ,wQAACqB,UAAU;AAMhB,MAAMC,SAAS,GAWlBtB,QAAQ,wQAACsB,SAAS;AAMf,MAAMC,SAAS,GAWlBvB,QAAQ,wQAACuB,SAAS;AAMf,MAAMC,WAAW,GAWpBxB,QAAQ,wQAACwB,WAAW;AAMjB,MAAMC,YAAY,GAWrBzB,QAAQ,wQAACyB,YAAY;AAMlB,MAAMC,cAAc,GAWvB1B,QAAQ,wQAAC0B,cAAc;AAMpB,MAAMC,eAAe,GAWxB3B,QAAQ,wQAAC2B,eAAe;AAMrB,MAAMC,OAAO,GAWhB5B,QAAQ,wQAAC4B,OAAO;AAMb,MAAMC,UAAU,GAAmD7B,QAAQ,wQAAC6B,UAAU;AAMtF,MAAMC,OAAO,GAWhB9B,QAAQ,wQAAC8B,OAAO;AAMb,MAAMC,cAAc,GAWvB/B,QAAQ,wQAAC+B,cAAc;AAMpB,MAAMC,QAAQ,GAWjBhC,QAAQ,wQAACgC,QAAQ;AAMd,MAAMC,QAAQ,GAWjBjC,QAAQ,wQAACiC,QAAQ;AAMd,MAAMC,cAAc,GAWvBlC,QAAQ,wQAACkC,cAAc;AAMpB,MAAMC,cAAc,GAMvBnC,QAAQ,wQAACmC,cAAc;AAMpB,MAAMC,aAAa,GAWtBpC,QAAQ,wQAACoC,aAAa;AAMnB,MAAMC,YAAY,GAWrBrC,QAAQ,wQAACqC,YAAY;AAMlB,MAAMC,UAAU,GAkBnBtC,QAAQ,wQAACsC,UAAU;AAMhB,MAAMC,QAAQ,GAkBjBvC,QAAQ,wQAACuC,QAAQ;AAMd,MAAMC,WAAW,GAWpBxC,QAAQ,wQAACwC,WAAW","ignoreList":[0]}},
    {"offset": {"line": 5476, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5492, "column": 0}, "map": {"version":3,"file":"HttpClientResponse.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpClientResponse.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Effect from \"effect/Effect\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport type * as Stream from \"effect/Stream\"\nimport type { Unify } from \"effect/Unify\"\nimport type * as Cookies from \"./Cookies.js\"\nimport type * as Error from \"./HttpClientError.js\"\nimport type * as ClientRequest from \"./HttpClientRequest.js\"\nimport type * as IncomingMessage from \"./HttpIncomingMessage.js\"\nimport * as internal from \"./internal/httpClientResponse.js\"\n\nexport {\n  /**\n   * @since 1.0.0\n   * @category schema\n   */\n  schemaBodyJson,\n  /**\n   * @since 1.0.0\n   * @category schema\n   */\n  schemaBodyUrlParams,\n  /**\n   * @since 1.0.0\n   * @category schema\n   */\n  schemaHeaders\n} from \"./HttpIncomingMessage.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpClientResponse extends IncomingMessage.HttpIncomingMessage<Error.ResponseError> {\n  readonly [TypeId]: TypeId\n  readonly request: ClientRequest.HttpClientRequest\n  readonly status: number\n  readonly cookies: Cookies.Cookies\n  readonly formData: Effect.Effect<FormData, Error.ResponseError>\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromWeb: (request: ClientRequest.HttpClientRequest, source: Response) => HttpClientResponse =\n  internal.fromWeb\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaJson: <\n  R,\n  I extends {\n    readonly status?: number | undefined\n    readonly headers?: Readonly<Record<string, string>> | undefined\n    readonly body?: unknown\n  },\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => (self: HttpClientResponse) => Effect.Effect<A, Error.ResponseError | ParseResult.ParseError, R> =\n  internal.schemaJson\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaNoBody: <\n  R,\n  I extends {\n    readonly status?: number | undefined\n    readonly headers?: Readonly<Record<string, string>> | undefined\n  },\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => (self: HttpClientResponse) => Effect.Effect<A, ParseResult.ParseError, R> = internal.schemaNoBody\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const stream: <E, R>(\n  effect: Effect.Effect<HttpClientResponse, E, R>\n) => Stream.Stream<Uint8Array, Error.ResponseError | E, Exclude<R, Scope.Scope>> = internal.stream\n\n/**\n * @since 1.0.0\n * @category pattern matching\n */\nexport const matchStatus: {\n  /**\n   * @since 1.0.0\n   * @category pattern matching\n   */\n  <\n    const Cases extends {\n      readonly [status: number]: (_: HttpClientResponse) => any\n      readonly \"2xx\"?: (_: HttpClientResponse) => any\n      readonly \"3xx\"?: (_: HttpClientResponse) => any\n      readonly \"4xx\"?: (_: HttpClientResponse) => any\n      readonly \"5xx\"?: (_: HttpClientResponse) => any\n      readonly orElse: (_: HttpClientResponse) => any\n    }\n  >(cases: Cases): (self: HttpClientResponse) => Cases[keyof Cases] extends (_: any) => infer R ? Unify<R> : never\n  /**\n   * @since 1.0.0\n   * @category pattern matching\n   */\n  <\n    const Cases extends {\n      readonly [status: number]: (_: HttpClientResponse) => any\n      readonly \"2xx\"?: (_: HttpClientResponse) => any\n      readonly \"3xx\"?: (_: HttpClientResponse) => any\n      readonly \"4xx\"?: (_: HttpClientResponse) => any\n      readonly \"5xx\"?: (_: HttpClientResponse) => any\n      readonly orElse: (_: HttpClientResponse) => any\n    }\n  >(self: HttpClientResponse, cases: Cases): Cases[keyof Cases] extends (_: any) => infer R ? Unify<R> : never\n} = internal.matchStatus\n\n/**\n * @since 1.0.0\n * @category filters\n */\nexport const filterStatus: {\n  /**\n   * @since 1.0.0\n   * @category filters\n   */\n  (f: (status: number) => boolean): (self: HttpClientResponse) => Effect.Effect<HttpClientResponse, Error.ResponseError>\n  /**\n   * @since 1.0.0\n   * @category filters\n   */\n  (self: HttpClientResponse, f: (status: number) => boolean): Effect.Effect<HttpClientResponse, Error.ResponseError>\n} = internal.filterStatus\n\n/**\n * @since 1.0.0\n * @category filters\n */\nexport const filterStatusOk: (self: HttpClientResponse) => Effect.Effect<HttpClientResponse, Error.ResponseError> =\n  internal.filterStatusOk\n"],"names":["internal","schemaBodyJson","schemaBodyUrlParams","schemaHeaders","TypeId","fromWeb","schemaJson","schemaNoBody","stream","matchStatus","filterStatus","filterStatusOk"],"mappings":";;;;;;;;;;AAcA,OAAO,KAAKA,QAAQ,MAAM,kCAAkC;;;AAwBrD,MAAMI,MAAM,GAAkBJ,QAAQ,yQAACI,MAAM;AAwB7C,MAAMC,OAAO,GAClBL,QAAQ,yQAACK,OAAO;AAMX,MAAMC,UAAU,GAYrBN,QAAQ,yQAACM,UAAU;AAMd,MAAMC,YAAY,GAUwDP,QAAQ,yQAACO,YAAY;AAM/F,MAAMC,MAAM,GAEgER,QAAQ,yQAACQ,MAAM;AAM3F,MAAMC,WAAW,GA6BpBT,QAAQ,yQAACS,WAAW;AAMjB,MAAMC,YAAY,GAWrBV,QAAQ,yQAACU,YAAY;AAMlB,MAAMC,cAAc,GACzBX,QAAQ,yQAACW,cAAc","ignoreList":[0]}},
    {"offset": {"line": 5513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5579, "column": 0}, "map": {"version":3,"file":"HttpBody.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/%40effect%2Bplatform%400.69.8_effect%403.10.3/node_modules/%40effect/platform/src/HttpBody.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Effect from \"effect/Effect\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport * as Predicate from \"effect/Predicate\"\nimport type * as Schema from \"effect/Schema\"\nimport type * as Stream_ from \"effect/Stream\"\nimport type * as PlatformError from \"./Error.js\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport * as internal from \"./internal/httpBody.js\"\nimport type * as UrlParams from \"./UrlParams.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isHttpBody = (u: unknown): u is HttpBody => Predicate.hasProperty(u, TypeId)\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type HttpBody = Empty | Raw | Uint8Array | FormData | Stream\n\n/**\n * @since 1.0.0\n */\nexport declare namespace HttpBody {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface Proto extends Inspectable {\n    readonly [TypeId]: TypeId\n    readonly _tag: string\n    readonly contentType?: string | undefined\n    readonly contentLength?: number | undefined\n  }\n\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface FileLike {\n    readonly name: string\n    readonly lastModified: number\n    readonly size: number\n    readonly stream: () => unknown\n    readonly type: string\n  }\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const ErrorTypeId: unique symbol = internal.ErrorTypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type ErrorTypeId = typeof ErrorTypeId\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport interface HttpBodyError {\n  readonly [ErrorTypeId]: ErrorTypeId\n  readonly _tag: \"HttpBodyError\"\n  readonly reason: ErrorReason\n}\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport const HttpBodyError: (reason: ErrorReason) => HttpBodyError = internal.HttpBodyError\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport type ErrorReason = {\n  readonly _tag: \"JsonError\"\n  readonly error: unknown\n} | {\n  readonly _tag: \"SchemaError\"\n  readonly error: ParseResult.ParseError\n}\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Empty extends HttpBody.Proto {\n  readonly _tag: \"Empty\"\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: Empty = internal.empty\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Raw extends HttpBody.Proto {\n  readonly _tag: \"Raw\"\n  readonly body: unknown\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const raw: (\n  body: unknown,\n  options?: {\n    readonly contentType?: string | undefined\n    readonly contentLength?: number | undefined\n  } | undefined\n) => Raw = internal.raw\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Uint8Array extends HttpBody.Proto {\n  readonly _tag: \"Uint8Array\"\n  readonly body: globalThis.Uint8Array\n  readonly contentType: string\n  readonly contentLength: number\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const uint8Array: (body: globalThis.Uint8Array) => Uint8Array = internal.uint8Array\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const text: (body: string, contentType?: string) => Uint8Array = internal.text\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const unsafeJson: (body: unknown) => Uint8Array = internal.unsafeJson\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const json: (body: unknown) => Effect.Effect<Uint8Array, HttpBodyError> = internal.json\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const jsonSchema: <A, I, R>(\n  schema: Schema.Schema<A, I, R>\n) => (body: A) => Effect.Effect<Uint8Array, HttpBodyError, R> = internal.jsonSchema\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const urlParams: (urlParams: UrlParams.UrlParams) => Uint8Array = internal.urlParams\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface FormData extends HttpBody.Proto {\n  readonly _tag: \"FormData\"\n  readonly formData: globalThis.FormData\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const formData: (body: globalThis.FormData) => FormData = internal.formData\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Stream extends HttpBody.Proto {\n  readonly _tag: \"Stream\"\n  readonly stream: Stream_.Stream<globalThis.Uint8Array, unknown>\n  readonly contentType: string\n  readonly contentLength?: number | undefined\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const stream: (\n  body: Stream_.Stream<globalThis.Uint8Array, unknown>,\n  contentType?: string,\n  contentLength?: number,\n  etag?: string\n) => Stream = internal.stream\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const file: (\n  path: string,\n  options?: FileSystem.StreamOptions & { readonly contentType?: string }\n) => Effect.Effect<Stream, PlatformError.PlatformError, FileSystem.FileSystem> = internal.file\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fileInfo: (\n  path: string,\n  info: FileSystem.File.Info,\n  options?: FileSystem.StreamOptions & { readonly contentType?: string }\n) => Effect.Effect<Stream, PlatformError.PlatformError, FileSystem.FileSystem> = internal.fileInfo\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fileWeb: (file: HttpBody.FileLike) => Stream = internal.fileWeb\n"],"names":["Predicate","internal","TypeId","isHttpBody","u","hasProperty","ErrorTypeId","HttpBodyError","empty","raw","uint8Array","text","unsafeJson","json","jsonSchema","urlParams","formData","stream","file","fileInfo","fileWeb"],"mappings":";;;;;;;;;;;;;;;;;;;AAWA,OAAO,KAAKC,QAAQ,MAAM,wBAAwB;AALlD,OAAO,KAAKD,SAAS,MAAM,kBAAkB;;;AAYtC,MAAME,MAAM,GAAkBD,QAAQ,+PAACC,MAAM;AAY7C,MAAMC,UAAU,IAAIC,CAAU,GAAoBJ,SAAS,gMAACK,WAAW,CAACD,CAAC,EAAEF,MAAM,CAAC;AAwClF,MAAMI,WAAW,GAAkBL,QAAQ,+PAACK,WAAW;AAsBvD,MAAMC,aAAa,GAA2CN,QAAQ,+PAACM,aAAa;AAyBpF,MAAMC,KAAK,GAAUP,QAAQ,+PAACO,KAAK;AAenC,MAAMC,GAAG,GAMLR,QAAQ,+PAACQ,GAAG;AAiBhB,MAAMC,UAAU,GAAgDT,QAAQ,+PAACS,UAAU;AAMnF,MAAMC,IAAI,GAAuDV,QAAQ,+PAACU,IAAI;AAM9E,MAAMC,UAAU,GAAkCX,QAAQ,+PAACW,UAAU;AAMrE,MAAMC,IAAI,GAAgEZ,QAAQ,+PAACY,IAAI;AAMvF,MAAMC,UAAU,GAEyCb,QAAQ,+PAACa,UAAU;AAM5E,MAAMC,SAAS,GAAmDd,QAAQ,+PAACc,SAAS;AAepF,MAAMC,QAAQ,GAA4Cf,QAAQ,+PAACe,QAAQ;AAiB3E,MAAMC,MAAM,GAKLhB,QAAQ,+PAACgB,MAAM;AAMtB,MAAMC,IAAI,GAGgEjB,QAAQ,+PAACiB,IAAI;AAMvF,MAAMC,QAAQ,GAI4DlB,QAAQ,+PAACkB,QAAQ;AAM3F,MAAMC,OAAO,GAAwCnB,QAAQ,+PAACmB,OAAO","ignoreList":[0]}},
    {"offset": {"line": 5619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}