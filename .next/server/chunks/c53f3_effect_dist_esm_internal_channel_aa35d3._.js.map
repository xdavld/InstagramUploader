{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"continuation.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/continuation.ts"],"sourcesContent":["import type * as Cause from \"../../Cause.js\"\nimport type * as Channel from \"../../Channel.js\"\nimport type * as Effect from \"../../Effect.js\"\nimport * as Exit from \"../../Exit.js\"\nimport type * as Types from \"../../Types.js\"\nimport * as OpCodes from \"../opCodes/continuation.js\"\n\n/** @internal */\nexport const ContinuationTypeId = Symbol.for(\"effect/ChannelContinuation\")\n\n/** @internal */\nexport type ContinuationTypeId = typeof ContinuationTypeId\n\n/** @internal */\nexport interface Continuation<\n  out Env,\n  in InErr,\n  in InElem,\n  in InDone,\n  out OutErr,\n  out OutErr2,\n  out OutElem,\n  out OutDone,\n  out OutDone2\n> extends Continuation.Variance<Env, InErr, InElem, InDone, OutErr, OutErr2, OutElem, OutDone, OutDone2> {}\n\n/** @internal */\nexport declare namespace Continuation {\n  /** @internal */\n  export interface Variance<\n    out Env,\n    in InErr,\n    in InElem,\n    in InDone,\n    out OutErr,\n    out OutErr2,\n    out OutElem,\n    out OutDone,\n    out OutDone2\n  > {\n    readonly [ContinuationTypeId]: {\n      readonly _Env: Types.Covariant<Env>\n      readonly _InErr: Types.Contravariant<InErr>\n      readonly _InElem: Types.Contravariant<InElem>\n      readonly _InDone: Types.Contravariant<InDone>\n      readonly _OutErr: Types.Covariant<OutErr>\n      readonly _OutDone: Types.Covariant<OutDone>\n      readonly _OutErr2: Types.Covariant<OutErr2>\n      readonly _OutElem: Types.Covariant<OutElem>\n      readonly _OutDone2: Types.Covariant<OutDone2>\n    }\n  }\n}\n\n/** @internal */\nexport type Primitive = ErasedContinuationK | ErasedContinuationFinalizer\n\n/** @internal */\nexport type ErasedContinuationK = ContinuationK<\n  unknown,\n  unknown,\n  unknown,\n  unknown,\n  unknown,\n  unknown,\n  unknown,\n  unknown,\n  unknown\n>\n\n/** @internal */\nexport type ErasedContinuationFinalizer = ContinuationFinalizer<unknown, unknown, unknown>\n\n/** @internal */\nexport interface ContinuationK<\n  out Env,\n  in InErr,\n  in InElem,\n  in InDone,\n  out OutErr,\n  out OutErr2,\n  out OutElem,\n  out OutDone,\n  out OutDone2\n> extends\n  Continuation<\n    Env,\n    InErr,\n    InElem,\n    InDone,\n    OutErr,\n    OutErr2,\n    OutElem,\n    OutDone,\n    OutDone2\n  >\n{\n  readonly _tag: OpCodes.OP_CONTINUATION_K\n  onSuccess(\n    o: OutDone\n  ): Channel.Channel<OutElem, InElem, OutErr2, InErr, OutDone2, InDone, Env>\n  onHalt(\n    c: Cause.Cause<OutErr>\n  ): Channel.Channel<OutElem, InElem, OutErr2, InErr, OutDone2, InDone, Env>\n  onExit(\n    exit: Exit.Exit<OutDone, OutErr>\n  ): Channel.Channel<OutElem, InElem, OutErr2, InErr, OutDone2, InDone, Env>\n}\n\n/** @internal */\nexport interface ContinuationFinalizer<out Env, out OutErr, out OutDone> extends\n  Continuation<\n    Env,\n    unknown,\n    unknown,\n    unknown,\n    OutErr,\n    never,\n    never,\n    OutDone,\n    never\n  >\n{\n  readonly _tag: OpCodes.OP_CONTINUATION_FINALIZER\n  finalizer(exit: Exit.Exit<OutErr, OutDone>): Effect.Effect<unknown, never, Env>\n}\n\nconst continuationVariance = {\n  /* c8 ignore next */\n  _Env: (_: never) => _,\n  /* c8 ignore next */\n  _InErr: (_: unknown) => _,\n  /* c8 ignore next */\n  _InElem: (_: unknown) => _,\n  /* c8 ignore next */\n  _InDone: (_: unknown) => _,\n  /* c8 ignore next */\n  _OutErr: (_: never) => _,\n  /* c8 ignore next */\n  _OutDone: (_: never) => _,\n  /* c8 ignore next */\n  _OutErr2: (_: never) => _,\n  /* c8 ignore next */\n  _OutElem: (_: never) => _,\n  /* c8 ignore next */\n  _OutDone2: (_: never) => _\n}\n\n/** @internal */\nexport class ContinuationKImpl<\n  out Env,\n  out Env2,\n  in InErr,\n  in InElem,\n  in InDone,\n  in out OutErr,\n  out OutErr2,\n  out OutElem,\n  in out OutDone,\n  out OutDone2\n> implements\n  ContinuationK<\n    Env | Env2,\n    InErr,\n    InElem,\n    InDone,\n    OutErr,\n    OutErr2,\n    OutElem,\n    OutDone,\n    OutDone2\n  >\n{\n  readonly _tag = OpCodes.OP_CONTINUATION_K\n  readonly [ContinuationTypeId] = continuationVariance\n  constructor(\n    readonly onSuccess: (\n      o: OutDone\n    ) => Channel.Channel<OutElem, InElem, OutErr2, InErr, OutDone2, InDone, Env>,\n    readonly onHalt: (\n      c: Cause.Cause<OutErr>\n    ) => Channel.Channel<OutElem, InElem, OutErr2, InErr, OutDone2, InDone, Env2>\n  ) {\n  }\n  onExit(\n    exit: Exit.Exit<OutDone, OutErr>\n  ): Channel.Channel<OutElem, InElem, OutErr2, InErr, OutDone2, InDone, Env | Env2> {\n    return Exit.isFailure(exit) ? this.onHalt(exit.cause) : this.onSuccess(exit.value)\n  }\n}\n\n/** @internal */\nexport class ContinuationFinalizerImpl<out Env, in out OutErr, in out OutDone>\n  implements ContinuationFinalizer<Env, OutErr, OutDone>\n{\n  readonly _tag = OpCodes.OP_CONTINUATION_FINALIZER\n  readonly [ContinuationTypeId] = continuationVariance\n  constructor(readonly finalizer: (exit: Exit.Exit<OutErr, OutDone>) => Effect.Effect<unknown, never, Env>) {\n  }\n}\n"],"names":["Exit","OpCodes","ContinuationTypeId","Symbol","for","continuationVariance","_Env","_","_InErr","_InElem","_InDone","_OutErr","_OutDone","_OutErr2","_OutElem","_OutDone2","ContinuationKImpl","onSuccess","onHalt","_tag","OP_CONTINUATION_K","constructor","onExit","exit","isFailure","cause","value","ContinuationFinalizerImpl","finalizer","OP_CONTINUATION_FINALIZER"],"mappings":";;;;;AAKA,OAAO,KAAKC,OAAO,MAAM,4BAA4B;AAFrD,OAAO,KAAKD,IAAI,MAAM,eAAe;;;AAK9B,MAAME,kBAAkB,GAAA,WAAA,GAAGC,MAAM,CAACC,GAAG,CAAC,4BAA4B,CAAC;AAuH1E,MAAMC,oBAAoB,GAAG;IAC3B,kBAAA,GACAC,IAAI,GAAGC,CAAQ,GAAKA,CAAC;IACrB,kBAAA,GACAC,MAAM,GAAGD,CAAU,GAAKA,CAAC;IACzB,kBAAA,GACAE,OAAO,GAAGF,CAAU,GAAKA,CAAC;IAC1B,kBAAA,GACAG,OAAO,GAAGH,CAAU,GAAKA,CAAC;IAC1B,kBAAA,GACAI,OAAO,GAAGJ,CAAQ,GAAKA,CAAC;IACxB,kBAAA,GACAK,QAAQ,EAAGL,CAAQ,IAAKA,CAAC;IACzB,kBAAA,GACAM,QAAQ,GAAGN,CAAQ,GAAKA,CAAC;IACzB,kBAAA,GACAO,QAAQ,GAAGP,CAAQ,GAAKA,CAAC;IACzB,kBAAA,GACAQ,SAAS,EAAGR,CAAQ,IAAKA;CAC1B;AAGK,MAAOS,iBAAiB;IA2BjBC,SAAA,CAAA;IAGAC,MAAA,CAAA;IANFC,IAAI,GAAGlB,OAAO,4NAACmB,iBAAiB,CAAA;IAChC,CAAClB,kBAAkB,CAAA,GAAIG,oBAAoB,CAAA;IACpDgB,YACWJ,SAEmE,EACnEC,MAEoE,CAAA;QALpE,IAAA,CAAAD,SAAS,GAATA,SAAS;QAGT,IAAA,CAAAC,MAAM,GAANA,MAAM;IAIjB;IACAI,MAAMA,CACJC,IAAgC,EAAA;QAEhC,OAAOvB,IAAI,gMAACwB,SAAS,CAACD,IAAI,CAAC,GAAG,IAAI,CAACL,MAAM,CAACK,IAAI,CAACE,KAAK,CAAC,GAAG,IAAI,CAACR,SAAS,CAACM,IAAI,CAACG,KAAK,CAAC;IACpF;;AAII,MAAOC,yBAAyB;IAKfC,SAAA,CAAA;IAFZT,IAAI,GAAGlB,OAAO,4NAAC4B,yBAAyB,CAAA;IACxC,CAAC3B,kBAAkB,CAAA,GAAIG,oBAAoB,CAAA;IACpDgB,YAAqBO,SAAmF,CAAA;QAAnF,IAAA,CAAAA,SAAS,GAATA,SAAS;IAC9B","ignoreList":[0]}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"file":"upstreamPullStrategy.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/upstreamPullStrategy.ts"],"sourcesContent":["import { dual } from \"../../Function.js\"\nimport type * as Option from \"../../Option.js\"\nimport { hasProperty } from \"../../Predicate.js\"\nimport type * as UpstreamPullStrategy from \"../../UpstreamPullStrategy.js\"\nimport * as OpCodes from \"../opCodes/channelUpstreamPullStrategy.js\"\n\n/** @internal */\nconst UpstreamPullStrategySymbolKey = \"effect/ChannelUpstreamPullStrategy\"\n\n/** @internal */\nexport const UpstreamPullStrategyTypeId: UpstreamPullStrategy.UpstreamPullStrategyTypeId = Symbol.for(\n  UpstreamPullStrategySymbolKey\n) as UpstreamPullStrategy.UpstreamPullStrategyTypeId\n\nconst upstreamPullStrategyVariance = {\n  /* c8 ignore next */\n  _A: (_: never) => _\n}\n\n/** @internal */\nconst proto = {\n  [UpstreamPullStrategyTypeId]: upstreamPullStrategyVariance\n}\n\n/** @internal */\nexport const PullAfterNext = <A>(emitSeparator: Option.Option<A>): UpstreamPullStrategy.UpstreamPullStrategy<A> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_PULL_AFTER_NEXT\n  op.emitSeparator = emitSeparator\n  return op\n}\n\n/** @internal */\nexport const PullAfterAllEnqueued = <A>(\n  emitSeparator: Option.Option<A>\n): UpstreamPullStrategy.UpstreamPullStrategy<A> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_PULL_AFTER_ALL_ENQUEUED\n  op.emitSeparator = emitSeparator\n  return op\n}\n\n/** @internal */\nexport const isUpstreamPullStrategy = (u: unknown): u is UpstreamPullStrategy.UpstreamPullStrategy<unknown> =>\n  hasProperty(u, UpstreamPullStrategyTypeId)\n\n/** @internal */\nexport const isPullAfterNext = <A>(\n  self: UpstreamPullStrategy.UpstreamPullStrategy<A>\n): self is UpstreamPullStrategy.PullAfterNext<A> => self._tag === OpCodes.OP_PULL_AFTER_NEXT\n\n/** @internal */\nexport const isPullAfterAllEnqueued = <A>(\n  self: UpstreamPullStrategy.UpstreamPullStrategy<A>\n): self is UpstreamPullStrategy.PullAfterAllEnqueued<A> => self._tag === OpCodes.OP_PULL_AFTER_ALL_ENQUEUED\n\n/** @internal */\nexport const match = dual<\n  <A, Z>(\n    options: {\n      readonly onNext: (emitSeparator: Option.Option<A>) => Z\n      readonly onAllEnqueued: (emitSeparator: Option.Option<A>) => Z\n    }\n  ) => (self: UpstreamPullStrategy.UpstreamPullStrategy<A>) => Z,\n  <A, Z>(\n    self: UpstreamPullStrategy.UpstreamPullStrategy<A>,\n    options: {\n      readonly onNext: (emitSeparator: Option.Option<A>) => Z\n      readonly onAllEnqueued: (emitSeparator: Option.Option<A>) => Z\n    }\n  ) => Z\n>(2, <A, Z>(\n  self: UpstreamPullStrategy.UpstreamPullStrategy<A>,\n  { onAllEnqueued, onNext }: {\n    readonly onNext: (emitSeparator: Option.Option<A>) => Z\n    readonly onAllEnqueued: (emitSeparator: Option.Option<A>) => Z\n  }\n): Z => {\n  switch (self._tag) {\n    case OpCodes.OP_PULL_AFTER_NEXT: {\n      return onNext(self.emitSeparator)\n    }\n    case OpCodes.OP_PULL_AFTER_ALL_ENQUEUED: {\n      return onAllEnqueued(self.emitSeparator)\n    }\n  }\n})\n"],"names":["dual","hasProperty","OpCodes","UpstreamPullStrategySymbolKey","UpstreamPullStrategyTypeId","Symbol","for","upstreamPullStrategyVariance","_A","_","proto","PullAfterNext","emitSeparator","op","Object","create","_tag","OP_PULL_AFTER_NEXT","PullAfterAllEnqueued","OP_PULL_AFTER_ALL_ENQUEUED","isUpstreamPullStrategy","u","isPullAfterNext","self","isPullAfterAllEnqueued","match","onAllEnqueued","onNext"],"mappings":";;;;;;;;;AAIA,OAAO,KAAKE,OAAO,MAAM,2CAA2C;AAFpE,SAASD,WAAW,QAAQ,oBAAoB;AAFhD,SAASD,IAAI,QAAQ,mBAAmB;;;;AAMxC,cAAA,GACA,MAAMG,6BAA6B,GAAG,oCAAoC;AAGnE,MAAMC,0BAA0B,GAAA,WAAA,GAAoDC,MAAM,CAACC,GAAG,CACnGH,6BAA6B,CACqB;AAEpD,MAAMI,4BAA4B,GAAG;IACnC,kBAAA,GACAC,EAAE,GAAGC,CAAQ,GAAKA;CACnB;AAED,cAAA,GACA,MAAMC,KAAK,GAAG;IACZ,CAACN,0BAA0B,CAAA,EAAGG;CAC/B;AAGM,MAAMI,aAAa,IAAOC,aAA+B,IAAkD;IAChH,MAAMC,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC;IAC/BG,EAAE,CAACG,IAAI,GAAGd,OAAO,2OAACe,kBAAkB;IACpCJ,EAAE,CAACD,aAAa,GAAGA,aAAa;IAChC,OAAOC,EAAE;AACX,CAAC;AAGM,MAAMK,oBAAoB,IAC/BN,aAA+B,IACiB;IAChD,MAAMC,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC;IAC/BG,EAAE,CAACG,IAAI,GAAGd,OAAO,2OAACiB,0BAA0B;IAC5CN,EAAE,CAACD,aAAa,GAAGA,aAAa;IAChC,OAAOC,EAAE;AACX,CAAC;AAGM,MAAMO,sBAAsB,IAAIC,CAAU,IAC/CpB,0NAAAA,AAAW,EAACoB,CAAC,EAAEjB,0BAA0B,CAAC;AAGrC,MAAMkB,eAAe,IAC1BC,IAAkD,GACAA,IAAI,CAACP,IAAI,KAAKd,OAAO,2OAACe,kBAAkB;AAGrF,MAAMO,sBAAsB,GACjCD,IAAkD,IACOA,IAAI,CAACP,IAAI,KAAKd,OAAO,2OAACiB,0BAA0B;AAGpG,MAAMM,KAAK,GAAA,WAAA,+MAAGzB,OAAAA,AAAI,EAcvB,CAAC,EAAE,CACHuB,IAAkD,EAClD,EAAEG,aAAa,EAAEC,MAAAA,EAGhB,KACI;IACL,OAAQJ,IAAI,CAACP,IAAI;QACf,KAAKd,OAAO,2OAACe,kBAAkB;YAAE;gBAC/B,OAAOU,MAAM,CAACJ,IAAI,CAACX,aAAa,CAAC;YACnC;QACA,KAAKV,OAAO,2OAACiB,0BAA0B;YAAE;gBACvC,OAAOO,aAAa,CAACH,IAAI,CAACX,aAAa,CAAC;YAC1C;IACF;AACF,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"file":"childExecutorDecision.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/childExecutorDecision.ts"],"sourcesContent":["import type * as ChildExecutorDecision from \"../../ChildExecutorDecision.js\"\nimport { dual } from \"../../Function.js\"\nimport { hasProperty } from \"../../Predicate.js\"\nimport * as OpCodes from \"../opCodes/channelChildExecutorDecision.js\"\n\n/** @internal */\nconst ChildExecutorDecisionSymbolKey = \"effect/ChannelChildExecutorDecision\"\n\n/** @internal */\nexport const ChildExecutorDecisionTypeId: ChildExecutorDecision.ChildExecutorDecisionTypeId = Symbol.for(\n  ChildExecutorDecisionSymbolKey\n) as ChildExecutorDecision.ChildExecutorDecisionTypeId\n\n/** @internal */\nconst proto = {\n  [ChildExecutorDecisionTypeId]: ChildExecutorDecisionTypeId\n}\n\n/** @internal */\nexport const Continue = (_: void): ChildExecutorDecision.ChildExecutorDecision => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_CONTINUE\n  return op\n}\n\n/** @internal */\nexport const Close = (value: unknown): ChildExecutorDecision.ChildExecutorDecision => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_CLOSE\n  op.value = value\n  return op\n}\n\n/** @internal */\nexport const Yield = (_: void): ChildExecutorDecision.ChildExecutorDecision => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_YIELD\n  return op\n}\n\n/** @internal */\nexport const isChildExecutorDecision = (u: unknown): u is ChildExecutorDecision.ChildExecutorDecision =>\n  hasProperty(u, ChildExecutorDecisionTypeId)\n\n/** @internal */\nexport const isContinue = (\n  self: ChildExecutorDecision.ChildExecutorDecision\n): self is ChildExecutorDecision.Continue => self._tag === OpCodes.OP_CONTINUE\n\n/** @internal */\nexport const isClose = (\n  self: ChildExecutorDecision.ChildExecutorDecision\n): self is ChildExecutorDecision.Close => self._tag === OpCodes.OP_CLOSE\n\n/** @internal */\nexport const isYield = (\n  self: ChildExecutorDecision.ChildExecutorDecision\n): self is ChildExecutorDecision.Yield => self._tag === OpCodes.OP_YIELD\n\n/** @internal */\nexport const match = dual<\n  <A>(\n    options: {\n      readonly onContinue: () => A\n      readonly onClose: (value: unknown) => A\n      readonly onYield: () => A\n    }\n  ) => (self: ChildExecutorDecision.ChildExecutorDecision) => A,\n  <A>(\n    self: ChildExecutorDecision.ChildExecutorDecision,\n    options: {\n      readonly onContinue: () => A\n      readonly onClose: (value: unknown) => A\n      readonly onYield: () => A\n    }\n  ) => A\n>(2, <A>(\n  self: ChildExecutorDecision.ChildExecutorDecision,\n  { onClose, onContinue, onYield }: {\n    readonly onContinue: () => A\n    readonly onClose: (value: unknown) => A\n    readonly onYield: () => A\n  }\n): A => {\n  switch (self._tag) {\n    case OpCodes.OP_CONTINUE: {\n      return onContinue()\n    }\n    case OpCodes.OP_CLOSE: {\n      return onClose(self.value)\n    }\n    case OpCodes.OP_YIELD: {\n      return onYield()\n    }\n  }\n})\n"],"names":["dual","hasProperty","OpCodes","ChildExecutorDecisionSymbolKey","ChildExecutorDecisionTypeId","Symbol","for","proto","Continue","_","op","Object","create","_tag","OP_CONTINUE","Close","value","OP_CLOSE","Yield","OP_YIELD","isChildExecutorDecision","u","isContinue","self","isClose","isYield","match","onClose","onContinue","onYield"],"mappings":";;;;;;;;;;;AAGA,OAAO,KAAKE,OAAO,MAAM,4CAA4C;AADrE,SAASD,WAAW,QAAQ,oBAAoB;AADhD,SAASD,IAAI,QAAQ,mBAAmB;;;;AAIxC,cAAA,GACA,MAAMG,8BAA8B,GAAG,qCAAqC;AAGrE,MAAMC,2BAA2B,GAAA,WAAA,GAAsDC,MAAM,CAACC,GAAG,CACtGH,8BAA8B,CACsB;AAEtD,cAAA,GACA,MAAMI,KAAK,GAAG;IACZ,CAACH,2BAA2B,CAAA,EAAGA;CAChC;AAGM,MAAMI,QAAQ,GAAIC,CAAO,IAAiD;IAC/E,MAAMC,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC;IAC/BG,EAAE,CAACG,IAAI,GAAGX,OAAO,4OAACY,WAAW;IAC7B,OAAOJ,EAAE;AACX,CAAC;AAGM,MAAMK,KAAK,IAAIC,KAAc,IAAiD;IACnF,MAAMN,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC;IAC/BG,EAAE,CAACG,IAAI,GAAGX,OAAO,4OAACe,QAAQ;IAC1BP,EAAE,CAACM,KAAK,GAAGA,KAAK;IAChB,OAAON,EAAE;AACX,CAAC;AAGM,MAAMQ,KAAK,IAAIT,CAAO,IAAiD;IAC5E,MAAMC,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC;IAC/BG,EAAE,CAACG,IAAI,GAAGX,OAAO,4OAACiB,QAAQ;IAC1B,OAAOT,EAAE;AACX,CAAC;AAGM,MAAMU,uBAAuB,IAAIC,CAAU,gNAChDpB,cAAW,AAAXA,EAAYoB,CAAC,EAAEjB,2BAA2B,CAAC;AAGtC,MAAMkB,UAAU,GACrBC,IAAiD,IACNA,IAAI,CAACV,IAAI,KAAKX,OAAO,4OAACY,WAAW;AAGvE,MAAMU,OAAO,IAClBD,IAAiD,GACTA,IAAI,CAACV,IAAI,KAAKX,OAAO,4OAACe,QAAQ;AAGjE,MAAMQ,OAAO,IAClBF,IAAiD,GACTA,IAAI,CAACV,IAAI,KAAKX,OAAO,4OAACiB,QAAQ;AAGjE,MAAMO,KAAK,GAAA,WAAA,+MAAG1B,OAAAA,AAAI,EAgBvB,CAAC,EAAE,CACHuB,IAAiD,EACjD,EAAEI,OAAO,EAAEC,UAAU,EAAEC,OAAAA,EAItB,KACI;IACL,OAAQN,IAAI,CAACV,IAAI;QACf,KAAKX,OAAO,4OAACY,WAAW;YAAE;gBACxB,OAAOc,UAAU,EAAE;YACrB;QACA,KAAK1B,OAAO,4OAACe,QAAQ;YAAE;gBACrB,OAAOU,OAAO,CAACJ,IAAI,CAACP,KAAK,CAAC;YAC5B;QACA,KAAKd,OAAO,4OAACiB,QAAQ;YAAE;gBACrB,OAAOU,OAAO,EAAE;YAClB;IACF;AACF,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"file":"mergeDecision.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/mergeDecision.ts"],"sourcesContent":["import type * as Effect from \"../../Effect.js\"\nimport type * as Exit from \"../../Exit.js\"\nimport { dual } from \"../../Function.js\"\nimport type * as MergeDecision from \"../../MergeDecision.js\"\nimport { hasProperty } from \"../../Predicate.js\"\nimport * as OpCodes from \"../opCodes/channelMergeDecision.js\"\n\n/** @internal */\nconst MergeDecisionSymbolKey = \"effect/ChannelMergeDecision\"\n\n/** @internal */\nexport const MergeDecisionTypeId: MergeDecision.MergeDecisionTypeId = Symbol.for(\n  MergeDecisionSymbolKey\n) as MergeDecision.MergeDecisionTypeId\n\n/** @internal */\nconst proto = {\n  [MergeDecisionTypeId]: {\n    _R: (_: never) => _,\n    _E0: (_: unknown) => _,\n    _Z0: (_: unknown) => _,\n    _E: (_: never) => _,\n    _Z: (_: never) => _\n  }\n}\n\n/** @internal */\nexport type Primitive =\n  | Done\n  | Await\n\n/** @internal */\nexport type Op<Tag extends string, Body = {}> =\n  & MergeDecision.MergeDecision<never, unknown, unknown, never, never>\n  & Body\n  & {\n    readonly _tag: Tag\n  }\n\n/** @internal */\nexport interface Done extends\n  Op<OpCodes.OP_DONE, {\n    readonly effect: Effect.Effect<never>\n  }>\n{}\n\n/** @internal */\nexport interface Await extends\n  Op<OpCodes.OP_AWAIT, {\n    f(exit: Exit.Exit<unknown, unknown>): Effect.Effect<never>\n  }>\n{}\n\n/** @internal */\nexport const Done = <Z, E, R>(\n  effect: Effect.Effect<Z, E, R>\n): MergeDecision.MergeDecision<R, unknown, unknown, E, Z> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_DONE\n  op.effect = effect\n  return op\n}\n\n/** @internal */\nexport const Await = <R, E0, Z0, E, Z>(\n  f: (exit: Exit.Exit<Z0, E0>) => Effect.Effect<Z, E, R>\n): MergeDecision.MergeDecision<R, E0, Z0, E, Z> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_AWAIT\n  op.f = f\n  return op\n}\n\n/** @internal */\nexport const AwaitConst = <Z, E, R>(\n  effect: Effect.Effect<Z, E, R>\n): MergeDecision.MergeDecision<R, unknown, unknown, E, Z> => Await(() => effect)\n\n/** @internal */\nexport const isMergeDecision = (\n  u: unknown\n): u is MergeDecision.MergeDecision<unknown, unknown, unknown, unknown, unknown> => hasProperty(u, MergeDecisionTypeId)\n\n/** @internal */\nexport const match = dual<\n  <R, E0, Z0, E, Z, Z2>(\n    options: {\n      readonly onDone: (effect: Effect.Effect<Z, E, R>) => Z2\n      readonly onAwait: (f: (exit: Exit.Exit<Z0, E0>) => Effect.Effect<Z, E, R>) => Z2\n    }\n  ) => (self: MergeDecision.MergeDecision<R, E0, Z0, E, Z>) => Z2,\n  <R, E0, Z0, E, Z, Z2>(\n    self: MergeDecision.MergeDecision<R, E0, Z0, E, Z>,\n    options: {\n      readonly onDone: (effect: Effect.Effect<Z, E, R>) => Z2\n      readonly onAwait: (f: (exit: Exit.Exit<Z0, E0>) => Effect.Effect<Z, E, R>) => Z2\n    }\n  ) => Z2\n>(2, <R, E0, Z0, E, Z, Z2>(\n  self: MergeDecision.MergeDecision<R, E0, Z0, E, Z>,\n  { onAwait, onDone }: {\n    readonly onDone: (effect: Effect.Effect<Z, E, R>) => Z2\n    readonly onAwait: (f: (exit: Exit.Exit<Z0, E0>) => Effect.Effect<Z, E, R>) => Z2\n  }\n): Z2 => {\n  const op = self as Primitive\n  switch (op._tag) {\n    case OpCodes.OP_DONE:\n      return onDone(op.effect)\n    case OpCodes.OP_AWAIT:\n      return onAwait(op.f)\n  }\n})\n"],"names":["dual","hasProperty","OpCodes","MergeDecisionSymbolKey","MergeDecisionTypeId","Symbol","for","proto","_R","_","_E0","_Z0","_E","_Z","Done","effect","op","Object","create","_tag","OP_DONE","Await","f","OP_AWAIT","AwaitConst","isMergeDecision","u","match","self","onAwait","onDone"],"mappings":";;;;;;;;AAKA,OAAO,KAAKE,OAAO,MAAM,oCAAoC;AAD7D,SAASD,WAAW,QAAQ,oBAAoB;AAFhD,SAASD,IAAI,QAAQ,mBAAmB;;;;AAKxC,cAAA,GACA,MAAMG,sBAAsB,GAAG,6BAA6B;AAGrD,MAAMC,mBAAmB,GAAA,WAAA,GAAsCC,MAAM,CAACC,GAAG,CAC9EH,sBAAsB,CACc;AAEtC,cAAA,GACA,MAAMI,KAAK,GAAG;IACZ,CAACH,mBAAmB,CAAA,EAAG;QACrBI,EAAE,GAAGC,CAAQ,GAAKA,CAAC;QACnBC,GAAG,GAAGD,CAAU,GAAKA,CAAC;QACtBE,GAAG,GAAGF,CAAU,GAAKA,CAAC;QACtBG,EAAE,GAAGH,CAAQ,GAAKA,CAAC;QACnBI,EAAE,GAAGJ,CAAQ,GAAKA;;CAErB;AA8BM,MAAMK,IAAI,IACfC,MAA8B,IAC4B;IAC1D,MAAMC,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACX,KAAK,CAAC;IAC/BS,EAAE,CAACG,IAAI,GAAGjB,OAAO,oOAACkB,OAAO;IACzBJ,EAAE,CAACD,MAAM,GAAGA,MAAM;IAClB,OAAOC,EAAE;AACX,CAAC;AAGM,MAAMK,KAAK,IAChBC,CAAsD,IACN;IAChD,MAAMN,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACX,KAAK,CAAC;IAC/BS,EAAE,CAACG,IAAI,GAAGjB,OAAO,oOAACqB,QAAQ;IAC1BP,EAAE,CAACM,CAAC,GAAGA,CAAC;IACR,OAAON,EAAE;AACX,CAAC;AAGM,MAAMQ,UAAU,IACrBT,MAA8B,GAC6BM,KAAK,CAAC,IAAMN,MAAM,CAAC;AAGzE,MAAMU,eAAe,IAC1BC,CAAU,gNACwEzB,cAAAA,AAAW,EAACyB,CAAC,EAAEtB,mBAAmB,CAAC;AAGhH,MAAMuB,KAAK,GAAA,WAAA,+MAAG3B,OAAAA,AAAI,EAcvB,CAAC,EAAE,CACH4B,IAAkD,EAClD,EAAEC,OAAO,EAAEC,MAAAA,EAGV,KACK;IACN,MAAMd,EAAE,GAAGY,IAAiB;IAC5B,OAAQZ,EAAE,CAACG,IAAI;QACb,KAAKjB,OAAO,oOAACkB,OAAO;YAClB,OAAOU,MAAM,CAACd,EAAE,CAACD,MAAM,CAAC;QAC1B,KAAKb,OAAO,oOAACqB,QAAQ;YACnB,OAAOM,OAAO,CAACb,EAAE,CAACM,CAAC,CAAC;IACxB;AACF,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"file":"mergeStrategy.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/mergeStrategy.ts"],"sourcesContent":["import { dual } from \"../../Function.js\"\nimport type * as MergeStrategy from \"../../MergeStrategy.js\"\nimport { hasProperty } from \"../../Predicate.js\"\nimport * as OpCodes from \"../opCodes/channelMergeStrategy.js\"\n\n/** @internal */\nconst MergeStrategySymbolKey = \"effect/ChannelMergeStrategy\"\n\n/** @internal */\nexport const MergeStrategyTypeId: MergeStrategy.MergeStrategyTypeId = Symbol.for(\n  MergeStrategySymbolKey\n) as MergeStrategy.MergeStrategyTypeId\n\n/** @internal */\nconst proto = {\n  [MergeStrategyTypeId]: MergeStrategyTypeId\n}\n\n/** @internal */\nexport const BackPressure = (_: void): MergeStrategy.MergeStrategy => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_BACK_PRESSURE\n  return op\n}\n\n/** @internal */\nexport const BufferSliding = (_: void): MergeStrategy.MergeStrategy => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_BUFFER_SLIDING\n  return op\n}\n\n/** @internal */\nexport const isMergeStrategy = (u: unknown): u is MergeStrategy.MergeStrategy => hasProperty(u, MergeStrategyTypeId)\n\n/** @internal */\nexport const isBackPressure = (self: MergeStrategy.MergeStrategy): self is MergeStrategy.BackPressure =>\n  self._tag === OpCodes.OP_BACK_PRESSURE\n\n/** @internal */\nexport const isBufferSliding = (self: MergeStrategy.MergeStrategy): self is MergeStrategy.BufferSliding =>\n  self._tag === OpCodes.OP_BUFFER_SLIDING\n\n/** @internal */\nexport const match = dual<\n  <A>(options: {\n    readonly onBackPressure: () => A\n    readonly onBufferSliding: () => A\n  }) => (self: MergeStrategy.MergeStrategy) => A,\n  <A>(\n    self: MergeStrategy.MergeStrategy,\n    options: {\n      readonly onBackPressure: () => A\n      readonly onBufferSliding: () => A\n    }\n  ) => A\n>(2, <A>(\n  self: MergeStrategy.MergeStrategy,\n  { onBackPressure, onBufferSliding }: {\n    readonly onBackPressure: () => A\n    readonly onBufferSliding: () => A\n  }\n): A => {\n  switch (self._tag) {\n    case OpCodes.OP_BACK_PRESSURE: {\n      return onBackPressure()\n    }\n    case OpCodes.OP_BUFFER_SLIDING: {\n      return onBufferSliding()\n    }\n  }\n})\n"],"names":["dual","hasProperty","OpCodes","MergeStrategySymbolKey","MergeStrategyTypeId","Symbol","for","proto","BackPressure","_","op","Object","create","_tag","OP_BACK_PRESSURE","BufferSliding","OP_BUFFER_SLIDING","isMergeStrategy","u","isBackPressure","self","isBufferSliding","match","onBackPressure","onBufferSliding"],"mappings":";;;;;;;;;AAGA,OAAO,KAAKE,OAAO,MAAM,oCAAoC;AAD7D,SAASD,WAAW,QAAQ,oBAAoB;AAFhD,SAASD,IAAI,QAAQ,mBAAmB;;;;AAKxC,cAAA,GACA,MAAMG,sBAAsB,GAAG,6BAA6B;AAGrD,MAAMC,mBAAmB,GAAA,WAAA,GAAsCC,MAAM,CAACC,GAAG,CAC9EH,sBAAsB,CACc;AAEtC,cAAA,GACA,MAAMI,KAAK,GAAG;IACZ,CAACH,mBAAmB,CAAA,EAAGA;CACxB;AAGM,MAAMI,YAAY,IAAIC,CAAO,IAAiC;IACnE,MAAMC,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC;IAC/BG,EAAE,CAACG,IAAI,GAAGX,OAAO,oOAACY,gBAAgB;IAClC,OAAOJ,EAAE;AACX,CAAC;AAGM,MAAMK,aAAa,IAAIN,CAAO,IAAiC;IACpE,MAAMC,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC;IAC/BG,EAAE,CAACG,IAAI,GAAGX,OAAO,oOAACc,iBAAiB;IACnC,OAAON,EAAE;AACX,CAAC;AAGM,MAAMO,eAAe,IAAIC,CAAU,gNAAuCjB,cAAAA,AAAW,EAACiB,CAAC,EAAEd,mBAAmB,CAAC;AAG7G,MAAMe,cAAc,IAAIC,IAAiC,GAC9DA,IAAI,CAACP,IAAI,KAAKX,OAAO,oOAACY,gBAAgB;AAGjC,MAAMO,eAAe,IAAID,IAAiC,GAC/DA,IAAI,CAACP,IAAI,KAAKX,OAAO,oOAACc,iBAAiB;AAGlC,MAAMM,KAAK,GAAA,WAAA,+MAAGtB,OAAAA,AAAI,EAYvB,CAAC,EAAE,CACHoB,IAAiC,EACjC,EAAEG,cAAc,EAAEC,eAAAA,EAGjB,KACI;IACL,OAAQJ,IAAI,CAACP,IAAI;QACf,KAAKX,OAAO,oOAACY,gBAAgB;YAAE;gBAC7B,OAAOS,cAAc,EAAE;YACzB;QACA,KAAKrB,OAAO,oOAACc,iBAAiB;YAAE;gBAC9B,OAAOQ,eAAe,EAAE;YAC1B;IACF;AACF,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"file":"singleProducerAsyncInput.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/singleProducerAsyncInput.ts"],"sourcesContent":["import * as Cause from \"../../Cause.js\"\nimport * as Deferred from \"../../Deferred.js\"\nimport * as Effect from \"../../Effect.js\"\nimport * as Either from \"../../Either.js\"\nimport * as Exit from \"../../Exit.js\"\nimport { pipe } from \"../../Function.js\"\nimport * as Ref from \"../../Ref.js\"\nimport type * as SingleProducerAsyncInput from \"../../SingleProducerAsyncInput.js\"\n\n/** @internal */\ntype State<Err, Elem, _Done> =\n  | Empty\n  | Emit<Err, Elem, _Done>\n  | Error<Err>\n  | Done<_Done>\n\n/** @internal */\nconst OP_STATE_EMPTY = \"Empty\" as const\n\n/** @internal */\ntype OP_STATE_EMPTY = typeof OP_STATE_EMPTY\n\n/** @internal */\nconst OP_STATE_EMIT = \"Emit\" as const\n\n/** @internal */\ntype OP_STATE_EMIT = typeof OP_STATE_EMIT\n\n/** @internal */\nconst OP_STATE_ERROR = \"Error\" as const\n\n/** @internal */\ntype OP_STATE_ERROR = typeof OP_STATE_ERROR\n\n/** @internal */\nconst OP_STATE_DONE = \"Done\" as const\n\n/** @internal */\ntype OP_STATE_DONE = typeof OP_STATE_DONE\n\n/** @internal */\ninterface Empty {\n  readonly _tag: OP_STATE_EMPTY\n  readonly notifyProducer: Deferred.Deferred<void>\n}\n\n/** @internal */\ninterface Emit<Err, Elem, Done> {\n  readonly _tag: OP_STATE_EMIT\n  readonly notifyConsumers: ReadonlyArray<Deferred.Deferred<Either.Either<Elem, Done>, Err>>\n}\n\n/** @internal */\ninterface Error<Err> {\n  readonly _tag: OP_STATE_ERROR\n  readonly cause: Cause.Cause<Err>\n}\n\n/** @internal */\ninterface Done<_Done> {\n  readonly _tag: OP_STATE_DONE\n  readonly done: _Done\n}\n\n/** @internal */\nconst stateEmpty = (notifyProducer: Deferred.Deferred<void>): State<never, never, never> => ({\n  _tag: OP_STATE_EMPTY,\n  notifyProducer\n})\n\n/** @internal */\nconst stateEmit = <Err, Elem, Done>(\n  notifyConsumers: ReadonlyArray<Deferred.Deferred<Either.Either<Elem, Done>, Err>>\n): State<Err, Elem, Done> => ({\n  _tag: OP_STATE_EMIT,\n  notifyConsumers\n})\n\n/** @internal */\nconst stateError = <Err>(cause: Cause.Cause<Err>): State<Err, never, never> => ({\n  _tag: OP_STATE_ERROR,\n  cause\n})\n\n/** @internal */\nconst stateDone = <Done>(done: Done): State<never, never, Done> => ({\n  _tag: OP_STATE_DONE,\n  done\n})\n\n/** @internal */\nclass SingleProducerAsyncInputImpl<in out Err, in out Elem, in out Done>\n  implements SingleProducerAsyncInput.SingleProducerAsyncInput<Err, Elem, Done>\n{\n  constructor(readonly ref: Ref.Ref<State<Err, Elem, Done>>) {\n  }\n\n  awaitRead(): Effect.Effect<unknown> {\n    return Effect.flatten(\n      Ref.modify(this.ref, (state) =>\n        state._tag === OP_STATE_EMPTY ?\n          [Deferred.await(state.notifyProducer), state as State<Err, Elem, Done>] :\n          [Effect.void, state])\n    )\n  }\n\n  get close(): Effect.Effect<unknown> {\n    return Effect.fiberIdWith((fiberId) => this.error(Cause.interrupt(fiberId)))\n  }\n\n  done(value: Done): Effect.Effect<unknown> {\n    return Effect.flatten(\n      Ref.modify(this.ref, (state) => {\n        switch (state._tag) {\n          case OP_STATE_EMPTY: {\n            return [Deferred.await(state.notifyProducer), state]\n          }\n          case OP_STATE_EMIT: {\n            return [\n              Effect.forEach(\n                state.notifyConsumers,\n                (deferred) => Deferred.succeed(deferred, Either.left(value)),\n                { discard: true }\n              ),\n              stateDone(value) as State<Err, Elem, Done>\n            ]\n          }\n          case OP_STATE_ERROR: {\n            return [Effect.interrupt, state]\n          }\n          case OP_STATE_DONE: {\n            return [Effect.interrupt, state]\n          }\n        }\n      })\n    )\n  }\n\n  emit(element: Elem): Effect.Effect<unknown> {\n    return Effect.flatMap(Deferred.make<void>(), (deferred) =>\n      Effect.flatten(\n        Ref.modify(this.ref, (state) => {\n          switch (state._tag) {\n            case OP_STATE_EMPTY: {\n              return [Deferred.await(state.notifyProducer), state]\n            }\n            case OP_STATE_EMIT: {\n              const notifyConsumer = state.notifyConsumers[0]\n              const notifyConsumers = state.notifyConsumers.slice(1)\n              if (notifyConsumer !== undefined) {\n                return [\n                  Deferred.succeed(notifyConsumer, Either.right(element)),\n                  (notifyConsumers.length === 0 ?\n                    stateEmpty(deferred) :\n                    stateEmit(notifyConsumers)) as State<Err, Elem, Done>\n                ]\n              }\n              throw new Error(\n                \"Bug: Channel.SingleProducerAsyncInput.emit - Queue was empty! please report an issue at https://github.com/Effect-TS/effect/issues\"\n              )\n            }\n            case OP_STATE_ERROR: {\n              return [Effect.interrupt, state]\n            }\n            case OP_STATE_DONE: {\n              return [Effect.interrupt, state]\n            }\n          }\n        })\n      ))\n  }\n\n  error(cause: Cause.Cause<Err>): Effect.Effect<unknown> {\n    return Effect.flatten(\n      Ref.modify(this.ref, (state) => {\n        switch (state._tag) {\n          case OP_STATE_EMPTY: {\n            return [Deferred.await(state.notifyProducer), state]\n          }\n          case OP_STATE_EMIT: {\n            return [\n              Effect.forEach(\n                state.notifyConsumers,\n                (deferred) => Deferred.failCause(deferred, cause),\n                { discard: true }\n              ),\n              stateError(cause) as State<Err, Elem, Done>\n            ]\n          }\n          case OP_STATE_ERROR: {\n            return [Effect.interrupt, state]\n          }\n          case OP_STATE_DONE: {\n            return [Effect.interrupt, state]\n          }\n        }\n      })\n    )\n  }\n\n  get take(): Effect.Effect<Exit.Exit<Elem, Either.Either<Done, Err>>> {\n    return this.takeWith(\n      (cause) => Exit.failCause(Cause.map(cause, Either.left)),\n      (elem) => Exit.succeed(elem) as Exit.Exit<Elem, Either.Either<Done, Err>>,\n      (done) => Exit.fail(Either.right(done))\n    )\n  }\n\n  takeWith<A>(\n    onError: (cause: Cause.Cause<Err>) => A,\n    onElement: (element: Elem) => A,\n    onDone: (value: Done) => A\n  ): Effect.Effect<A> {\n    return Effect.flatMap(Deferred.make<Either.Either<Elem, Done>, Err>(), (deferred) =>\n      Effect.flatten(\n        Ref.modify(this.ref, (state) => {\n          switch (state._tag) {\n            case OP_STATE_EMPTY: {\n              return [\n                Effect.zipRight(\n                  Deferred.succeed(state.notifyProducer, void 0),\n                  Effect.matchCause(Deferred.await(deferred), {\n                    onFailure: onError,\n                    onSuccess: Either.match({ onLeft: onDone, onRight: onElement })\n                  })\n                ),\n                stateEmit([deferred])\n              ]\n            }\n            case OP_STATE_EMIT: {\n              return [\n                Effect.matchCause(Deferred.await(deferred), {\n                  onFailure: onError,\n                  onSuccess: Either.match({ onLeft: onDone, onRight: onElement })\n                }),\n                stateEmit([...state.notifyConsumers, deferred])\n              ]\n            }\n            case OP_STATE_ERROR: {\n              return [Effect.succeed(onError(state.cause)), state]\n            }\n            case OP_STATE_DONE: {\n              return [Effect.succeed(onDone(state.done)), state]\n            }\n          }\n        })\n      ))\n  }\n}\n\n/** @internal */\nexport const make = <Err, Elem, Done>(): Effect.Effect<\n  SingleProducerAsyncInput.SingleProducerAsyncInput<Err, Elem, Done>\n> =>\n  pipe(\n    Deferred.make<void>(),\n    Effect.flatMap((deferred) => Ref.make(stateEmpty(deferred) as State<Err, Elem, Done>)),\n    Effect.map((ref) => new SingleProducerAsyncInputImpl(ref))\n  )\n"],"names":["Cause","Deferred","Effect","Either","Exit","pipe","Ref","OP_STATE_EMPTY","OP_STATE_EMIT","OP_STATE_ERROR","OP_STATE_DONE","stateEmpty","notifyProducer","_tag","stateEmit","notifyConsumers","stateError","cause","stateDone","done","SingleProducerAsyncInputImpl","ref","constructor","awaitRead","flatten","modify","state","await","void","close","fiberIdWith","fiberId","error","interrupt","value","forEach","deferred","succeed","left","discard","emit","element","flatMap","make","notifyConsumer","slice","undefined","right","length","Error","failCause","take","takeWith","map","elem","fail","onError","onElement","onDone","zipRight","matchCause","onFailure","onSuccess","match","onLeft","onRight"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"file":"mergeState.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/mergeState.ts"],"sourcesContent":["import type * as Effect from \"../../Effect.js\"\nimport type * as Either from \"../../Either.js\"\nimport type * as Exit from \"../../Exit.js\"\nimport type * as Fiber from \"../../Fiber.js\"\nimport { dual } from \"../../Function.js\"\nimport type * as MergeState from \"../../MergeState.js\"\nimport { hasProperty } from \"../../Predicate.js\"\nimport * as OpCodes from \"../opCodes/channelMergeState.js\"\n\n/** @internal */\nconst MergeStateSymbolKey = \"effect/ChannelMergeState\"\n\n/** @internal */\nexport const MergeStateTypeId: MergeState.MergeStateTypeId = Symbol.for(\n  MergeStateSymbolKey\n) as MergeState.MergeStateTypeId\n\n/** @internal */\nconst proto = {\n  [MergeStateTypeId]: MergeStateTypeId\n}\n\n/** @internal */\nexport const BothRunning = <Env, Err, Err1, Err2, Elem, Done, Done1, Done2>(\n  left: Fiber.Fiber<Either.Either<Elem, Done>, Err>,\n  right: Fiber.Fiber<Either.Either<Elem, Done1>, Err1>\n): MergeState.MergeState<Env, Err, Err1, Err2, Elem, Done, Done1, Done2> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_BOTH_RUNNING\n  op.left = left\n  op.right = right\n  return op\n}\n\n/** @internal */\nexport const LeftDone = <Env, Err, Err1, Err2, Elem, Done, Done1, Done2>(\n  f: (exit: Exit.Exit<Done1, Err1>) => Effect.Effect<Done2, Err2, Env>\n): MergeState.MergeState<Env, Err, Err1, Err2, Elem, Done, Done1, Done2> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_LEFT_DONE\n  op.f = f\n  return op\n}\n\n/** @internal */\nexport const RightDone = <Env, Err, Err1, Err2, Elem, Done, Done1, Done2>(\n  f: (exit: Exit.Exit<Done, Err>) => Effect.Effect<Done2, Err2, Env>\n): MergeState.MergeState<Env, Err, Err1, Err2, Elem, Done, Done1, Done2> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_RIGHT_DONE\n  op.f = f\n  return op\n}\n\n/** @internal */\nexport const isMergeState = (\n  u: unknown\n): u is MergeState.MergeState<unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown> =>\n  hasProperty(u, MergeStateTypeId)\n\n/** @internal */\nexport const isBothRunning = <Env, Err, Err1, Err2, Elem, Done, Done1, Done2>(\n  self: MergeState.MergeState<Env, Err, Err1, Err2, Elem, Done, Done1, Done2>\n): self is MergeState.BothRunning<Env, Err, Err1, Err2, Elem, Done, Done1, Done2> => {\n  return self._tag === OpCodes.OP_BOTH_RUNNING\n}\n\n/** @internal */\nexport const isLeftDone = <Env, Err, Err1, Err2, Elem, Done, Done1, Done2>(\n  self: MergeState.MergeState<Env, Err, Err1, Err2, Elem, Done, Done1, Done2>\n): self is MergeState.LeftDone<Env, Err, Err1, Err2, Elem, Done, Done1, Done2> => {\n  return self._tag === OpCodes.OP_LEFT_DONE\n}\n\n/** @internal */\nexport const isRightDone = <Env, Err, Err1, Err2, Elem, Done, Done1, Done2>(\n  self: MergeState.MergeState<Env, Err, Err1, Err2, Elem, Done, Done1, Done2>\n): self is MergeState.RightDone<Env, Err, Err1, Err2, Elem, Done, Done1, Done2> => {\n  return self._tag === OpCodes.OP_RIGHT_DONE\n}\n\n/** @internal */\nexport const match = dual<\n  <Env, Err, Err1, Err2, Elem, Done, Done1, Done2, Z>(\n    options: {\n      readonly onBothRunning: (\n        left: Fiber.Fiber<Either.Either<Elem, Done>, Err>,\n        right: Fiber.Fiber<Either.Either<Elem, Done1>, Err1>\n      ) => Z\n      readonly onLeftDone: (f: (exit: Exit.Exit<Done1, Err1>) => Effect.Effect<Done2, Err2, Env>) => Z\n      readonly onRightDone: (f: (exit: Exit.Exit<Done, Err>) => Effect.Effect<Done2, Err2, Env>) => Z\n    }\n  ) => (self: MergeState.MergeState<Env, Err, Err1, Err2, Elem, Done, Done1, Done2>) => Z,\n  <Env, Err, Err1, Err2, Elem, Done, Done1, Done2, Z>(\n    self: MergeState.MergeState<Env, Err, Err1, Err2, Elem, Done, Done1, Done2>,\n    options: {\n      readonly onBothRunning: (\n        left: Fiber.Fiber<Either.Either<Elem, Done>, Err>,\n        right: Fiber.Fiber<Either.Either<Elem, Done1>, Err1>\n      ) => Z\n      readonly onLeftDone: (f: (exit: Exit.Exit<Done1, Err1>) => Effect.Effect<Done2, Err2, Env>) => Z\n      readonly onRightDone: (f: (exit: Exit.Exit<Done, Err>) => Effect.Effect<Done2, Err2, Env>) => Z\n    }\n  ) => Z\n>(2, (\n  self,\n  { onBothRunning, onLeftDone, onRightDone }\n) => {\n  switch (self._tag) {\n    case OpCodes.OP_BOTH_RUNNING: {\n      return onBothRunning(self.left, self.right)\n    }\n    case OpCodes.OP_LEFT_DONE: {\n      return onLeftDone(self.f)\n    }\n    case OpCodes.OP_RIGHT_DONE: {\n      return onRightDone(self.f)\n    }\n  }\n})\n"],"names":["dual","hasProperty","OpCodes","MergeStateSymbolKey","MergeStateTypeId","Symbol","for","proto","BothRunning","left","right","op","Object","create","_tag","OP_BOTH_RUNNING","LeftDone","f","OP_LEFT_DONE","RightDone","OP_RIGHT_DONE","isMergeState","u","isBothRunning","self","isLeftDone","isRightDone","match","onBothRunning","onLeftDone","onRightDone"],"mappings":";;;;;;;;;;;AAOA,OAAO,KAAKE,OAAO,MAAM,iCAAiC;AAD1D,SAASD,WAAW,QAAQ,oBAAoB;AAFhD,SAASD,IAAI,QAAQ,mBAAmB;;;;AAKxC,cAAA,GACA,MAAMG,mBAAmB,GAAG,0BAA0B;AAG/C,MAAMC,gBAAgB,GAAA,WAAA,GAAgCC,MAAM,CAACC,GAAG,CACrEH,mBAAmB,CACW;AAEhC,cAAA,GACA,MAAMI,KAAK,GAAG;IACZ,CAACH,gBAAgB,CAAA,EAAGA;CACrB;AAGM,MAAMI,WAAW,GAAGA,CACzBC,IAAiD,EACjDC,KAAoD,KACqB;IACzE,MAAMC,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACN,KAAK,CAAC;IAC/BI,EAAE,CAACG,IAAI,GAAGZ,OAAO,iOAACa,eAAe;IACjCJ,EAAE,CAACF,IAAI,GAAGA,IAAI;IACdE,EAAE,CAACD,KAAK,GAAGA,KAAK;IAChB,OAAOC,EAAE;AACX,CAAC;AAGM,MAAMK,QAAQ,IACnBC,CAAoE,IACK;IACzE,MAAMN,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACN,KAAK,CAAC;IAC/BI,EAAE,CAACG,IAAI,GAAGZ,OAAO,iOAACgB,YAAY;IAC9BP,EAAE,CAACM,CAAC,GAAGA,CAAC;IACR,OAAON,EAAE;AACX,CAAC;AAGM,MAAMQ,SAAS,IACpBF,CAAkE,IACO;IACzE,MAAMN,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACN,KAAK,CAAC;IAC/BI,EAAE,CAACG,IAAI,GAAGZ,OAAO,iOAACkB,aAAa;IAC/BT,EAAE,CAACM,CAAC,GAAGA,CAAC;IACR,OAAON,EAAE;AACX,CAAC;AAGM,MAAMU,YAAY,IACvBC,CAAU,gNAEVrB,cAAW,AAAXA,EAAYqB,CAAC,EAAElB,gBAAgB,CAAC;AAG3B,MAAMmB,aAAa,GACxBC,IAA2E,IACO;IAClF,OAAOA,IAAI,CAACV,IAAI,KAAKZ,OAAO,iOAACa,eAAe;AAC9C,CAAC;AAGM,MAAMU,UAAU,IACrBD,IAA2E,IACI;IAC/E,OAAOA,IAAI,CAACV,IAAI,KAAKZ,OAAO,iOAACgB,YAAY;AAC3C,CAAC;AAGM,MAAMQ,WAAW,IACtBF,IAA2E,IACK;IAChF,OAAOA,IAAI,CAACV,IAAI,KAAKZ,OAAO,iOAACkB,aAAa;AAC5C,CAAC;AAGM,MAAMO,KAAK,GAAA,WAAA,+MAAG3B,OAAAA,AAAI,EAsBvB,CAAC,EAAE,CACHwB,IAAI,EACJ,EAAEI,aAAa,EAAEC,UAAU,EAAEC,WAAAA,EAAa,KACxC;IACF,OAAQN,IAAI,CAACV,IAAI;QACf,KAAKZ,OAAO,iOAACa,eAAe;YAAE;gBAC5B,OAAOa,aAAa,CAACJ,IAAI,CAACf,IAAI,EAAEe,IAAI,CAACd,KAAK,CAAC;YAC7C;QACA,KAAKR,OAAO,iOAACgB,YAAY;YAAE;gBACzB,OAAOW,UAAU,CAACL,IAAI,CAACP,CAAC,CAAC;YAC3B;QACA,KAAKf,OAAO,iOAACkB,aAAa;YAAE;gBAC1B,OAAOU,WAAW,CAACN,IAAI,CAACP,CAAC,CAAC;YAC5B;IACF;AACF,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"file":"channelState.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/channelState.ts"],"sourcesContent":["import * as Effect from \"../../Effect.js\"\nimport type * as Exit from \"../../Exit.js\"\nimport { hasProperty } from \"../../Predicate.js\"\nimport type * as Types from \"../../Types.js\"\nimport * as OpCodes from \"../opCodes/channelState.js\"\nimport type { ErasedExecutor } from \"./channelExecutor.js\"\n\n/** @internal */\nexport const ChannelStateTypeId = Symbol.for(\"effect/ChannelState\")\n\n/** @internal */\nexport type ChannelStateTypeId = typeof ChannelStateTypeId\n\n/** @internal */\nexport interface ChannelState<out E, out R> extends ChannelState.Variance<E, R> {}\n\n/** @internal */\nexport declare namespace ChannelState {\n  export interface Variance<out E, out R> {\n    readonly [ChannelStateTypeId]: {\n      readonly _E: Types.Covariant<E>\n      readonly _R: Types.Covariant<R>\n    }\n  }\n}\n\nconst channelStateVariance = {\n  /* c8 ignore next */\n  _E: (_: never) => _,\n  /* c8 ignore next */\n  _R: (_: never) => _\n}\n\n/** @internal */\nconst proto = {\n  [ChannelStateTypeId]: channelStateVariance\n}\n\n/** @internal */\nexport type Primitive =\n  | Done\n  | Emit\n  | FromEffect\n  | Read\n\n/** @internal */\nexport type Op<Tag extends string, Body = {}> = ChannelState<never, never> & Body & {\n  readonly _tag: Tag\n}\n\n/** @internal */\nexport interface Done extends Op<OpCodes.OP_DONE, {}> {}\n\n/** @internal */\nexport interface Emit extends Op<OpCodes.OP_EMIT, {}> {}\n\n/** @internal */\nexport interface FromEffect extends\n  Op<OpCodes.OP_FROM_EFFECT, {\n    readonly effect: Effect.Effect<unknown, unknown, unknown>\n  }>\n{}\n\n/** @internal */\nexport interface Read extends\n  Op<OpCodes.OP_READ, {\n    readonly upstream: ErasedExecutor<unknown>\n    onEffect(effect: Effect.Effect<void, never, unknown>): Effect.Effect<void, never, unknown>\n    onEmit(value: unknown): Effect.Effect<void, never, unknown>\n    onDone(exit: Exit.Exit<unknown, unknown>): Effect.Effect<void, never, unknown>\n  }>\n{}\n\n/** @internal */\nexport const Done = (): ChannelState<never, never> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_DONE\n  return op\n}\n\n/** @internal */\nexport const Emit = (): ChannelState<never, never> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_EMIT\n  return op\n}\n\n/** @internal */\nexport const fromEffect = <X, E, R>(effect: Effect.Effect<X, E, R>): ChannelState<E, R> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_FROM_EFFECT\n  op.effect = effect\n  return op\n}\n\n/** @internal */\nexport const Read = <R>(\n  upstream: ErasedExecutor<R>,\n  onEffect: (effect: Effect.Effect<void, never, R>) => Effect.Effect<void, never, R>,\n  onEmit: (value: unknown) => Effect.Effect<void, never, R> | undefined,\n  onDone: (exit: Exit.Exit<unknown, unknown>) => Effect.Effect<void, never, R> | undefined\n): ChannelState<never, R> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_READ\n  op.upstream = upstream\n  op.onEffect = onEffect\n  op.onEmit = onEmit\n  op.onDone = onDone\n  return op\n}\n\n/** @internal */\nexport const isChannelState = (u: unknown): u is ChannelState<unknown, unknown> => hasProperty(u, ChannelStateTypeId)\n\n/** @internal */\nexport const isDone = <E, R>(self: ChannelState<E, R>): self is Done => (self as Primitive)._tag === OpCodes.OP_DONE\n\n/** @internal */\nexport const isEmit = <E, R>(self: ChannelState<E, R>): self is Emit => (self as Primitive)._tag === OpCodes.OP_EMIT\n\n/** @internal */\nexport const isFromEffect = <E, R>(self: ChannelState<E, R>): self is FromEffect =>\n  (self as Primitive)._tag === OpCodes.OP_FROM_EFFECT\n\n/** @internal */\nexport const isRead = <E, R>(self: ChannelState<E, R>): self is Read => (self as Primitive)._tag === OpCodes.OP_READ\n\n/** @internal */\nexport const effect = <E, R>(self: ChannelState<E, R>): Effect.Effect<void, E, R> =>\n  isFromEffect(self) ? self.effect as Effect.Effect<void, E, R> : Effect.void\n\n/** @internal */\nexport const effectOrUndefinedIgnored = <E, R>(self: ChannelState<E, R>): Effect.Effect<void, E, R> | undefined =>\n  isFromEffect(self) ? Effect.ignore(self.effect as Effect.Effect<void, E, R>) : undefined\n"],"names":["Effect","hasProperty","OpCodes","ChannelStateTypeId","Symbol","for","channelStateVariance","_E","_","_R","proto","Done","op","Object","create","_tag","OP_DONE","Emit","OP_EMIT","fromEffect","effect","OP_FROM_EFFECT","Read","upstream","onEffect","onEmit","onDone","OP_READ","isChannelState","u","isDone","self","isEmit","isFromEffect","isRead","void","effectOrUndefinedIgnored","ignore","undefined"],"mappings":";;;;;;;;;;;;;;AAIA,OAAO,KAAKE,OAAO,MAAM,4BAA4B;AAFrD,SAASD,WAAW,QAAQ,oBAAoB;AAFhD,OAAO,KAAKD,MAAM,MAAM,iBAAiB;;;;AAQlC,MAAMG,kBAAkB,GAAA,WAAA,GAAGC,MAAM,CAACC,GAAG,CAAC,qBAAqB,CAAC;AAkBnE,MAAMC,oBAAoB,GAAG;IAC3B,kBAAA,GACAC,EAAE,GAAGC,CAAQ,GAAKA,CAAC;IACnB,kBAAA,GACAC,EAAE,GAAGD,CAAQ,GAAKA;CACnB;AAED,cAAA,GACA,MAAME,KAAK,GAAG;IACZ,CAACP,kBAAkB,CAAA,EAAGG;CACvB;AAsCM,MAAMK,IAAI,GAAGA,CAAA,KAAiC;IACnD,MAAMC,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC;IAC/BE,EAAE,CAACG,IAAI,GAAGb,OAAO,4NAACc,OAAO;IACzB,OAAOJ,EAAE;AACX,CAAC;AAGM,MAAMK,IAAI,GAAGA,CAAA,KAAiC;IACnD,MAAML,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC;IAC/BE,EAAE,CAACG,IAAI,GAAGb,OAAO,4NAACgB,OAAO;IACzB,OAAON,EAAE;AACX,CAAC;AAGM,MAAMO,UAAU,IAAaC,MAA8B,IAAwB;IACxF,MAAMR,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC;IAC/BE,EAAE,CAACG,IAAI,GAAGb,OAAO,4NAACmB,cAAc;IAChCT,EAAE,CAACQ,MAAM,GAAGA,MAAM;IAClB,OAAOR,EAAE;AACX,CAAC;AAGM,MAAMU,IAAI,GAAGA,CAClBC,QAA2B,EAC3BC,QAAkF,EAClFC,MAAqE,EACrEC,MAAwF,KAC9D;IAC1B,MAAMd,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC;IAC/BE,EAAE,CAACG,IAAI,GAAGb,OAAO,4NAACyB,OAAO;IACzBf,EAAE,CAACW,QAAQ,GAAGA,QAAQ;IACtBX,EAAE,CAACY,QAAQ,GAAGA,QAAQ;IACtBZ,EAAE,CAACa,MAAM,GAAGA,MAAM;IAClBb,EAAE,CAACc,MAAM,GAAGA,MAAM;IAClB,OAAOd,EAAE;AACX,CAAC;AAGM,MAAMgB,cAAc,IAAIC,CAAU,IAA0C5B,0NAAW,AAAXA,EAAY4B,CAAC,EAAE1B,kBAAkB,CAAC;AAG9G,MAAM2B,MAAM,IAAUC,IAAwB,GAAoBA,IAAkB,CAAChB,IAAI,KAAKb,OAAO,4NAACc,OAAO;AAG7G,MAAMgB,MAAM,IAAUD,IAAwB,GAAoBA,IAAkB,CAAChB,IAAI,KAAKb,OAAO,4NAACgB,OAAO;AAG7G,MAAMe,YAAY,IAAUF,IAAwB,GACxDA,IAAkB,CAAChB,IAAI,KAAKb,OAAO,4NAACmB,cAAc;AAG9C,MAAMa,MAAM,IAAUH,IAAwB,GAAoBA,IAAkB,CAAChB,IAAI,KAAKb,OAAO,4NAACyB,OAAO;AAG7G,MAAMP,MAAM,GAAUW,IAAwB,IACnDE,YAAY,CAACF,IAAI,CAAC,GAAGA,IAAI,CAACX,MAAmC,GAAGpB,MAAM,gMAACmC,IAAI;AAGtE,MAAMC,wBAAwB,IAAUL,IAAwB,GACrEE,YAAY,CAACF,IAAI,CAAC,GAAG/B,MAAM,gMAACqC,MAAM,CAACN,IAAI,CAACX,MAAmC,CAAC,GAAGkB,SAAS","ignoreList":[0]}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 646, "column": 0}, "map": {"version":3,"file":"subexecutor.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/subexecutor.ts"],"sourcesContent":["import type * as ChildExecutorDecision from \"../../ChildExecutorDecision.js\"\nimport * as Effect from \"../../Effect.js\"\nimport * as Exit from \"../../Exit.js\"\nimport { pipe } from \"../../Function.js\"\nimport type * as UpstreamPullRequest from \"../../UpstreamPullRequest.js\"\nimport type * as UpstreamPullStrategy from \"../../UpstreamPullStrategy.js\"\nimport type { ErasedChannel, ErasedExecutor } from \"./channelExecutor.js\"\n\n/** @internal */\nexport interface Subexecutor<in out R> {\n  close(exit: Exit.Exit<unknown, unknown>): Effect.Effect<unknown, never, R> | undefined\n  enqueuePullFromChild(child: PullFromChild<R>): Subexecutor<R>\n}\n\n/** @internal */\nexport type Primitive<Env> = PullFromChild<Env> | PullFromUpstream<Env> | DrainChildExecutors<Env> | Emit<Env>\n\n/** @internal */\nexport const OP_PULL_FROM_CHILD = \"PullFromChild\" as const\n\n/** @internal */\nexport type OP_PULL_FROM_CHILD = typeof OP_PULL_FROM_CHILD\n\n/** @internal */\nexport const OP_PULL_FROM_UPSTREAM = \"PullFromUpstream\" as const\n\n/** @internal */\nexport type OP_PULL_FROM_UPSTREAM = typeof OP_PULL_FROM_UPSTREAM\n\n/** @internal */\nexport const OP_DRAIN_CHILD_EXECUTORS = \"DrainChildExecutors\" as const\n\n/** @internal */\nexport type OP_DRAIN_CHILD_EXECUTORS = typeof OP_DRAIN_CHILD_EXECUTORS\n\n/** @internal */\nexport const OP_EMIT = \"Emit\" as const\n\n/** @internal */\nexport type OP_EMIT = typeof OP_EMIT\n\n/**\n * Execute the `childExecutor` and on each emitted value, decide what to do by\n * `onEmit`.\n *\n * @internal\n */\nexport class PullFromChild<in out R> implements Subexecutor<R> {\n  readonly _tag: OP_PULL_FROM_CHILD = OP_PULL_FROM_CHILD\n\n  constructor(\n    readonly childExecutor: ErasedExecutor<R>,\n    readonly parentSubexecutor: Subexecutor<R>,\n    readonly onEmit: (value: unknown) => ChildExecutorDecision.ChildExecutorDecision\n  ) {\n  }\n\n  close(exit: Exit.Exit<unknown, unknown>): Effect.Effect<unknown, never, R> | undefined {\n    const fin1 = this.childExecutor.close(exit)\n    const fin2 = this.parentSubexecutor.close(exit)\n    if (fin1 !== undefined && fin2 !== undefined) {\n      return Effect.zipWith(\n        Effect.exit(fin1),\n        Effect.exit(fin2),\n        (exit1, exit2) => pipe(exit1, Exit.zipRight(exit2))\n      )\n    } else if (fin1 !== undefined) {\n      return fin1\n    } else if (fin2 !== undefined) {\n      return fin2\n    } else {\n      return undefined\n    }\n  }\n\n  enqueuePullFromChild(_child: PullFromChild<R>): Subexecutor<R> {\n    return this\n  }\n}\n\n/**\n * Execute `upstreamExecutor` and for each emitted element, spawn a child\n * channel and continue with processing it by `PullFromChild`.\n *\n * @internal\n */\nexport class PullFromUpstream<in out R> implements Subexecutor<R> {\n  readonly _tag: OP_PULL_FROM_UPSTREAM = OP_PULL_FROM_UPSTREAM\n\n  constructor(\n    readonly upstreamExecutor: ErasedExecutor<R>,\n    readonly createChild: (value: unknown) => ErasedChannel<R>,\n    readonly lastDone: unknown,\n    readonly activeChildExecutors: ReadonlyArray<PullFromChild<R> | undefined>,\n    readonly combineChildResults: (x: unknown, y: unknown) => unknown,\n    readonly combineWithChildResult: (x: unknown, y: unknown) => unknown,\n    readonly onPull: (\n      request: UpstreamPullRequest.UpstreamPullRequest<unknown>\n    ) => UpstreamPullStrategy.UpstreamPullStrategy<unknown>,\n    readonly onEmit: (value: unknown) => ChildExecutorDecision.ChildExecutorDecision\n  ) {\n  }\n\n  close(exit: Exit.Exit<unknown, unknown>): Effect.Effect<unknown, never, R> | undefined {\n    const fin1 = this.upstreamExecutor.close(exit)\n    const fins = [\n      ...this.activeChildExecutors.map((child) =>\n        child !== undefined ?\n          child.childExecutor.close(exit) :\n          undefined\n      ),\n      fin1\n    ]\n    const result = fins.reduce(\n      (acc: Effect.Effect<Exit.Exit<unknown, unknown>, never, R> | undefined, next) => {\n        if (acc !== undefined && next !== undefined) {\n          return Effect.zipWith(\n            acc,\n            Effect.exit(next),\n            (exit1, exit2) => Exit.zipRight(exit1, exit2)\n          )\n        } else if (acc !== undefined) {\n          return acc\n        } else if (next !== undefined) {\n          return Effect.exit(next)\n        } else {\n          return undefined\n        }\n      },\n      undefined\n    )\n    return result === undefined ? result : result\n  }\n\n  enqueuePullFromChild(child: PullFromChild<R>): Subexecutor<R> {\n    return new PullFromUpstream(\n      this.upstreamExecutor,\n      this.createChild,\n      this.lastDone,\n      [...this.activeChildExecutors, child],\n      this.combineChildResults,\n      this.combineWithChildResult,\n      this.onPull,\n      this.onEmit\n    )\n  }\n}\n\n/**\n * Transformed from `PullFromUpstream` when upstream has finished but there\n * are still active child executors.\n *\n * @internal\n */\nexport class DrainChildExecutors<in out R> implements Subexecutor<R> {\n  readonly _tag: OP_DRAIN_CHILD_EXECUTORS = OP_DRAIN_CHILD_EXECUTORS\n\n  constructor(\n    readonly upstreamExecutor: ErasedExecutor<R>,\n    readonly lastDone: unknown,\n    readonly activeChildExecutors: ReadonlyArray<PullFromChild<R> | undefined>,\n    readonly upstreamDone: Exit.Exit<unknown, unknown>,\n    readonly combineChildResults: (x: unknown, y: unknown) => unknown,\n    readonly combineWithChildResult: (x: unknown, y: unknown) => unknown,\n    readonly onPull: (\n      request: UpstreamPullRequest.UpstreamPullRequest<unknown>\n    ) => UpstreamPullStrategy.UpstreamPullStrategy<unknown>\n  ) {\n  }\n\n  close(exit: Exit.Exit<unknown, unknown>): Effect.Effect<unknown, never, R> | undefined {\n    const fin1 = this.upstreamExecutor.close(exit)\n    const fins = [\n      ...this.activeChildExecutors.map((child) => (child !== undefined ?\n        child.childExecutor.close(exit) :\n        undefined)\n      ),\n      fin1\n    ]\n    const result = fins.reduce(\n      (acc: Effect.Effect<Exit.Exit<unknown, unknown>, never, R> | undefined, next) => {\n        if (acc !== undefined && next !== undefined) {\n          return Effect.zipWith(\n            acc,\n            Effect.exit(next),\n            (exit1, exit2) => Exit.zipRight(exit1, exit2)\n          )\n        } else if (acc !== undefined) {\n          return acc\n        } else if (next !== undefined) {\n          return Effect.exit(next)\n        } else {\n          return undefined\n        }\n      },\n      undefined\n    )\n    return result === undefined ? result : result\n  }\n\n  enqueuePullFromChild(child: PullFromChild<R>): Subexecutor<R> {\n    return new DrainChildExecutors(\n      this.upstreamExecutor,\n      this.lastDone,\n      [...this.activeChildExecutors, child],\n      this.upstreamDone,\n      this.combineChildResults,\n      this.combineWithChildResult,\n      this.onPull\n    )\n  }\n}\n\n/** @internal */\nexport class Emit<in out R> implements Subexecutor<R> {\n  readonly _tag: OP_EMIT = OP_EMIT\n\n  constructor(readonly value: unknown, readonly next: Subexecutor<R>) {\n  }\n\n  close(exit: Exit.Exit<unknown, unknown>): Effect.Effect<unknown, never, R> | undefined {\n    const result = this.next.close(exit)\n    return result === undefined ? result : result\n  }\n\n  enqueuePullFromChild(_child: PullFromChild<R>): Subexecutor<R> {\n    return this\n  }\n}\n"],"names":["Effect","Exit","pipe","OP_PULL_FROM_CHILD","OP_PULL_FROM_UPSTREAM","OP_DRAIN_CHILD_EXECUTORS","OP_EMIT","PullFromChild","childExecutor","parentSubexecutor","onEmit","_tag","constructor","close","exit","fin1","fin2","undefined","zipWith","exit1","exit2","zipRight","enqueuePullFromChild","_child","PullFromUpstream","upstreamExecutor","createChild","lastDone","activeChildExecutors","combineChildResults","combineWithChildResult","onPull","fins","map","child","result","reduce","acc","next","DrainChildExecutors","upstreamDone","Emit","value"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 805, "column": 0}, "map": {"version":3,"file":"upstreamPullRequest.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/upstreamPullRequest.ts"],"sourcesContent":["import { dual } from \"../../Function.js\"\nimport { hasProperty } from \"../../Predicate.js\"\nimport type * as UpstreamPullRequest from \"../../UpstreamPullRequest.js\"\nimport * as OpCodes from \"../opCodes/channelUpstreamPullRequest.js\"\n\n/** @internal */\nconst UpstreamPullRequestSymbolKey = \"effect/ChannelUpstreamPullRequest\"\n\n/** @internal */\nexport const UpstreamPullRequestTypeId: UpstreamPullRequest.UpstreamPullRequestTypeId = Symbol.for(\n  UpstreamPullRequestSymbolKey\n) as UpstreamPullRequest.UpstreamPullRequestTypeId\n\nconst upstreamPullRequestVariance = {\n  /* c8 ignore next */\n  _A: (_: never) => _\n}\n\n/** @internal */\nconst proto = {\n  [UpstreamPullRequestTypeId]: upstreamPullRequestVariance\n}\n\n/** @internal */\nexport const Pulled = <A>(value: A): UpstreamPullRequest.UpstreamPullRequest<A> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_PULLED\n  op.value = value\n  return op\n}\n\n/** @internal */\nexport const NoUpstream = (activeDownstreamCount: number): UpstreamPullRequest.UpstreamPullRequest<never> => {\n  const op = Object.create(proto)\n  op._tag = OpCodes.OP_NO_UPSTREAM\n  op.activeDownstreamCount = activeDownstreamCount\n  return op\n}\n\n/** @internal */\nexport const isUpstreamPullRequest = (u: unknown): u is UpstreamPullRequest.UpstreamPullRequest<unknown> =>\n  hasProperty(u, UpstreamPullRequestTypeId)\n\n/** @internal */\nexport const isPulled = <A>(\n  self: UpstreamPullRequest.UpstreamPullRequest<A>\n): self is UpstreamPullRequest.Pulled<A> => self._tag === OpCodes.OP_PULLED\n\n/** @internal */\nexport const isNoUpstream = <A>(\n  self: UpstreamPullRequest.UpstreamPullRequest<A>\n): self is UpstreamPullRequest.NoUpstream => self._tag === OpCodes.OP_NO_UPSTREAM\n\n/** @internal */\nexport const match = dual<\n  <A, Z>(\n    options: {\n      readonly onPulled: (value: A) => Z\n      readonly onNoUpstream: (activeDownstreamCount: number) => Z\n    }\n  ) => (self: UpstreamPullRequest.UpstreamPullRequest<A>) => Z,\n  <A, Z>(\n    self: UpstreamPullRequest.UpstreamPullRequest<A>,\n    options: {\n      readonly onPulled: (value: A) => Z\n      readonly onNoUpstream: (activeDownstreamCount: number) => Z\n    }\n  ) => Z\n>(2, <A, Z>(\n  self: UpstreamPullRequest.UpstreamPullRequest<A>,\n  { onNoUpstream, onPulled }: {\n    readonly onPulled: (value: A) => Z\n    readonly onNoUpstream: (activeDownstreamCount: number) => Z\n  }\n): Z => {\n  switch (self._tag) {\n    case OpCodes.OP_PULLED: {\n      return onPulled(self.value)\n    }\n    case OpCodes.OP_NO_UPSTREAM: {\n      return onNoUpstream(self.activeDownstreamCount)\n    }\n  }\n})\n"],"names":["dual","hasProperty","OpCodes","UpstreamPullRequestSymbolKey","UpstreamPullRequestTypeId","Symbol","for","upstreamPullRequestVariance","_A","_","proto","Pulled","value","op","Object","create","_tag","OP_PULLED","NoUpstream","activeDownstreamCount","OP_NO_UPSTREAM","isUpstreamPullRequest","u","isPulled","self","isNoUpstream","match","onNoUpstream","onPulled"],"mappings":";;;;;;;;;AAGA,OAAO,KAAKE,OAAO,MAAM,0CAA0C;AAFnE,SAASD,WAAW,QAAQ,oBAAoB;AADhD,SAASD,IAAI,QAAQ,mBAAmB;;;;AAKxC,cAAA,GACA,MAAMG,4BAA4B,GAAG,mCAAmC;AAGjE,MAAMC,yBAAyB,GAAA,WAAA,GAAkDC,MAAM,CAACC,GAAG,CAChGH,4BAA4B,CACoB;AAElD,MAAMI,2BAA2B,GAAG;IAClC,kBAAA,GACAC,EAAE,GAAGC,CAAQ,GAAKA;CACnB;AAED,cAAA,GACA,MAAMC,KAAK,GAAG;IACZ,CAACN,yBAAyB,CAAA,EAAGG;CAC9B;AAGM,MAAMI,MAAM,IAAOC,KAAQ,IAAgD;IAChF,MAAMC,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC;IAC/BG,EAAE,CAACG,IAAI,GAAGd,OAAO,0OAACe,SAAS;IAC3BJ,EAAE,CAACD,KAAK,GAAGA,KAAK;IAChB,OAAOC,EAAE;AACX,CAAC;AAGM,MAAMK,UAAU,IAAIC,qBAA6B,IAAoD;IAC1G,MAAMN,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC;IAC/BG,EAAE,CAACG,IAAI,GAAGd,OAAO,0OAACkB,cAAc;IAChCP,EAAE,CAACM,qBAAqB,GAAGA,qBAAqB;IAChD,OAAON,EAAE;AACX,CAAC;AAGM,MAAMQ,qBAAqB,IAAIC,CAAU,IAC9CrB,0NAAAA,AAAW,EAACqB,CAAC,EAAElB,yBAAyB,CAAC;AAGpC,MAAMmB,QAAQ,IACnBC,IAAgD,GACNA,IAAI,CAACR,IAAI,KAAKd,OAAO,0OAACe,SAAS;AAGpE,MAAMQ,YAAY,GACvBD,IAAgD,IACLA,IAAI,CAACR,IAAI,KAAKd,OAAO,0OAACkB,cAAc;AAG1E,MAAMM,KAAK,GAAA,WAAA,+MAAG1B,OAAAA,AAAI,EAcvB,CAAC,EAAE,CACHwB,IAAgD,EAChD,EAAEG,YAAY,EAAEC,QAAAA,EAGf,KACI;IACL,OAAQJ,IAAI,CAACR,IAAI;QACf,KAAKd,OAAO,0OAACe,SAAS;YAAE;gBACtB,OAAOW,QAAQ,CAACJ,IAAI,CAACZ,KAAK,CAAC;YAC7B;QACA,KAAKV,OAAO,0OAACkB,cAAc;YAAE;gBAC3B,OAAOO,YAAY,CAACH,IAAI,CAACL,qBAAqB,CAAC;YACjD;IACF;AACF,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 855, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"file":"channelExecutor.js","sources":["file:///Users/david/src/5.%20Semester/SoftwareEngineering-Project/node_modules/.pnpm/effect%403.10.3/node_modules/effect/src/internal/channel/channelExecutor.ts"],"sourcesContent":["import * as Cause from \"../../Cause.js\"\nimport type * as Channel from \"../../Channel.js\"\nimport type * as ChildExecutorDecision from \"../../ChildExecutorDecision.js\"\nimport type * as Context from \"../../Context.js\"\nimport * as Deferred from \"../../Deferred.js\"\nimport * as Effect from \"../../Effect.js\"\nimport * as ExecutionStrategy from \"../../ExecutionStrategy.js\"\nimport * as Exit from \"../../Exit.js\"\nimport * as Fiber from \"../../Fiber.js\"\nimport { identity, pipe } from \"../../Function.js\"\nimport * as Option from \"../../Option.js\"\nimport * as Scope from \"../../Scope.js\"\nimport type * as UpstreamPullStrategy from \"../../UpstreamPullStrategy.js\"\nimport * as core from \"../core-stream.js\"\nimport * as ChannelOpCodes from \"../opCodes/channel.js\"\nimport * as ChildExecutorDecisionOpCodes from \"../opCodes/channelChildExecutorDecision.js\"\nimport * as ChannelStateOpCodes from \"../opCodes/channelState.js\"\nimport * as UpstreamPullStrategyOpCodes from \"../opCodes/channelUpstreamPullStrategy.js\"\nimport * as ContinuationOpCodes from \"../opCodes/continuation.js\"\nimport * as ChannelState from \"./channelState.js\"\nimport * as Continuation from \"./continuation.js\"\nimport * as Subexecutor from \"./subexecutor.js\"\nimport * as upstreamPullRequest from \"./upstreamPullRequest.js\"\n\nexport type ErasedChannel<R> = Channel.Channel<unknown, unknown, unknown, unknown, unknown, unknown, R>\n\n/** @internal */\nexport type ErasedExecutor<R> = ChannelExecutor<unknown, unknown, unknown, unknown, unknown, unknown, R>\n\n/** @internal */\nexport type ErasedContinuation<R> = Continuation.Continuation<\n  R,\n  unknown,\n  unknown,\n  unknown,\n  unknown,\n  unknown,\n  unknown,\n  unknown,\n  unknown\n>\n\n/** @internal */\nexport type ErasedFinalizer<R> = (exit: Exit.Exit<unknown, unknown>) => Effect.Effect<unknown, never, R>\n\n/** @internal */\nexport class ChannelExecutor<\n  out OutElem,\n  in InElem = unknown,\n  out OutErr = never,\n  in InErr = unknown,\n  out OutDone = void,\n  in InDone = unknown,\n  in out Env = never\n> {\n  private _activeSubexecutor: Subexecutor.Subexecutor<Env> | undefined = undefined\n\n  private _cancelled: Exit.Exit<OutErr, OutDone> | undefined = undefined\n\n  private _closeLastSubstream: Effect.Effect<unknown, never, Env> | undefined = undefined\n\n  private _currentChannel: core.Primitive | undefined\n\n  private _done: Exit.Exit<unknown, unknown> | undefined = undefined\n\n  private _doneStack: Array<ErasedContinuation<Env>> = []\n\n  private _emitted: unknown | undefined = undefined\n\n  private _executeCloseLastSubstream: (\n    effect: Effect.Effect<unknown, never, Env>\n  ) => Effect.Effect<unknown, never, Env>\n\n  private _input: ErasedExecutor<Env> | undefined = undefined\n\n  private _inProgressFinalizer: Effect.Effect<unknown, never, Env> | undefined = undefined\n\n  private _providedEnv: Context.Context<unknown> | undefined\n\n  constructor(\n    initialChannel: Channel.Channel<OutElem, InElem, OutErr, InErr, OutDone, InDone, Env>,\n    providedEnv: Context.Context<unknown> | undefined,\n    executeCloseLastSubstream: (effect: Effect.Effect<unknown, never, Env>) => Effect.Effect<unknown, never, Env>\n  ) {\n    this._currentChannel = initialChannel as core.Primitive\n    this._executeCloseLastSubstream = executeCloseLastSubstream\n    this._providedEnv = providedEnv\n  }\n\n  run(): ChannelState.ChannelState<unknown, Env> {\n    let result: ChannelState.ChannelState<unknown, Env> | undefined = undefined\n    while (result === undefined) {\n      if (this._cancelled !== undefined) {\n        result = this.processCancellation()\n      } else if (this._activeSubexecutor !== undefined) {\n        result = this.runSubexecutor()\n      } else {\n        try {\n          if (this._currentChannel === undefined) {\n            result = ChannelState.Done()\n          } else {\n            if (Effect.isEffect(this._currentChannel)) {\n              this._currentChannel = core.fromEffect(this._currentChannel) as core.Primitive\n            }\n            switch (this._currentChannel._tag) {\n              case ChannelOpCodes.OP_BRACKET_OUT: {\n                result = this.runBracketOut(this._currentChannel)\n                break\n              }\n\n              case ChannelOpCodes.OP_BRIDGE: {\n                const bridgeInput = this._currentChannel.input\n\n                // PipeTo(left, Bridge(queue, channel))\n                // In a fiber: repeatedly run left and push its outputs to the queue\n                // Add a finalizer to interrupt the fiber and close the executor\n                this._currentChannel = this._currentChannel.channel as core.Primitive\n\n                if (this._input !== undefined) {\n                  const inputExecutor = this._input\n                  this._input = undefined\n\n                  const drainer = (): Effect.Effect<unknown, never, Env> =>\n                    Effect.flatMap(bridgeInput.awaitRead(), () =>\n                      Effect.suspend(() => {\n                        const state = inputExecutor.run() as ChannelState.Primitive\n                        switch (state._tag) {\n                          case ChannelStateOpCodes.OP_DONE: {\n                            return Exit.match(inputExecutor.getDone(), {\n                              onFailure: (cause) => bridgeInput.error(cause),\n                              onSuccess: (value) => bridgeInput.done(value)\n                            })\n                          }\n                          case ChannelStateOpCodes.OP_EMIT: {\n                            return Effect.flatMap(\n                              bridgeInput.emit(inputExecutor.getEmit()),\n                              () => drainer()\n                            )\n                          }\n                          case ChannelStateOpCodes.OP_FROM_EFFECT: {\n                            return Effect.matchCauseEffect(state.effect, {\n                              onFailure: (cause) => bridgeInput.error(cause),\n                              onSuccess: () => drainer()\n                            })\n                          }\n                          case ChannelStateOpCodes.OP_READ: {\n                            return readUpstream(\n                              state,\n                              () => drainer(),\n                              (cause) => bridgeInput.error(cause)\n                            )\n                          }\n                        }\n                      })) as Effect.Effect<unknown, never, Env>\n\n                  result = ChannelState.fromEffect(\n                    Effect.flatMap(\n                      Effect.forkDaemon(Effect.interruptible(drainer())),\n                      (fiber) =>\n                        Effect.sync(() =>\n                          this.addFinalizer((exit) =>\n                            Effect.flatMap(Fiber.interrupt(fiber), () =>\n                              Effect.suspend(() => {\n                                const effect = this.restorePipe(exit, inputExecutor)\n                                return effect !== undefined ? effect : Effect.void\n                              }))\n                          )\n                        )\n                    )\n                  )\n                }\n\n                break\n              }\n\n              case ChannelOpCodes.OP_CONCAT_ALL: {\n                const executor: ErasedExecutor<Env> = new ChannelExecutor(\n                  this._currentChannel.value() as Channel.Channel<\n                    never,\n                    unknown,\n                    never,\n                    unknown,\n                    never,\n                    unknown,\n                    Env\n                  >,\n                  this._providedEnv,\n                  (effect) =>\n                    Effect.sync(() => {\n                      const prevLastClose = this._closeLastSubstream === undefined\n                        ? Effect.void\n                        : this._closeLastSubstream\n                      this._closeLastSubstream = pipe(prevLastClose, Effect.zipRight(effect))\n                    })\n                )\n                executor._input = this._input\n\n                const channel = this._currentChannel\n                this._activeSubexecutor = new Subexecutor.PullFromUpstream(\n                  executor,\n                  (value) => channel.k(value),\n                  undefined,\n                  [],\n                  (x, y) => channel.combineInners(x, y),\n                  (x, y) => channel.combineAll(x, y),\n                  (request) => channel.onPull(request),\n                  (value) => channel.onEmit(value)\n                )\n\n                this._closeLastSubstream = undefined\n                this._currentChannel = undefined\n\n                break\n              }\n\n              case ChannelOpCodes.OP_EMIT: {\n                this._emitted = this._currentChannel.out\n                this._currentChannel = (this._activeSubexecutor !== undefined ?\n                  undefined :\n                  core.void) as core.Primitive | undefined\n                result = ChannelState.Emit()\n                break\n              }\n\n              case ChannelOpCodes.OP_ENSURING: {\n                this.runEnsuring(this._currentChannel)\n                break\n              }\n\n              case ChannelOpCodes.OP_FAIL: {\n                result = this.doneHalt(this._currentChannel.error())\n                break\n              }\n\n              case ChannelOpCodes.OP_FOLD: {\n                this._doneStack.push(this._currentChannel.k as ErasedContinuation<Env>)\n                this._currentChannel = this._currentChannel.channel as core.Primitive\n                break\n              }\n\n              case ChannelOpCodes.OP_FROM_EFFECT: {\n                const effect = this._providedEnv === undefined ?\n                  this._currentChannel.effect() :\n                  pipe(\n                    this._currentChannel.effect(),\n                    Effect.provide(this._providedEnv)\n                  )\n\n                result = ChannelState.fromEffect(\n                  Effect.matchCauseEffect(effect, {\n                    onFailure: (cause) => {\n                      const state = this.doneHalt(cause)\n                      return state !== undefined && ChannelState.isFromEffect(state) ?\n                        state.effect :\n                        Effect.void\n                    },\n                    onSuccess: (value) => {\n                      const state = this.doneSucceed(value)\n                      return state !== undefined && ChannelState.isFromEffect(state) ?\n                        state.effect :\n                        Effect.void\n                    }\n                  })\n                ) as ChannelState.ChannelState<unknown, Env> | undefined\n\n                break\n              }\n\n              case ChannelOpCodes.OP_PIPE_TO: {\n                const previousInput = this._input\n\n                const leftExec: ErasedExecutor<Env> = new ChannelExecutor(\n                  this._currentChannel.left() as Channel.Channel<never, unknown, never, unknown, never, unknown, Env>,\n                  this._providedEnv,\n                  (effect) => this._executeCloseLastSubstream(effect)\n                )\n                leftExec._input = previousInput\n                this._input = leftExec\n\n                this.addFinalizer((exit) => {\n                  const effect = this.restorePipe(exit, previousInput)\n                  return effect !== undefined ? effect : Effect.void\n                })\n\n                this._currentChannel = this._currentChannel.right() as core.Primitive\n\n                break\n              }\n\n              case ChannelOpCodes.OP_PROVIDE: {\n                const previousEnv = this._providedEnv\n                this._providedEnv = this._currentChannel.context()\n                this._currentChannel = this._currentChannel.inner as core.Primitive\n                this.addFinalizer(() =>\n                  Effect.sync(() => {\n                    this._providedEnv = previousEnv\n                  })\n                )\n                break\n              }\n\n              case ChannelOpCodes.OP_READ: {\n                const read = this._currentChannel\n                result = ChannelState.Read(\n                  this._input!,\n                  identity,\n                  (emitted) => {\n                    try {\n                      this._currentChannel = read.more(emitted) as core.Primitive\n                    } catch (error) {\n                      this._currentChannel = read.done.onExit(Exit.die(error)) as core.Primitive\n                    }\n                    return undefined\n                  },\n                  (exit) => {\n                    const onExit = (exit: Exit.Exit<unknown, unknown>): core.Primitive => {\n                      return read.done.onExit(exit) as core.Primitive\n                    }\n                    this._currentChannel = onExit(exit)\n                    return undefined\n                  }\n                )\n                break\n              }\n\n              case ChannelOpCodes.OP_SUCCEED: {\n                result = this.doneSucceed(this._currentChannel.evaluate())\n                break\n              }\n\n              case ChannelOpCodes.OP_SUCCEED_NOW: {\n                result = this.doneSucceed(this._currentChannel.terminal)\n                break\n              }\n\n              case ChannelOpCodes.OP_SUSPEND: {\n                this._currentChannel = this._currentChannel.channel() as core.Primitive\n                break\n              }\n\n              default: {\n                // @ts-expect-error\n                this._currentChannel._tag\n              }\n            }\n          }\n        } catch (error) {\n          this._currentChannel = core.failCause(Cause.die(error)) as core.Primitive\n        }\n      }\n    }\n    return result\n  }\n\n  getDone(): Exit.Exit<OutDone, OutErr> {\n    return this._done as Exit.Exit<OutDone, OutErr>\n  }\n\n  getEmit(): OutElem {\n    return this._emitted as OutElem\n  }\n\n  cancelWith(exit: Exit.Exit<OutErr, OutDone>): void {\n    this._cancelled = exit\n  }\n\n  clearInProgressFinalizer(): void {\n    this._inProgressFinalizer = undefined\n  }\n\n  storeInProgressFinalizer(finalizer: Effect.Effect<unknown, never, Env> | undefined): void {\n    this._inProgressFinalizer = finalizer\n  }\n\n  popAllFinalizers(exit: Exit.Exit<unknown, unknown>): Effect.Effect<unknown, never, Env> {\n    const finalizers: Array<ErasedFinalizer<Env>> = []\n    let next = this._doneStack.pop() as Continuation.Primitive | undefined\n    while (next) {\n      if (next._tag === \"ContinuationFinalizer\") {\n        finalizers.push(next.finalizer as ErasedFinalizer<Env>)\n      }\n      next = this._doneStack.pop() as Continuation.Primitive | undefined\n    }\n    const effect = (finalizers.length === 0 ? Effect.void : runFinalizers(finalizers, exit)) as Effect.Effect<\n      unknown,\n      never,\n      Env\n    >\n    this.storeInProgressFinalizer(effect)\n    return effect\n  }\n\n  popNextFinalizers(): Array<Continuation.ContinuationFinalizer<Env, unknown, unknown>> {\n    const builder: Array<Continuation.ContinuationFinalizer<Env, unknown, unknown>> = []\n    while (this._doneStack.length !== 0) {\n      const cont = this._doneStack[this._doneStack.length - 1] as Continuation.Primitive\n      if (cont._tag === ContinuationOpCodes.OP_CONTINUATION_K) {\n        return builder\n      }\n      builder.push(cont as Continuation.ContinuationFinalizer<Env, unknown, unknown>)\n      this._doneStack.pop()\n    }\n    return builder\n  }\n\n  restorePipe(\n    exit: Exit.Exit<unknown, unknown>,\n    prev: ErasedExecutor<Env> | undefined\n  ): Effect.Effect<unknown, never, Env> | undefined {\n    const currInput = this._input\n    this._input = prev\n    if (currInput !== undefined) {\n      const effect = currInput.close(exit)\n      return effect\n    }\n    return Effect.void\n  }\n\n  close(exit: Exit.Exit<unknown, unknown>): Effect.Effect<unknown, never, Env> | undefined {\n    let runInProgressFinalizers: Effect.Effect<unknown, never, Env> | undefined = undefined\n    const finalizer = this._inProgressFinalizer\n    if (finalizer !== undefined) {\n      runInProgressFinalizers = pipe(\n        finalizer,\n        Effect.ensuring(Effect.sync(() => this.clearInProgressFinalizer()))\n      )\n    }\n\n    let closeSelf: Effect.Effect<unknown, never, Env> | undefined = undefined\n    const selfFinalizers = this.popAllFinalizers(exit)\n    if (selfFinalizers !== undefined) {\n      closeSelf = pipe(\n        selfFinalizers,\n        Effect.ensuring(Effect.sync(() => this.clearInProgressFinalizer()))\n      )\n    }\n\n    const closeSubexecutors = this._activeSubexecutor === undefined ?\n      undefined :\n      this._activeSubexecutor.close(exit)\n\n    if (\n      closeSubexecutors === undefined &&\n      runInProgressFinalizers === undefined &&\n      closeSelf === undefined\n    ) {\n      return undefined\n    }\n\n    return pipe(\n      Effect.exit(ifNotNull(closeSubexecutors)),\n      Effect.zip(Effect.exit(ifNotNull(runInProgressFinalizers))),\n      Effect.zip(Effect.exit(ifNotNull(closeSelf))),\n      Effect.map(([[exit1, exit2], exit3]) => pipe(exit1, Exit.zipRight(exit2), Exit.zipRight(exit3))),\n      Effect.uninterruptible,\n      // TODO: remove\n      Effect.flatMap((exit) => Effect.suspend(() => exit))\n    )\n  }\n\n  doneSucceed(value: unknown): ChannelState.ChannelState<unknown, Env> | undefined {\n    if (this._doneStack.length === 0) {\n      this._done = Exit.succeed(value)\n      this._currentChannel = undefined\n      return ChannelState.Done()\n    }\n\n    const head = this._doneStack[this._doneStack.length - 1] as Continuation.Primitive\n    if (head._tag === ContinuationOpCodes.OP_CONTINUATION_K) {\n      this._doneStack.pop()\n      this._currentChannel = head.onSuccess(value) as core.Primitive\n      return undefined\n    }\n\n    const finalizers = this.popNextFinalizers()\n    if (this._doneStack.length === 0) {\n      this._doneStack = finalizers.reverse()\n      this._done = Exit.succeed(value)\n      this._currentChannel = undefined\n      return ChannelState.Done()\n    }\n\n    const finalizerEffect = runFinalizers(finalizers.map((f) => f.finalizer), Exit.succeed(value))!\n    this.storeInProgressFinalizer(finalizerEffect)\n\n    const effect = pipe(\n      finalizerEffect,\n      Effect.ensuring(Effect.sync(() => this.clearInProgressFinalizer())),\n      Effect.uninterruptible,\n      Effect.flatMap(() => Effect.sync(() => this.doneSucceed(value)))\n    )\n\n    return ChannelState.fromEffect(effect)\n  }\n\n  doneHalt(cause: Cause.Cause<unknown>): ChannelState.ChannelState<unknown, Env> | undefined {\n    if (this._doneStack.length === 0) {\n      this._done = Exit.failCause(cause)\n      this._currentChannel = undefined\n      return ChannelState.Done()\n    }\n\n    const head = this._doneStack[this._doneStack.length - 1] as Continuation.Primitive\n    if (head._tag === ContinuationOpCodes.OP_CONTINUATION_K) {\n      this._doneStack.pop()\n      this._currentChannel = head.onHalt(cause) as core.Primitive\n      return undefined\n    }\n\n    const finalizers = this.popNextFinalizers()\n    if (this._doneStack.length === 0) {\n      this._doneStack = finalizers.reverse()\n      this._done = Exit.failCause(cause)\n      this._currentChannel = undefined\n      return ChannelState.Done()\n    }\n\n    const finalizerEffect = runFinalizers(finalizers.map((f) => f.finalizer), Exit.failCause(cause))!\n    this.storeInProgressFinalizer(finalizerEffect)\n\n    const effect = pipe(\n      finalizerEffect,\n      Effect.ensuring(Effect.sync(() => this.clearInProgressFinalizer())),\n      Effect.uninterruptible,\n      Effect.flatMap(() => Effect.sync(() => this.doneHalt(cause)))\n    )\n\n    return ChannelState.fromEffect(effect)\n  }\n\n  processCancellation(): ChannelState.ChannelState<unknown, Env> {\n    this._currentChannel = undefined\n    this._done = this._cancelled\n    this._cancelled = undefined\n    return ChannelState.Done()\n  }\n\n  runBracketOut(bracketOut: core.BracketOut): ChannelState.ChannelState<unknown, Env> {\n    const effect = Effect.uninterruptible(\n      Effect.matchCauseEffect(this.provide(bracketOut.acquire() as Effect.Effect<OutDone, OutErr, Env>), {\n        onFailure: (cause) =>\n          Effect.sync(() => {\n            this._currentChannel = core.failCause(cause) as core.Primitive\n          }),\n        onSuccess: (out) =>\n          Effect.sync(() => {\n            this.addFinalizer((exit) =>\n              this.provide(bracketOut.finalizer(out, exit)) as Effect.Effect<unknown, never, Env>\n            )\n            this._currentChannel = core.write(out) as core.Primitive\n          })\n      })\n    )\n    return ChannelState.fromEffect(effect) as ChannelState.ChannelState<unknown, Env>\n  }\n\n  provide(effect: Effect.Effect<unknown, unknown, unknown>): Effect.Effect<unknown, unknown, unknown> {\n    if (this._providedEnv === undefined) {\n      return effect\n    }\n    return pipe(effect, Effect.provide(this._providedEnv))\n  }\n\n  runEnsuring(ensuring: core.Ensuring): void {\n    this.addFinalizer(ensuring.finalizer as ErasedFinalizer<Env>)\n    this._currentChannel = ensuring.channel as core.Primitive\n  }\n\n  addFinalizer(f: ErasedFinalizer<Env>): void {\n    this._doneStack.push(new Continuation.ContinuationFinalizerImpl(f))\n  }\n\n  runSubexecutor(): ChannelState.ChannelState<unknown, Env> | undefined {\n    const subexecutor = this._activeSubexecutor as Subexecutor.Primitive<Env>\n    switch (subexecutor._tag) {\n      case Subexecutor.OP_PULL_FROM_CHILD: {\n        return this.pullFromChild(\n          subexecutor.childExecutor,\n          subexecutor.parentSubexecutor,\n          subexecutor.onEmit,\n          subexecutor\n        )\n      }\n      case Subexecutor.OP_PULL_FROM_UPSTREAM: {\n        return this.pullFromUpstream(subexecutor)\n      }\n      case Subexecutor.OP_DRAIN_CHILD_EXECUTORS: {\n        return this.drainChildExecutors(subexecutor)\n      }\n      case Subexecutor.OP_EMIT: {\n        this._emitted = subexecutor.value\n        this._activeSubexecutor = subexecutor.next\n        return ChannelState.Emit()\n      }\n    }\n  }\n\n  replaceSubexecutor(nextSubExec: Subexecutor.Subexecutor<Env>): void {\n    this._currentChannel = undefined\n    this._activeSubexecutor = nextSubExec\n  }\n\n  finishWithExit(exit: Exit.Exit<unknown, unknown>): Effect.Effect<unknown, unknown, Env> {\n    const state = Exit.match(exit, {\n      onFailure: (cause) => this.doneHalt(cause),\n      onSuccess: (value) => this.doneSucceed(value)\n    })\n    this._activeSubexecutor = undefined\n    return state === undefined ?\n      Effect.void :\n      ChannelState.effect(state)\n  }\n\n  finishSubexecutorWithCloseEffect(\n    subexecutorDone: Exit.Exit<unknown, unknown>,\n    ...closeFuncs: Array<(exit: Exit.Exit<unknown, unknown>) => Effect.Effect<unknown, never, Env> | undefined>\n  ): ChannelState.ChannelState<unknown, Env> | undefined {\n    this.addFinalizer(() =>\n      pipe(\n        closeFuncs,\n        Effect.forEach((closeFunc) =>\n          pipe(\n            Effect.sync(() => closeFunc(subexecutorDone)),\n            Effect.flatMap((closeEffect) => closeEffect !== undefined ? closeEffect : Effect.void)\n          ), { discard: true })\n      )\n    )\n    const state = pipe(\n      subexecutorDone,\n      Exit.match({\n        onFailure: (cause) => this.doneHalt(cause),\n        onSuccess: (value) => this.doneSucceed(value)\n      })\n    )\n    this._activeSubexecutor = undefined\n    return state\n  }\n\n  applyUpstreamPullStrategy(\n    upstreamFinished: boolean,\n    queue: ReadonlyArray<Subexecutor.PullFromChild<Env> | undefined>,\n    strategy: UpstreamPullStrategy.UpstreamPullStrategy<unknown>\n  ): [Option.Option<unknown>, ReadonlyArray<Subexecutor.PullFromChild<Env> | undefined>] {\n    switch (strategy._tag) {\n      case UpstreamPullStrategyOpCodes.OP_PULL_AFTER_NEXT: {\n        const shouldPrepend = !upstreamFinished || queue.some((subexecutor) => subexecutor !== undefined)\n        return [strategy.emitSeparator, shouldPrepend ? [undefined, ...queue] : queue]\n      }\n      case UpstreamPullStrategyOpCodes.OP_PULL_AFTER_ALL_ENQUEUED: {\n        const shouldEnqueue = !upstreamFinished || queue.some((subexecutor) => subexecutor !== undefined)\n        return [strategy.emitSeparator, shouldEnqueue ? [...queue, undefined] : queue]\n      }\n    }\n  }\n\n  pullFromChild(\n    childExecutor: ErasedExecutor<Env>,\n    parentSubexecutor: Subexecutor.Subexecutor<Env>,\n    onEmitted: (emitted: unknown) => ChildExecutorDecision.ChildExecutorDecision,\n    subexecutor: Subexecutor.PullFromChild<Env>\n  ): ChannelState.ChannelState<unknown, Env> | undefined {\n    return ChannelState.Read(\n      childExecutor,\n      identity,\n      (emitted) => {\n        const childExecutorDecision = onEmitted(emitted)\n        switch (childExecutorDecision._tag) {\n          case ChildExecutorDecisionOpCodes.OP_CONTINUE: {\n            break\n          }\n          case ChildExecutorDecisionOpCodes.OP_CLOSE: {\n            this.finishWithDoneValue(childExecutor, parentSubexecutor, childExecutorDecision.value)\n            break\n          }\n          case ChildExecutorDecisionOpCodes.OP_YIELD: {\n            const modifiedParent = parentSubexecutor.enqueuePullFromChild(subexecutor)\n            this.replaceSubexecutor(modifiedParent)\n            break\n          }\n        }\n        this._activeSubexecutor = new Subexecutor.Emit(emitted, this._activeSubexecutor!)\n        return undefined\n      },\n      Exit.match({\n        onFailure: (cause) => {\n          const state = this.handleSubexecutorFailure(childExecutor, parentSubexecutor, cause)\n          return state === undefined ?\n            undefined :\n            ChannelState.effectOrUndefinedIgnored(state) as Effect.Effect<void, never, Env>\n        },\n        onSuccess: (doneValue) => {\n          this.finishWithDoneValue(childExecutor, parentSubexecutor, doneValue)\n          return undefined\n        }\n      })\n    )\n  }\n\n  finishWithDoneValue(\n    childExecutor: ErasedExecutor<Env>,\n    parentSubexecutor: Subexecutor.Subexecutor<Env>,\n    doneValue: unknown\n  ): void {\n    const subexecutor = parentSubexecutor as Subexecutor.Primitive<Env>\n    switch (subexecutor._tag) {\n      case Subexecutor.OP_PULL_FROM_UPSTREAM: {\n        const modifiedParent = new Subexecutor.PullFromUpstream(\n          subexecutor.upstreamExecutor,\n          subexecutor.createChild,\n          subexecutor.lastDone !== undefined\n            ? subexecutor.combineChildResults(\n              subexecutor.lastDone,\n              doneValue\n            )\n            : doneValue,\n          subexecutor.activeChildExecutors,\n          subexecutor.combineChildResults,\n          subexecutor.combineWithChildResult,\n          subexecutor.onPull,\n          subexecutor.onEmit\n        )\n        this._closeLastSubstream = childExecutor.close(Exit.succeed(doneValue))\n        this.replaceSubexecutor(modifiedParent)\n        break\n      }\n      case Subexecutor.OP_DRAIN_CHILD_EXECUTORS: {\n        const modifiedParent = new Subexecutor.DrainChildExecutors(\n          subexecutor.upstreamExecutor,\n          subexecutor.lastDone !== undefined\n            ? subexecutor.combineChildResults(\n              subexecutor.lastDone,\n              doneValue\n            )\n            : doneValue,\n          subexecutor.activeChildExecutors,\n          subexecutor.upstreamDone,\n          subexecutor.combineChildResults,\n          subexecutor.combineWithChildResult,\n          subexecutor.onPull\n        )\n        this._closeLastSubstream = childExecutor.close(Exit.succeed(doneValue))\n        this.replaceSubexecutor(modifiedParent)\n        break\n      }\n      default: {\n        break\n      }\n    }\n  }\n\n  handleSubexecutorFailure(\n    childExecutor: ErasedExecutor<Env>,\n    parentSubexecutor: Subexecutor.Subexecutor<Env>,\n    cause: Cause.Cause<unknown>\n  ): ChannelState.ChannelState<unknown, Env> | undefined {\n    return this.finishSubexecutorWithCloseEffect(\n      Exit.failCause(cause),\n      (exit) => parentSubexecutor.close(exit),\n      (exit) => childExecutor.close(exit)\n    )\n  }\n\n  pullFromUpstream(\n    subexecutor: Subexecutor.PullFromUpstream<Env>\n  ): ChannelState.ChannelState<unknown, Env> | undefined {\n    if (subexecutor.activeChildExecutors.length === 0) {\n      return this.performPullFromUpstream(subexecutor)\n    }\n\n    const activeChild = subexecutor.activeChildExecutors[0]\n\n    const parentSubexecutor = new Subexecutor.PullFromUpstream(\n      subexecutor.upstreamExecutor,\n      subexecutor.createChild,\n      subexecutor.lastDone,\n      subexecutor.activeChildExecutors.slice(1),\n      subexecutor.combineChildResults,\n      subexecutor.combineWithChildResult,\n      subexecutor.onPull,\n      subexecutor.onEmit\n    )\n\n    if (activeChild === undefined) {\n      return this.performPullFromUpstream(parentSubexecutor)\n    }\n\n    this.replaceSubexecutor(\n      new Subexecutor.PullFromChild(\n        activeChild.childExecutor,\n        parentSubexecutor,\n        activeChild.onEmit\n      )\n    )\n\n    return undefined\n  }\n\n  performPullFromUpstream(\n    subexecutor: Subexecutor.PullFromUpstream<Env>\n  ): ChannelState.ChannelState<unknown, Env> | undefined {\n    return ChannelState.Read(\n      subexecutor.upstreamExecutor,\n      (effect) => {\n        const closeLastSubstream = this._closeLastSubstream === undefined ? Effect.void : this._closeLastSubstream\n        this._closeLastSubstream = undefined\n        return pipe(\n          this._executeCloseLastSubstream(closeLastSubstream),\n          Effect.zipRight(effect)\n        )\n      },\n      (emitted) => {\n        if (this._closeLastSubstream !== undefined) {\n          const closeLastSubstream = this._closeLastSubstream\n          this._closeLastSubstream = undefined\n          return pipe(\n            this._executeCloseLastSubstream(closeLastSubstream),\n            Effect.map(() => {\n              const childExecutor: ErasedExecutor<Env> = new ChannelExecutor(\n                subexecutor.createChild(emitted),\n                this._providedEnv,\n                this._executeCloseLastSubstream\n              )\n\n              childExecutor._input = this._input\n\n              const [emitSeparator, updatedChildExecutors] = this.applyUpstreamPullStrategy(\n                false,\n                subexecutor.activeChildExecutors,\n                subexecutor.onPull(upstreamPullRequest.Pulled(emitted))\n              )\n\n              this._activeSubexecutor = new Subexecutor.PullFromChild(\n                childExecutor,\n                new Subexecutor.PullFromUpstream(\n                  subexecutor.upstreamExecutor,\n                  subexecutor.createChild,\n                  subexecutor.lastDone,\n                  updatedChildExecutors,\n                  subexecutor.combineChildResults,\n                  subexecutor.combineWithChildResult,\n                  subexecutor.onPull,\n                  subexecutor.onEmit\n                ),\n                subexecutor.onEmit\n              )\n\n              if (Option.isSome(emitSeparator)) {\n                this._activeSubexecutor = new Subexecutor.Emit(emitSeparator.value, this._activeSubexecutor)\n              }\n\n              return undefined\n            })\n          )\n        }\n\n        const childExecutor: ErasedExecutor<Env> = new ChannelExecutor(\n          subexecutor.createChild(emitted),\n          this._providedEnv,\n          this._executeCloseLastSubstream\n        )\n\n        childExecutor._input = this._input\n\n        const [emitSeparator, updatedChildExecutors] = this.applyUpstreamPullStrategy(\n          false,\n          subexecutor.activeChildExecutors,\n          subexecutor.onPull(upstreamPullRequest.Pulled(emitted))\n        )\n\n        this._activeSubexecutor = new Subexecutor.PullFromChild(\n          childExecutor,\n          new Subexecutor.PullFromUpstream(\n            subexecutor.upstreamExecutor,\n            subexecutor.createChild,\n            subexecutor.lastDone,\n            updatedChildExecutors,\n            subexecutor.combineChildResults,\n            subexecutor.combineWithChildResult,\n            subexecutor.onPull,\n            subexecutor.onEmit\n          ),\n          subexecutor.onEmit\n        )\n\n        if (Option.isSome(emitSeparator)) {\n          this._activeSubexecutor = new Subexecutor.Emit(emitSeparator.value, this._activeSubexecutor)\n        }\n\n        return undefined\n      },\n      (exit) => {\n        if (subexecutor.activeChildExecutors.some((subexecutor) => subexecutor !== undefined)) {\n          const drain = new Subexecutor.DrainChildExecutors(\n            subexecutor.upstreamExecutor,\n            subexecutor.lastDone,\n            [undefined, ...subexecutor.activeChildExecutors],\n            subexecutor.upstreamExecutor.getDone(),\n            subexecutor.combineChildResults,\n            subexecutor.combineWithChildResult,\n            subexecutor.onPull\n          )\n\n          if (this._closeLastSubstream !== undefined) {\n            const closeLastSubstream = this._closeLastSubstream\n            this._closeLastSubstream = undefined\n            return pipe(\n              this._executeCloseLastSubstream(closeLastSubstream),\n              Effect.map(() => this.replaceSubexecutor(drain))\n            )\n          }\n\n          this.replaceSubexecutor(drain)\n\n          return undefined\n        }\n\n        const closeLastSubstream = this._closeLastSubstream\n        const state = this.finishSubexecutorWithCloseEffect(\n          pipe(exit, Exit.map((a) => subexecutor.combineWithChildResult(subexecutor.lastDone, a))),\n          () => closeLastSubstream,\n          (exit) => subexecutor.upstreamExecutor.close(exit)\n        )\n        return state === undefined ?\n          undefined :\n          // NOTE: assuming finalizers cannot fail\n          ChannelState.effectOrUndefinedIgnored(state as ChannelState.ChannelState<never, Env>)\n      }\n    )\n  }\n\n  drainChildExecutors(\n    subexecutor: Subexecutor.DrainChildExecutors<Env>\n  ): ChannelState.ChannelState<unknown, Env> | undefined {\n    if (subexecutor.activeChildExecutors.length === 0) {\n      const lastClose = this._closeLastSubstream\n      if (lastClose !== undefined) {\n        this.addFinalizer(() => Effect.succeed(lastClose))\n      }\n      return this.finishSubexecutorWithCloseEffect(\n        subexecutor.upstreamDone,\n        () => lastClose,\n        (exit) => subexecutor.upstreamExecutor.close(exit)\n      )\n    }\n\n    const activeChild = subexecutor.activeChildExecutors[0]\n    const rest = subexecutor.activeChildExecutors.slice(1)\n\n    if (activeChild === undefined) {\n      const [emitSeparator, remainingExecutors] = this.applyUpstreamPullStrategy(\n        true,\n        rest,\n        subexecutor.onPull(\n          upstreamPullRequest.NoUpstream(rest.reduce((n, curr) => curr !== undefined ? n + 1 : n, 0))\n        )\n      )\n\n      this.replaceSubexecutor(\n        new Subexecutor.DrainChildExecutors(\n          subexecutor.upstreamExecutor,\n          subexecutor.lastDone,\n          remainingExecutors,\n          subexecutor.upstreamDone,\n          subexecutor.combineChildResults,\n          subexecutor.combineWithChildResult,\n          subexecutor.onPull\n        )\n      )\n\n      if (Option.isSome(emitSeparator)) {\n        this._emitted = emitSeparator.value\n        return ChannelState.Emit()\n      }\n\n      return undefined\n    }\n\n    const parentSubexecutor = new Subexecutor.DrainChildExecutors(\n      subexecutor.upstreamExecutor,\n      subexecutor.lastDone,\n      rest,\n      subexecutor.upstreamDone,\n      subexecutor.combineChildResults,\n      subexecutor.combineWithChildResult,\n      subexecutor.onPull\n    )\n\n    this.replaceSubexecutor(\n      new Subexecutor.PullFromChild(\n        activeChild.childExecutor,\n        parentSubexecutor,\n        activeChild.onEmit\n      )\n    )\n\n    return undefined\n  }\n}\n\nconst ifNotNull = <Env>(effect: Effect.Effect<unknown, never, Env> | undefined): Effect.Effect<unknown, never, Env> =>\n  effect !== undefined ? effect : Effect.void\n\nconst runFinalizers = <Env>(\n  finalizers: Array<ErasedFinalizer<Env>>,\n  exit: Exit.Exit<unknown, unknown>\n): Effect.Effect<unknown, never, Env> => {\n  return pipe(\n    Effect.forEach(finalizers, (fin) => Effect.exit(fin(exit))),\n    Effect.map((exits) => pipe(Exit.all(exits), Option.getOrElse(() => Exit.void))),\n    Effect.flatMap((exit) => Effect.suspend(() => exit as Exit.Exit<unknown>))\n  )\n}\n\n/**\n * @internal\n */\nexport const readUpstream = <A, E2, R, E>(\n  r: ChannelState.Read,\n  onSuccess: () => Effect.Effect<A, E2, R>,\n  onFailure: (cause: Cause.Cause<E>) => Effect.Effect<A, E2, R>\n): Effect.Effect<A, E2, R> => {\n  const readStack = [r as ChannelState.Read]\n  const read = (): Effect.Effect<A, E2, R> => {\n    const current = readStack.pop()\n    if (current === undefined || current.upstream === undefined) {\n      return Effect.dieMessage(\"Unexpected end of input for channel execution\")\n    }\n    const state = current.upstream.run() as ChannelState.Primitive\n    switch (state._tag) {\n      case ChannelStateOpCodes.OP_EMIT: {\n        const emitEffect = current.onEmit(current.upstream.getEmit())\n        if (readStack.length === 0) {\n          if (emitEffect === undefined) {\n            return Effect.suspend(onSuccess)\n          }\n          return pipe(\n            emitEffect as Effect.Effect<void>,\n            Effect.matchCauseEffect({ onFailure, onSuccess })\n          )\n        }\n        if (emitEffect === undefined) {\n          return Effect.suspend(() => read())\n        }\n        return pipe(\n          emitEffect as Effect.Effect<void>,\n          Effect.matchCauseEffect({ onFailure, onSuccess: () => read() })\n        )\n      }\n\n      case ChannelStateOpCodes.OP_DONE: {\n        const doneEffect = current.onDone(current.upstream.getDone())\n        if (readStack.length === 0) {\n          if (doneEffect === undefined) {\n            return Effect.suspend(onSuccess)\n          }\n          return pipe(\n            doneEffect as Effect.Effect<void>,\n            Effect.matchCauseEffect({ onFailure, onSuccess })\n          )\n        }\n        if (doneEffect === undefined) {\n          return Effect.suspend(() => read())\n        }\n        return pipe(\n          doneEffect as Effect.Effect<void>,\n          Effect.matchCauseEffect({ onFailure, onSuccess: () => read() })\n        )\n      }\n\n      case ChannelStateOpCodes.OP_FROM_EFFECT: {\n        readStack.push(current)\n        return pipe(\n          current.onEffect(state.effect as Effect.Effect<void>) as Effect.Effect<void>,\n          Effect.catchAllCause((cause) =>\n            Effect.suspend(() => {\n              const doneEffect = current.onDone(Exit.failCause(cause)) as Effect.Effect<void>\n              return doneEffect === undefined ? Effect.void : doneEffect\n            })\n          ),\n          Effect.matchCauseEffect({ onFailure, onSuccess: () => read() })\n        )\n      }\n\n      case ChannelStateOpCodes.OP_READ: {\n        readStack.push(current)\n        readStack.push(state)\n        return Effect.suspend(() => read())\n      }\n    }\n  }\n  return read()\n}\n\n/** @internal */\nexport const run = <Env, InErr, InDone, OutErr, OutDone>(\n  self: Channel.Channel<never, unknown, OutErr, InErr, OutDone, InDone, Env>\n): Effect.Effect<OutDone, OutErr, Exclude<Env, Scope.Scope>> => pipe(runScoped(self), Effect.scoped)\n\n/** @internal */\nexport const runScoped = <Env, InErr, InDone, OutErr, OutDone>(\n  self: Channel.Channel<never, unknown, OutErr, InErr, OutDone, InDone, Env>\n): Effect.Effect<OutDone, OutErr, Env | Scope.Scope> => {\n  const run = (\n    channelDeferred: Deferred.Deferred<OutDone, OutErr>,\n    scopeDeferred: Deferred.Deferred<void>,\n    scope: Scope.Scope\n  ) =>\n    Effect.acquireUseRelease(\n      Effect.sync(() => new ChannelExecutor(self, void 0, identity)),\n      (exec) =>\n        Effect.suspend(() =>\n          pipe(\n            runScopedInterpret(exec.run() as ChannelState.ChannelState<OutErr, Env>, exec),\n            Effect.intoDeferred(channelDeferred),\n            Effect.zipRight(Deferred.await(channelDeferred)),\n            Effect.zipLeft(Deferred.await(scopeDeferred))\n          )\n        ),\n      (exec, exit) => {\n        const finalize = exec.close(exit)\n        if (finalize === undefined) {\n          return Effect.void\n        }\n        return Effect.tapErrorCause(\n          finalize,\n          (cause) => Scope.addFinalizer(scope, Effect.failCause(cause))\n        )\n      }\n    )\n  return Effect.uninterruptibleMask((restore) =>\n    Effect.flatMap(Effect.scope, (parent) =>\n      pipe(\n        Effect.all([\n          Scope.fork(parent, ExecutionStrategy.sequential),\n          Deferred.make<OutDone, OutErr>(),\n          Deferred.make<void>()\n        ]),\n        Effect.flatMap(([child, channelDeferred, scopeDeferred]) =>\n          pipe(\n            Effect.forkScoped(restore(run(channelDeferred, scopeDeferred, child))),\n            Effect.flatMap((fiber) =>\n              pipe(\n                Scope.addFinalizer(\n                  parent,\n                  Deferred.succeed(scopeDeferred, void 0).pipe(\n                    Effect.zipRight(Effect.yieldNow())\n                  )\n                ),\n                Effect.zipRight(restore(Deferred.await(channelDeferred))),\n                Effect.zipLeft(Fiber.inheritAll(fiber))\n              )\n            )\n          )\n        )\n      ))\n  )\n}\n\n/** @internal */\nconst runScopedInterpret = <Env, InErr, InDone, OutErr, OutDone>(\n  channelState: ChannelState.ChannelState<OutErr, Env>,\n  exec: ChannelExecutor<never, unknown, OutErr, InErr, OutDone, InDone, Env>\n): Effect.Effect<OutDone, OutErr, Env> => {\n  const op = channelState as ChannelState.Primitive\n  switch (op._tag) {\n    case ChannelStateOpCodes.OP_FROM_EFFECT: {\n      return pipe(\n        op.effect as Effect.Effect<OutDone, OutErr, Env>,\n        Effect.flatMap(() => runScopedInterpret(exec.run() as ChannelState.ChannelState<OutErr, Env>, exec))\n      )\n    }\n    case ChannelStateOpCodes.OP_EMIT: {\n      // Can't really happen because Out <:< Nothing. So just skip ahead.\n      return runScopedInterpret<Env, InErr, InDone, OutErr, OutDone>(\n        exec.run() as ChannelState.ChannelState<OutErr, Env>,\n        exec\n      )\n    }\n    case ChannelStateOpCodes.OP_DONE: {\n      return Effect.suspend(() => exec.getDone())\n    }\n    case ChannelStateOpCodes.OP_READ: {\n      return readUpstream(\n        op,\n        () => runScopedInterpret(exec.run() as ChannelState.ChannelState<OutErr, Env>, exec),\n        Effect.failCause\n      ) as Effect.Effect<OutDone, OutErr, Env>\n    }\n  }\n}\n"],"names":["Cause","Deferred","Effect","ExecutionStrategy","Exit","Fiber","identity","pipe","Option","Scope","core","ChannelOpCodes","ChildExecutorDecisionOpCodes","ChannelStateOpCodes","UpstreamPullStrategyOpCodes","ContinuationOpCodes","ChannelState","Continuation","Subexecutor","upstreamPullRequest","ChannelExecutor","_activeSubexecutor","undefined","_cancelled","_closeLastSubstream","_currentChannel","_done","_doneStack","_emitted","_executeCloseLastSubstream","_input","_inProgressFinalizer","_providedEnv","constructor","initialChannel","providedEnv","executeCloseLastSubstream","run","result","processCancellation","runSubexecutor","Done","isEffect","fromEffect","_tag","OP_BRACKET_OUT","runBracketOut","OP_BRIDGE","bridgeInput","input","channel","inputExecutor","drainer","flatMap","awaitRead","suspend","state","OP_DONE","match","getDone","onFailure","cause","error","onSuccess","value","done","OP_EMIT","emit","getEmit","OP_FROM_EFFECT","matchCauseEffect","effect","OP_READ","readUpstream","forkDaemon","interruptible","fiber","sync","addFinalizer","exit","interrupt","restorePipe","void","OP_CONCAT_ALL","executor","prevLastClose","zipRight","PullFromUpstream","k","x","y","combineInners","combineAll","request","onPull","onEmit","out","Emit","OP_ENSURING","runEnsuring","OP_FAIL","doneHalt","OP_FOLD","push","provide","isFromEffect","doneSucceed","OP_PIPE_TO","previousInput","leftExec","left","right","OP_PROVIDE","previousEnv","context","inner","read","Read","emitted","more","onExit","die","OP_SUCCEED","evaluate","OP_SUCCEED_NOW","terminal","OP_SUSPEND","failCause","cancelWith","clearInProgressFinalizer","storeInProgressFinalizer","finalizer","popAllFinalizers","finalizers","next","pop","length","runFinalizers","popNextFinalizers","builder","cont","OP_CONTINUATION_K","prev","currInput","close","runInProgressFinalizers","ensuring","closeSelf","selfFinalizers","closeSubexecutors","ifNotNull","zip","map","exit1","exit2","exit3","uninterruptible","succeed","head","reverse","finalizerEffect","f","onHalt","bracketOut","acquire","write","ContinuationFinalizerImpl","subexecutor","OP_PULL_FROM_CHILD","pullFromChild","childExecutor","parentSubexecutor","OP_PULL_FROM_UPSTREAM","pullFromUpstream","OP_DRAIN_CHILD_EXECUTORS","drainChildExecutors","replaceSubexecutor","nextSubExec","finishWithExit","finishSubexecutorWithCloseEffect","subexecutorDone","closeFuncs","forEach","closeFunc","closeEffect","discard","applyUpstreamPullStrategy","upstreamFinished","queue","strategy","OP_PULL_AFTER_NEXT","shouldPrepend","some","emitSeparator","OP_PULL_AFTER_ALL_ENQUEUED","shouldEnqueue","onEmitted","childExecutorDecision","OP_CONTINUE","OP_CLOSE","finishWithDoneValue","OP_YIELD","modifiedParent","enqueuePullFromChild","handleSubexecutorFailure","effectOrUndefinedIgnored","doneValue","upstreamExecutor","createChild","lastDone","combineChildResults","activeChildExecutors","combineWithChildResult","DrainChildExecutors","upstreamDone","performPullFromUpstream","activeChild","slice","PullFromChild","closeLastSubstream","updatedChildExecutors","Pulled","isSome","drain","a","lastClose","rest","remainingExecutors","NoUpstream","reduce","n","curr","fin","exits","all","getOrElse","r","readStack","current","upstream","dieMessage","emitEffect","doneEffect","onDone","onEffect","catchAllCause","self","runScoped","scoped","channelDeferred","scopeDeferred","scope","acquireUseRelease","exec","runScopedInterpret","intoDeferred","await","zipLeft","finalize","tapErrorCause","uninterruptibleMask","restore","parent","fork","sequential","make","child","forkScoped","yieldNow","inheritAll","channelState","op"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}